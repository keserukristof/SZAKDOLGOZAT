{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\src\\\\components\\\\CostumCard.js\";\nimport React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 50, (x - window.innerWidth / 2) / 100, 1.1];\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nconst useStyles = makeStyles({\n  media: {\n    height: 240\n  },\n  card: {\n    maxWidth: 700\n  }\n});\n\nconst CostumCard = ({\n  image,\n  hover,\n  title,\n  description\n}) => {\n  const classes = useStyles();\n  const [cardStyle, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 3,\n      tension: 250,\n      friction: 30\n    }\n  }));\n  return React.createElement(animated.div, {\n    onMouseMove: ({\n      clientX: x,\n      clientY: y\n    }) => set({\n      xys: calc(x, y)\n    }),\n    onMouseLeave: () => set({\n      xys: [0, 0, 1]\n    }),\n    style: {\n      transform: cardStyle.xys.interpolate(trans)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: image,\n    title: hover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, description)))));\n};\n\nCostumCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  hover: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\nexport default CostumCard;","map":{"version":3,"sources":["C:/Users/Kristof/Documents/GitHub/SZAKDOLGOZAT/your-time-frontend/src/components/CostumCard.js"],"names":["React","useSpring","animated","PropTypes","makeStyles","Card","CardActionArea","CardContent","CardMedia","Typography","calc","x","y","window","innerHeight","innerWidth","trans","s","useStyles","media","height","card","maxWidth","CostumCard","image","hover","title","description","classes","cardStyle","set","xys","config","mass","tension","friction","clientX","clientY","transform","interpolate","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU,CACrB,EAAEA,CAAC,GAAGC,MAAM,CAACC,WAAP,GAAqB,CAA3B,IAAgC,EADX,EAErB,CAACH,CAAC,GAAGE,MAAM,CAACE,UAAP,GAAoB,CAAzB,IAA8B,GAFT,EAGrB,GAHqB,CAAvB;;AAKA,MAAMC,KAAK,GAAG,CAACL,CAAD,EAAIC,CAAJ,EAAOK,CAAP,KACX,8BAA6BN,CAAE,gBAAeC,CAAE,cAAaK,CAAE,GADlE;;AAGA,MAAMC,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GADoB;AAI3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAJqB,CAAD,CAA5B;;AASA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA;AAAvB,CAAD,KAA0C;AAC3D,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,QAAM,CAACW,SAAD,EAAYC,GAAZ,IAAmB7B,SAAS,CAAC,OAAO;AACxC8B,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADmC;AAExCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAFgC,GAAP,CAAD,CAAlC;AAKA,SACE,oBAAC,QAAD,CAAU,GAAV;AACE,IAAA,WAAW,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAEzB,CAAX;AAAc0B,MAAAA,OAAO,EAAEzB;AAAvB,KAAD,KAAgCkB,GAAG,CAAC;AAAEC,MAAAA,GAAG,EAAErB,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAX,KAAD,CADlD;AAEE,IAAA,YAAY,EAAE,MAAMkB,GAAG,CAAC;AAAEC,MAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,KAAD,CAFzB;AAGE,IAAA,KAAK,EAAE;AAAEO,MAAAA,SAAS,EAAET,SAAS,CAACE,GAAV,CAAcQ,WAAd,CAA0BvB,KAA1B;AAAb,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEY,OAAO,CAACP,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEO,OAAO,CAACT,KAA9B;AAAqC,IAAA,KAAK,EAAEK,KAA5C;AAAmD,IAAA,KAAK,EAAEC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WADH,CAJF,CAFF,CADF,CALF,CADF;AAqBD,CA7BD;;AA+BAJ,UAAU,CAACiB,SAAX,GAAuB;AACrBhB,EAAAA,KAAK,EAAErB,SAAS,CAACsC,MAAV,CAAiBC,UADH;AAErBjB,EAAAA,KAAK,EAAEtB,SAAS,CAACsC,MAAV,CAAiBC,UAFH;AAGrBhB,EAAAA,KAAK,EAAEvB,SAAS,CAACsC,MAAV,CAAiBC,UAHH;AAIrBf,EAAAA,WAAW,EAAExB,SAAS,CAACsC,MAAV,CAAiBC;AAJT,CAAvB;AAOA,eAAenB,UAAf","sourcesContent":["import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst calc = (x, y) => [\n  -(y - window.innerHeight / 2) / 50,\n  (x - window.innerWidth / 2) / 100,\n  1.1,\n];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nconst useStyles = makeStyles({\n  media: {\n    height: 240,\n  },\n  card: {\n    maxWidth: 700,\n  },\n});\n\nconst CostumCard = ({ image, hover, title, description }) => {\n  const classes = useStyles();\n\n  const [cardStyle, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 3, tension: 250, friction: 30 },\n  }));\n\n  return (\n    <animated.div\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n      style={{ transform: cardStyle.xys.interpolate(trans) }}\n    >\n      <Card className={classes.card}>\n        <CardActionArea>\n          <CardMedia className={classes.media} image={image} title={hover} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </animated.div>\n  );\n};\n\nCostumCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  hover: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default CostumCard;\n"]},"metadata":{},"sourceType":"module"}