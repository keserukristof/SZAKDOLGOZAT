{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\src\\\\pages\\\\Notes.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport NoteForm from '../components/notes/NoteForm';\nimport NoteList from '../components/notes/NoteList';\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: []\n    };\n    this.addNote = this.addNote.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/api/notes').then(res => {\n      const notes = res.data;\n      this.setState({\n        notes\n      });\n    });\n  }\n\n  addNote(note) {\n    this.setState({\n      notes: [...this.state.notes, note]\n    });\n    axios.post('/api/notes', note).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  toggleComplete(id) {\n    let noteToSend;\n    this.setState({\n      notes: this.state.notes.map(note => {\n        if (note.id === id) {\n          noteToSend = note;\n          return { ...note,\n            completed: !note.completed\n          };\n        }\n\n        return note;\n      })\n    });\n    noteToSend = { ...noteToSend,\n      completed: !noteToSend.completed\n    };\n    axios.patch('api/notes', noteToSend).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  removeNote(id) {\n    console.log(id);\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== id)\n    });\n    axios.delete('api/notes/', {\n      params: {\n        id: id\n      }\n    }).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Add note!\"))), React.createElement(NoteForm, {\n      addNote: this.addNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(NoteList, {\n      notes: this.state.notes,\n      toggleComplete: this.toggleComplete,\n      removeNote: this.removeNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["C:/Users/Kristof/Documents/GitHub/SZAKDOLGOZAT/your-time-frontend/src/pages/Notes.js"],"names":["React","Component","axios","Grid","NoteForm","NoteList","Notes","constructor","props","state","notes","addNote","bind","toggleComplete","removeNote","componentDidMount","get","then","res","data","setState","note","post","console","log","id","noteToSend","map","completed","patch","filter","delete","params","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { Grid } from '@material-ui/core';\n\nimport NoteForm from '../components/notes/NoteForm';\nimport NoteList from '../components/notes/NoteList';\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n    };\n    this.addNote = this.addNote.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/api/notes').then((res) => {\n      const notes = res.data;\n      this.setState({ notes });\n    });\n  }\n\n  addNote(note) {\n    this.setState({ notes: [...this.state.notes, note] });\n    axios.post('/api/notes', note).then((res) => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  toggleComplete(id) {\n    let noteToSend;\n    this.setState({\n      notes: this.state.notes.map((note) => {\n        if (note.id === id) {\n          noteToSend = note;\n          return {\n            ...note,\n            completed: !note.completed,\n          };\n        }\n        return note;\n      }),\n    });\n    noteToSend = { ...noteToSend, completed: !noteToSend.completed };\n    axios.patch('api/notes', noteToSend).then((res) => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  removeNote(id) {\n    console.log(id);\n    this.setState({ notes: this.state.notes.filter((note) => note.id !== id) });\n    axios.delete('api/notes/', { params: { id: id } }).then((res) => {\n      console.log(res);\n      console.log(res.data);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Grid container justify=\"space-around\">\n          <Grid item>\n            <h1>Add note!</h1>\n          </Grid>\n        </Grid>\n        <NoteForm addNote={this.addNote} />\n        <NoteList\n          notes={this.state.notes}\n          toggleComplete={this.toggleComplete}\n          removeNote={this.removeNote}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Notes;\n"]},"metadata":{},"sourceType":"module"}