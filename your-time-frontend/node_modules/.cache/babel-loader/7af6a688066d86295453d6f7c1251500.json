{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\src\\\\pages\\\\Notes.js\";\nimport React, { Component } from 'react';\nimport NoteForm from '../components/notes/NoteForm';\nimport { Grid } from '@material-ui/core';\nimport NoteList from '../components/notes/NoteList';\nexport default class NotesClassBased extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addNote = note => {\n      this.setState({\n        notes: [...this.state.notes, note]\n      });\n      fetch('http://localhost:5000/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      }).then(result => {\n        console.log(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.toggleComplete = (id, note) => {\n      this.setState({\n        notes: [...this.state.notes, this.state.notes.map(note => {\n          if (note.id === id) {\n            return { ...note,\n              completed: !note.completed\n            };\n          }\n\n          return note;\n        })]\n      });\n      fetch('http://localhost:5000/api/appointments', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.notes.map(note => {\n          if (note.id === id) {\n            return { ...note,\n              completed: !note.completed\n            };\n          }\n\n          return note;\n        }))\n      }).then(result => {\n        console.log(result);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.removeNote = id => {\n      const filteredNotes = this.state.notes.filter(note => note.id !== id);\n      this.setState({\n        notes: [filteredNotes]\n      });\n      console.log(this.state.notes);\n    };\n\n    this.state = {\n      notes: []\n    };\n    this.addNote = this.addNote.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/api/notes').then(res => res.json()).then(notes => {\n      if (notes) {\n        for (const note of notes) {\n          this.setState({\n            notes: [...this.state.notes, note]\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Add note!\"))), React.createElement(NoteForm, {\n      addNote: this.addNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(NoteList, {\n      notes: this.state.notes,\n      toggleComplete: this.toggleComplete,\n      removeNote: this.removeNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Kristof/Documents/GitHub/SZAKDOLGOZAT/your-time-frontend/src/pages/Notes.js"],"names":["React","Component","NoteForm","Grid","NoteList","NotesClassBased","constructor","props","addNote","note","setState","notes","state","fetch","method","headers","body","JSON","stringify","then","result","console","log","catch","err","toggleComplete","id","map","completed","removeNote","filteredNotes","filter","bind","componentDidMount","res","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport NoteForm from '../components/notes/NoteForm';\r\nimport { Grid } from '@material-ui/core';\r\nimport NoteList from '../components/notes/NoteList';\r\n\r\nexport default class NotesClassBased extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notes: [],\r\n    };\r\n    this.addNote = this.addNote.bind(this);\r\n    this.toggleComplete = this.toggleComplete.bind(this);\r\n    this.removeNote = this.removeNote.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('/api/notes')\r\n      .then((res) => res.json())\r\n      .then((notes) => {\r\n        if (notes) {\r\n          for (const note of notes) {\r\n            this.setState({ notes: [...this.state.notes, note] });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  addNote = note => {\r\n    this.setState({ notes: [...this.state.notes, note] });\r\n    fetch('http://localhost:5000/api/notes', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(note),\r\n    })\r\n      .then((result) => {\r\n        console.log(result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  toggleComplete = (id, note) => {\r\n    this.setState({\r\n      notes: [\r\n        ...this.state.notes,\r\n        this.state.notes.map((note) => {\r\n          if (note.id === id) {\r\n            return {\r\n              ...note,\r\n              completed: !note.completed,\r\n            };\r\n          }\r\n          return note;\r\n        }),\r\n      ]\r\n    });\r\n \r\n    fetch('http://localhost:5000/api/appointments', {\r\n      method: 'PATCH',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(this.state.notes.map((note) => {\r\n        if (note.id === id) {\r\n          return {\r\n            ...note,\r\n            completed: !note.completed,\r\n          };\r\n        }\r\n        return note;\r\n      })),\r\n    })\r\n      .then((result) => {\r\n        console.log(result);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  removeNote = (id) => {\r\n    const filteredNotes = this.state.notes.filter((note) => note.id !== id);\r\n    this.setState({ notes: [filteredNotes] });\r\n    console.log(this.state.notes);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container justify='space-around'>\r\n          <Grid item>\r\n            <h1>Add note!</h1>\r\n          </Grid>\r\n        </Grid>\r\n        <NoteForm addNote={this.addNote} />\r\n        <NoteList\r\n          notes={this.state.notes}\r\n          toggleComplete={this.toggleComplete}\r\n          removeNote={this.removeNote}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}