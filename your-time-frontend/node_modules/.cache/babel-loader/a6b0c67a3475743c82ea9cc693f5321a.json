{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\src\\\\components\\\\notes\\\\NoteList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Note from './Note';\nimport { fetchNotes } from '../actions/notesActions';\nimport { connect } from 'react-redux';\n\nconst NoteList = ({\n  notes,\n  toggleComplete,\n  removeNote\n}) => {\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.notes.map(note => React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleComplete: toggleComplete,\n    removeNote: removeNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })))));\n};\n\nNoteList.propTypes = {\n  notes: PropTypes.array.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  removeNote: PropTypes.func.isRequired\n};\n\nconst mapStateToPops = state => ({\n  notes: state.notes.items\n});\n\nexport default connect(mapStateToProps, {\n  fetchNotes\n})(NoteList);","map":{"version":3,"sources":["C:/Users/Kristof/Documents/GitHub/SZAKDOLGOZAT/your-time-frontend/src/components/notes/NoteList.js"],"names":["React","PropTypes","List","Grid","Note","fetchNotes","connect","NoteList","notes","toggleComplete","removeNote","props","map","note","id","propTypes","array","isRequired","func","mapStateToPops","state","items","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,cAAT;AAAyBC,EAAAA;AAAzB,CAAD,KAA2C;AAC1D,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACH,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,IACf,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,cAAc,EAAEJ,cAHlB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CADF;AAgBD,CAjBD;;AAmBAH,QAAQ,CAACQ,SAAT,GAAqB;AACnBP,EAAAA,KAAK,EAAEP,SAAS,CAACe,KAAV,CAAgBC,UADJ;AAEnBR,EAAAA,cAAc,EAAER,SAAS,CAACiB,IAAV,CAAeD,UAFZ;AAGnBP,EAAAA,UAAU,EAAET,SAAS,CAACiB,IAAV,CAAeD;AAHR,CAArB;;AAMA,MAAME,cAAc,GAAIC,KAAD,KAAY;AACjCZ,EAAAA,KAAK,EAAEY,KAAK,CAACZ,KAAN,CAAYa;AADc,CAAZ,CAAvB;;AAIA,eAAef,OAAO,CAACgB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,QAAzC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\n\nimport Note from './Note';\n\nimport { fetchNotes } from '../actions/notesActions';\nimport { connect } from 'react-redux';\n\nconst NoteList = ({ notes, toggleComplete, removeNote }) => {\n  return (\n    <List>\n      <Grid container spacing={4}>\n        {props.notes.map((note) => (\n          <Grid item xs>\n            <Note\n              key={note.id}\n              note={note}\n              toggleComplete={toggleComplete}\n              removeNote={removeNote}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </List>\n  );\n};\n\nNoteList.propTypes = {\n  notes: PropTypes.array.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  removeNote: PropTypes.func.isRequired,\n};\n\nconst mapStateToPops = (state) => ({\n  notes: state.notes.items,\n});\n\nexport default connect(mapStateToProps, { fetchNotes })(NoteList);\n"]},"metadata":{},"sourceType":"module"}