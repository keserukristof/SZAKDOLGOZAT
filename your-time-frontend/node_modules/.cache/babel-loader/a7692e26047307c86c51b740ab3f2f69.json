{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import NoteForm from\"../components/notes/NoteForm\";import{MuiThemeProvider,Grid}from\"@material-ui/core\";import NoteList from\"../components/notes/NoteList\";import{useSpring,animated}from\"react-spring\";var Notes=function Notes(){var animation=useSpring({from:{marginLeft:-1000},to:{marginLeft:0},config:{duration:1000}});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var addNote=function addNote(note){setNotes([note].concat(_toConsumableArray(notes)));};var toggleComplete=function toggleComplete(id){setNotes(notes.map(function(note){if(note.id===id){return _objectSpread({},note,{completed:!note.completed});}return note;}));};var removeNote=function removeNote(id){setNotes(notes.filter(function(note){return note.id!==id;}));};return React.createElement(animated.div,{style:animation},React.createElement(MuiThemeProvider,null,React.createElement(Grid,{container:true,justify:\"space-around\"},React.createElement(Grid,{item:true},React.createElement(\"h1\",null,\"Add note!\")))),React.createElement(NoteForm,{addNote:addNote}),React.createElement(NoteList,{notes:notes,toggleComplete:toggleComplete,removeNote:removeNote}));};export default Notes;","map":{"version":3,"sources":["C:/Users/Kristof/Documents/GitHub/SZAKDOLGOZAT/your-time-frontend/src/pages/Notes.js"],"names":["React","useState","NoteForm","MuiThemeProvider","Grid","NoteList","useSpring","animated","Notes","animation","from","marginLeft","to","config","duration","notes","setNotes","addNote","note","toggleComplete","id","map","completed","removeNote","filter"],"mappings":"8dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,OAASC,gBAAT,CAA2BC,IAA3B,KAAuC,mBAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,cAApC,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAMC,CAAAA,SAAS,CAAGH,SAAS,CAAC,CAC1BI,IAAI,CAAE,CAAEC,UAAU,CAAE,CAAC,IAAf,CADoB,CAE1BC,EAAE,CAAE,CAAED,UAAU,CAAE,CAAd,CAFsB,CAG1BE,MAAM,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAHkB,CAAD,CAA3B,CADkB,cAOQb,QAAQ,CAAC,EAAD,CAPhB,wCAOXc,KAPW,eAOJC,QAPI,eASlB,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CACtBF,QAAQ,EAAEE,IAAF,4BAAWH,KAAX,GAAR,CACD,CAFD,CAIA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,EAAE,CAAI,CAC3BJ,QAAQ,CACND,KAAK,CAACM,GAAN,CAAU,SAAAH,IAAI,CAAI,CAChB,GAAIA,IAAI,CAACE,EAAL,GAAYA,EAAhB,CAAoB,CAClB,wBACKF,IADL,EAEEI,SAAS,CAAE,CAACJ,IAAI,CAACI,SAFnB,GAID,CACD,MAAOJ,CAAAA,IAAP,CACD,CARD,CADM,CAAR,CAWD,CAZD,CAcA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAH,EAAE,CAAI,CACvBJ,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,SAAAN,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAhB,EAAjB,CAAD,CAAR,CACD,CAFD,CAIA,MACE,qBAAC,QAAD,CAAU,GAAV,EAAc,KAAK,CAAEX,SAArB,EACE,oBAAC,gBAAD,MACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,cAAxB,EACE,oBAAC,IAAD,EAAM,IAAI,KAAV,EACE,0CADF,CADF,CADF,CADF,CAQE,oBAAC,QAAD,EAAU,OAAO,CAAEQ,OAAnB,EARF,CASE,oBAAC,QAAD,EACE,KAAK,CAAEF,KADT,CAEE,cAAc,CAAEI,cAFlB,CAGE,UAAU,CAAEI,UAHd,EATF,CADF,CAiBD,CAhDD,CAkDA,cAAef,CAAAA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteForm from \"../components/notes/NoteForm\";\r\nimport { MuiThemeProvider, Grid } from \"@material-ui/core\";\r\nimport NoteList from \"../components/notes/NoteList\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\n\r\nconst Notes = () => {\r\n  const animation = useSpring({\r\n    from: { marginLeft: -1000 },\r\n    to: { marginLeft: 0 },\r\n    config: { duration: 1000 }\r\n  });\r\n  \r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const addNote = note => {\r\n    setNotes([note, ...notes]);\r\n  };\r\n\r\n  const toggleComplete = id => {\r\n    setNotes(\r\n      notes.map(note => {\r\n        if (note.id === id) {\r\n          return {\r\n            ...note,\r\n            completed: !note.completed\r\n          };\r\n        }\r\n        return note;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeNote = id => {\r\n    setNotes(notes.filter(note => note.id !== id));\r\n  };\r\n\r\n  return (\r\n    <animated.div style={animation}>\r\n      <MuiThemeProvider>\r\n        <Grid container justify=\"space-around\">\r\n          <Grid item>\r\n            <h1>Add note!</h1>\r\n          </Grid>\r\n        </Grid>\r\n      </MuiThemeProvider>\r\n      <NoteForm addNote={addNote} />\r\n      <NoteList\r\n        notes={notes}\r\n        toggleComplete={toggleComplete}\r\n        removeNote={removeNote}\r\n      />\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n"]},"metadata":{},"sourceType":"module"}