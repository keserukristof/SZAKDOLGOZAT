{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristof\\\\Documents\\\\GitHub\\\\SZAKDOLGOZAT\\\\your-time-frontend\\\\src\\\\components\\\\time-table\\\\TimeTableComponent.js\";\n\n/* eslint-disable react/destructuring-assignment */\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, WeekView, Appointments, DragDropProvider, EditRecurrenceMenu, AllDayPanel } from '@devexpress/dx-react-scheduler-material-ui';\nimport { recurrenceAppointments } from \"../../data/recurrenceAppointments\";\nconst dragDisableIds = new Set([]);\n\nconst allowDrag = ({\n  id\n}) => !dragDisableIds.has(id);\n\nconst appointmentComponent = props => {\n  if (allowDrag(props.data)) {\n    return React.createElement(Appointments.Appointment, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Appointments.Appointment, Object.assign({}, props, {\n    style: { ...props.style,\n      cursor: 'not-allowed'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nclass TimeTableComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: recurrenceAppointments,\n      currentDate: new Date()\n    };\n    this.onCommitChanges = this.commitChanges.bind(this);\n  }\n\n  commitChanges({\n    added,\n    changed,\n    deleted\n  }) {\n    this.setState(state => {\n      let {\n        data\n      } = state;\n\n      if (added) {\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n        data = [...data, {\n          id: startingAddedId,\n          ...added\n        }];\n      }\n\n      if (changed) {\n        data = data.map(appointment => changed[appointment.id] ? { ...appointment,\n          ...changed[appointment.id]\n        } : appointment);\n      }\n\n      if (deleted !== undefined) {\n        data = data.filter(appointment => appointment.id !== deleted);\n      }\n\n      return {\n        data\n      };\n    });\n  }\n\n  render() {\n    const {\n      data,\n      currentDate\n    } = this.state;\n    return React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Scheduler, {\n      data: data,\n      height: 660,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ViewState, {\n      defaultCurrentDate: currentDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(EditingState, {\n      onCommitChanges: this.onCommitChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(EditRecurrenceMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(WeekView, {\n      startDayHour: 9,\n      endDayHour: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Appointments, {\n      appointmentComponent: appointmentComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(AllDayPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(DragDropProvider, {\n      allowDrag: allowDrag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TimeTableComponent;","map":{"version":3,"sources":["C:/Users/Kristof/Documents/GitHub/SZAKDOLGOZAT/your-time-frontend/src/components/time-table/TimeTableComponent.js"],"names":["React","Paper","ViewState","EditingState","Scheduler","WeekView","Appointments","DragDropProvider","EditRecurrenceMenu","AllDayPanel","recurrenceAppointments","dragDisableIds","Set","allowDrag","id","has","appointmentComponent","props","data","style","cursor","TimeTableComponent","PureComponent","constructor","state","currentDate","Date","onCommitChanges","commitChanges","bind","added","changed","deleted","setState","startingAddedId","length","map","appointment","undefined","filter","render"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\r\nimport * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  Appointments,\r\n  DragDropProvider,\r\n  EditRecurrenceMenu,\r\n  AllDayPanel,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n\r\nimport { recurrenceAppointments } from \"../../data/recurrenceAppointments\"\r\n\r\nconst dragDisableIds = new Set([]);\r\n\r\nconst allowDrag = ({ id }) => !dragDisableIds.has(id);\r\nconst appointmentComponent = (props) => {\r\n  if (allowDrag(props.data)) {\r\n    return <Appointments.Appointment {...props} />;\r\n  } return <Appointments.Appointment {...props} style={{ ...props.style, cursor: 'not-allowed' }} />;\r\n};\r\n\r\n class TimeTableComponent extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: recurrenceAppointments,\r\n      currentDate: new Date(),\r\n    };\r\n\r\n    this.onCommitChanges = this.commitChanges.bind(this);\r\n  }\r\n\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState((state) => {\r\n      let { data } = state;\r\n      if (added) {\r\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n        data = [...data, { id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        data = data.map(appointment => (\r\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\r\n      }\r\n      if (deleted !== undefined) {\r\n        data = data.filter(appointment => appointment.id !== deleted);\r\n      }\r\n      return { data };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data, currentDate } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler\r\n          data={data}\r\n          height={660}\r\n        >\r\n          <ViewState\r\n            defaultCurrentDate={currentDate}\r\n          />\r\n          <EditingState\r\n            onCommitChanges={this.onCommitChanges}\r\n          />\r\n          <EditRecurrenceMenu />\r\n          <WeekView\r\n            startDayHour={9}\r\n            endDayHour={16}\r\n          />\r\n          <Appointments\r\n            appointmentComponent={appointmentComponent}\r\n          />\r\n          <AllDayPanel />\r\n          <DragDropProvider\r\n            allowDrag={allowDrag}\r\n          />\r\n        </Scheduler>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeTableComponent"]},"metadata":{},"sourceType":"module"}