{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-scheduler-material-ui\n * Generated: 2020-03-04\n * Version: 2.5.0\n * License: https://js.devexpress.com/Licensing\n */\nimport React__default, { createElement, memo, useRef, useState, useEffect, useCallback, forwardRef, createRef, PureComponent, Fragment, useMemo } from 'react';\nimport { object, node, string, oneOfType, number, func, bool, arrayOf, oneOf, instanceOf, array, shape } from 'prop-types';\nimport { Scheduler as Scheduler$1, DayView as DayView$1, WeekView as WeekView$1, MonthView as MonthView$1, Appointments as Appointments$1, Toolbar as Toolbar$2, DateNavigator as DateNavigator$1, AppointmentTooltip as AppointmentTooltip$1, ViewSwitcher as ViewSwitcher$1, AllDayPanel as AllDayPanel$1, AppointmentForm as AppointmentForm$1, DragDropProvider as DragDropProvider$1, TodayButton as TodayButton$2, EditRecurrenceMenu as EditRecurrenceMenu$1, ConfirmationDialog as ConfirmationDialog$1, CurrentTimeIndicator as CurrentTimeIndicator$1, Resources as Resources$1, GroupingPanel as GroupingPanel$1 } from '@devexpress/dx-react-scheduler';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { AUTO_HEIGHT, VIEW_TYPES, HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION, getLabelsForAllGroups, HOUR_MINUTE_OPTIONS, getDayScaleCells, WEEK_DAY_OPTIONS, DAY_OPTIONS, DAY_SHORT_MONTH_OPTIONS, HORIZONTAL_TYPE, VERTICAL_TYPE, POSITION_START, POSITION_END, areDatesSame, navigateByOneMonth, MONTH_YEAR_OPTIONS, viewBoundText, WEEKDAY_INTERVAL, OPEN_COMMAND_BUTTON, CLOSE_COMMAND_BUTTON, DELETE_COMMAND_BUTTON, getGroupingInfoFromGroups, ORDINARY_TEXT_EDITOR, NUMBER_EDITOR, MULTILINE_TEXT_EDITOR, TITLE_TEXT_EDITOR, handleChangeFrequency, REPEAT_TYPES, TITLE, CANCEL_BUTTON, DELETE_BUTTON, SAVE_BUTTON, ORDINARY_LABEL, STANDARD_SELECT, getRecurrenceOptions, checkIsNaturalNumber, changeRecurrenceOptions, MONTHLY_RADIO_GROUP, YEARLY_RADIO_GROUP, getFrequencyString, getAvailableRecurrenceOptions, OUTLINED_SELECT, END_REPEAT_RADIO_GROUP, RRULE_REPEAT_TYPES, isDateValid, handleStartDateChange, getRadioGroupDisplayData, handleWeekNumberChange, getWeekNumberLabels, getDaysOfWeek, handleToDayOfWeekChange, getMonths, getMonthsWithOf, getDaysOfWeekArray, getDaysOfWeekDates, handleWeekDaysChange, getCellKey, getRowFromGroups, getVerticalRowFromGroups } from '@devexpress/dx-scheduler-core';\nimport classNames from 'clsx';\nimport { withComponents } from '@devexpress/dx-react-core';\nimport Grid from '@material-ui/core/Grid';\nimport { lighten, fade, darken } from '@material-ui/core/styles/colorManipulator';\nimport { red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange } from '@material-ui/core/colors';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table$2 from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Repeat from '@material-ui/icons/Repeat';\nimport ToolbarMUI from '@material-ui/core/Toolbar';\nimport Popover from '@material-ui/core/Popover';\nimport Button$1 from '@material-ui/core/Button';\nimport CalendarToday from '@material-ui/icons/CalendarToday';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport TableHead from '@material-ui/core/TableHead';\nimport Typography from '@material-ui/core/Typography';\nimport AccessTime from '@material-ui/icons/AccessTime';\nimport Lens from '@material-ui/icons/Lens';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Select$1 from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport Drawer from '@material-ui/core/Drawer';\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker } from '@material-ui/pickers';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup$1 from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar ContainerBase = function ContainerBase(_ref) {\n  var children = _ref.children,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"classes\", \"className\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes.container, className)\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ContainerBase.propTypes = {\n  classes: object.isRequired,\n  children: node.isRequired,\n  className: string\n} : void 0;\nContainerBase.defaultProps = {\n  className: undefined\n};\nvar styles = {\n  container: {\n    WebkitOverflowScrolling: 'touch',\n    // NOTE: fix sticky positioning in Safari\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column'\n  }\n};\n\nvar LayoutBase = function LayoutBase(_ref) {\n  var height = _ref.height,\n      style = _ref.style,\n      restProps = _objectWithoutProperties(_ref, [\"height\", \"style\"]);\n\n  var containerStyle = height === AUTO_HEIGHT ? {\n    height: '100%'\n  } : {\n    height: \"\".concat(height, \"px\")\n  };\n  return createElement(ContainerBase, _extends({\n    style: _objectSpread2({}, containerStyle, {}, style)\n  }, restProps));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase.propTypes = {\n  height: oneOfType([number, string]).isRequired,\n  style: object\n} : void 0;\nLayoutBase.defaultProps = {\n  style: null\n};\nvar Root = withStyles(styles, {\n  name: 'Root'\n})(LayoutBase);\n\nvar Scheduler = function Scheduler(_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return createElement(Scheduler$1, _extends({\n    rootComponent: Root\n  }, restProps), children);\n};\n\nScheduler.Root = Root;\nprocess.env.NODE_ENV !== \"production\" ? Scheduler.propTypes = {\n  children: node.isRequired\n} : void 0;\n\nvar _SPACING_CELL_HEIGHT, _BASIC_CELL_HEIGHT;\n\nvar PRIMARY_COLOR = blue;\nvar TRANSITIONS_TIME = 400;\nvar DEFAULT_PALETTE = [red, pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, yellow, amber, orange, deepOrange];\nvar XS_CELL_WIDTH = 50;\nvar SMALL_CELL_WIDTH = 65;\nvar CELL_WIDTH = 100;\nvar XS_LAYOUT_WIDTH = 500;\nvar SMALL_LAYOUT_WIDTH = 700;\nvar SMALL_LAYOUT_MEDIA_QUERY = \"@media (max-width: \".concat(XS_LAYOUT_WIDTH, \"px)\");\nvar LAYOUT_MEDIA_QUERY = \"@media (max-width: \".concat(SMALL_LAYOUT_WIDTH, \"px)\");\nvar GROUPING_PANEL_VERTICAL_CELL_WIDTH = 12.5;\nvar DEFAULT_SPACING = 8;\nvar SPACING_CELL_HEIGHT = (_SPACING_CELL_HEIGHT = {}, _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.MONTH, 12.5), _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.WEEK, 6), _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.DAY, 6), _defineProperty(_SPACING_CELL_HEIGHT, VIEW_TYPES.ALL_DAY_PANEL, 5.75), _SPACING_CELL_HEIGHT);\nvar BASIC_CELL_HEIGHT = (_BASIC_CELL_HEIGHT = {}, _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.MONTH, SPACING_CELL_HEIGHT[VIEW_TYPES.MONTH] * DEFAULT_SPACING), _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.WEEK, SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK] * DEFAULT_SPACING), _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.DAY, SPACING_CELL_HEIGHT[VIEW_TYPES.DAY] * DEFAULT_SPACING), _defineProperty(_BASIC_CELL_HEIGHT, VIEW_TYPES.ALL_DAY_PANEL, SPACING_CELL_HEIGHT[VIEW_TYPES.ALL_DAY_PANEL] * DEFAULT_SPACING), _BASIC_CELL_HEIGHT);\nvar SPACING_LABEL_HEIGHT = SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK];\n\nvar getBorder = function getBorder(theme) {\n  return \"1px solid \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68));\n};\n\nvar getBrightBorder = function getBrightBorder(theme) {\n  return \"1px solid \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.72) : darken(fade(theme.palette.divider, 1), 0.5));\n};\n\nvar cellsMeta = function cellsMeta(tableElement) {\n  var cellElements = Array.from(tableElement.querySelectorAll('td'));\n  return {\n    parentRect: function parentRect() {\n      return tableElement.getBoundingClientRect();\n    },\n    getCellRects: cellElements.map(function (element) {\n      return function () {\n        return element.getBoundingClientRect();\n      };\n    })\n  };\n};\n\nvar scrollingStrategy = function scrollingStrategy(scrollablePart, fixedPartVertical, fixedPartHorizontal) {\n  var fixedPartVerticalRect = fixedPartVertical.getBoundingClientRect();\n  var fixedPartHorizontalRect = fixedPartHorizontal && fixedPartHorizontal.getBoundingClientRect();\n\n  var changeVerticalScroll = function changeVerticalScroll(value) {\n    // eslint-disable-next-line no-param-reassign\n    scrollablePart.scrollTop += value;\n  };\n\n  var changeHorizontalScroll = function changeHorizontalScroll(value) {\n    // eslint-disable-next-line no-param-reassign\n    scrollablePart.scrollLeft += value;\n  };\n\n  return {\n    topBoundary: fixedPartVerticalRect.height + fixedPartVerticalRect.top,\n    bottomBoundary: scrollablePart.offsetTop + scrollablePart.clientHeight,\n    fixedTopHeight: fixedPartVerticalRect.height,\n    leftBoundary: fixedPartHorizontalRect ? fixedPartHorizontalRect.width + fixedPartHorizontalRect.left : scrollablePart.offsetLeft,\n    rightBoundary: scrollablePart.offsetLeft + scrollablePart.clientWidth,\n    fixedLeftWidth: fixedPartHorizontalRect === null || fixedPartHorizontalRect === void 0 ? void 0 : fixedPartHorizontalRect.width,\n    changeVerticalScroll: changeVerticalScroll,\n    changeHorizontalScroll: changeHorizontalScroll\n  };\n};\n\nvar ensureColor = function ensureColor(level, color) {\n  return color[level] || PRIMARY_COLOR[level];\n};\n\nvar getResourceColor = function getResourceColor(resources) {\n  if (resources && resources.length) {\n    var _resources$find;\n\n    return (_resources$find = resources.find(function (resource) {\n      return resource.isMain;\n    })) === null || _resources$find === void 0 ? void 0 : _resources$find.color;\n  }\n\n  return undefined;\n};\n\nvar getAppointmentColor = function getAppointmentColor(level, color, defaultColor) {\n  if (!color) return ensureColor(level, defaultColor);\n  if (typeof color === 'string') return color;\n  return ensureColor(level, color);\n};\n\nvar getWidthInPixels = function getWidthInPixels(cellsNumber, cellWidth) {\n  return \"\".concat(cellsNumber * cellWidth, \"px\");\n};\n\nvar getViewCellKey = function getViewCellKey(startDate, groups) {\n  if (!groups) return startDate;\n  return groups.reduce(function (acc, group) {\n    return acc.concat(group.id);\n  }, startDate.toString());\n};\n\nvar addCommaAndSpaceToString = function addCommaAndSpaceToString(string) {\n  return string && \"\".concat(string, \",\\xA0\");\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      overflowY: 'auto',\n      position: 'relative'\n    },\n    stickyElement: {\n      tableLayout: 'fixed',\n      position: 'sticky',\n      overflow: 'visible',\n      background: theme.palette.background.paper\n    },\n    header: {\n      top: 0,\n      zIndex: 2\n    },\n    leftPanel: {\n      left: 0,\n      zIndex: 1,\n      boxSizing: 'border-box',\n      float: 'left',\n      width: function width(_ref) {\n        var groupingPanelSize = _ref.groupingPanelSize;\n        return \"\".concat(theme.spacing(10 + groupingPanelSize * GROUPING_PANEL_VERTICAL_CELL_WIDTH) + 1, \"px\");\n      }\n    },\n    timeTable: {\n      position: 'relative'\n    },\n    mainTable: {\n      width: function width(_ref2) {\n        var groupingPanelSize = _ref2.groupingPanelSize;\n        return \"calc(100% -\\n      \".concat(theme.spacing(10 + groupingPanelSize * GROUPING_PANEL_VERTICAL_CELL_WIDTH) + 1, \"px)\");\n      },\n      float: 'right'\n    },\n    fullScreenContainer: {\n      minWidth: '100%',\n      display: 'table',\n      position: 'relative'\n    },\n    autoWidth: {\n      display: 'table'\n    },\n    background: {\n      background: theme.palette.background.paper\n    },\n    ordinaryLeftPanelBorder: {\n      borderRight: getBorder(theme)\n    },\n    brightLeftPanelBorder: {\n      borderRight: getBrightBorder(theme)\n    },\n    ordinaryHeaderBorder: {\n      borderBottom: getBorder(theme)\n    },\n    brightHeaderBorder: {\n      borderBottom: getBrightBorder(theme)\n    },\n    timeScale: {\n      width: theme.spacing(10)\n    },\n    dayScaleEmptyCell: {\n      display: 'flex',\n      alignItems: 'flex-end'\n    },\n    fullWidthTable: {\n      width: '100%'\n    },\n    leftPanelWithoutTimeScale: {\n      width: function width(_ref3) {\n        var groupingPanelSize = _ref3.groupingPanelSize;\n        return theme.spacing(groupingPanelSize * GROUPING_PANEL_VERTICAL_CELL_WIDTH);\n      }\n    },\n    mainTableWithoutTimeScale: {\n      width: function width(_ref4) {\n        var groupingPanelSize = _ref4.groupingPanelSize;\n        return \"calc(100% -\\n      \".concat(theme.spacing(groupingPanelSize * GROUPING_PANEL_VERTICAL_CELL_WIDTH), \"px)\");\n      }\n    }\n  };\n});\nvar MainLayout = memo(function (_ref5) {\n  var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;\n\n  var TimeScale = _ref5.timeScaleComponent,\n      DayScale = _ref5.dayScaleComponent,\n      TimeTable = _ref5.timeTableComponent,\n      DayScaleEmptyCell = _ref5.dayScaleEmptyCellComponent,\n      GroupingPanel = _ref5.groupingPanelComponent,\n      groupingPanelSize = _ref5.groupingPanelSize,\n      highlightDayScale = _ref5.highlightDayScale,\n      setScrollingStrategy = _ref5.setScrollingStrategy,\n      className = _ref5.className,\n      restProps = _objectWithoutProperties(_ref5, [\"timeScaleComponent\", \"dayScaleComponent\", \"timeTableComponent\", \"dayScaleEmptyCellComponent\", \"groupingPanelComponent\", \"groupingPanelSize\", \"highlightDayScale\", \"setScrollingStrategy\", \"className\"]);\n\n  var layoutRef = useRef(null);\n  var layoutHeaderRef = useRef(null);\n  var leftPanelRef = useRef(null);\n\n  var _React$useState = useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLeftBorderSet = _React$useState2[0],\n      setIsLeftBorderSet = _React$useState2[1];\n\n  var _React$useState3 = useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isTopBorderSet = _React$useState4[0],\n      setIsTopBorderSet = _React$useState4[1];\n\n  useEffect(function () {\n    setScrollingStrategy(scrollingStrategy(layoutRef.current, layoutHeaderRef.current, leftPanelRef.current));\n  }, [layoutRef, layoutHeaderRef, leftPanelRef, setScrollingStrategy]);\n  var renderTimeScale = !!TimeScale;\n  var classes = useStyles({\n    groupingPanelSize: groupingPanelSize\n  });\n  var setBorders = useCallback(function (event) {\n    // eslint-disable-next-line no-bitwise\n    if (!!event.target.scrollLeft ^ isLeftBorderSet) {\n      setIsLeftBorderSet(!isLeftBorderSet);\n    } // eslint-disable-next-line no-bitwise\n\n\n    if (!!event.target.scrollTop ^ isTopBorderSet) {\n      setIsTopBorderSet(!isTopBorderSet);\n    }\n  }, [isLeftBorderSet, isTopBorderSet]);\n  return createElement(Grid, _extends({\n    ref: layoutRef,\n    container: true,\n    className: classNames(classes.container, className),\n    direction: \"column\",\n    wrap: \"nowrap\",\n    onScroll: setBorders\n  }, restProps), createElement(\"div\", null, createElement(Grid, {\n    className: classNames(classes.stickyElement, classes.header, classes.autoWidth)\n  }, createElement(Grid, {\n    ref: layoutHeaderRef,\n    container: true,\n    direction: \"row\"\n  }, (renderTimeScale || !!groupingPanelSize) && createElement(\"div\", {\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.stickyElement, true), _defineProperty(_classNames, classes.leftPanel, true), _defineProperty(_classNames, classes.leftPanelWithoutTimeScale, !renderTimeScale), _defineProperty(_classNames, classes.dayScaleEmptyCell, true), _defineProperty(_classNames, classes.ordinaryLeftPanelBorder, !isLeftBorderSet), _defineProperty(_classNames, classes.brightLeftPanelBorder, isLeftBorderSet), _defineProperty(_classNames, classes.ordinaryHeaderBorder, !isTopBorderSet && !highlightDayScale), _defineProperty(_classNames, classes.brightHeaderBorder, isTopBorderSet || highlightDayScale), _classNames))\n  }, createElement(DayScaleEmptyCell, null)), createElement(\"div\", {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.mainTable, true), _defineProperty(_classNames2, classes.mainTableWithoutTimeScale, !renderTimeScale), _classNames2))\n  }, createElement(\"div\", {\n    className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.fullScreenContainer, true), _defineProperty(_classNames3, classes.background, true), _defineProperty(_classNames3, classes.ordinaryHeaderBorder, !isTopBorderSet && !highlightDayScale), _defineProperty(_classNames3, classes.brightHeaderBorder, isTopBorderSet || highlightDayScale), _classNames3))\n  }, createElement(DayScale, null))))), createElement(Grid, {\n    className: classes.autoWidth\n  }, createElement(Grid, {\n    ref: leftPanelRef,\n    container: true,\n    className: classNames((_classNames4 = {}, _defineProperty(_classNames4, classes.stickyElement, true), _defineProperty(_classNames4, classes.leftPanel, true), _defineProperty(_classNames4, classes.leftPanelWithoutTimeScale, !renderTimeScale), _defineProperty(_classNames4, classes.ordinaryLeftPanelBorder, !isLeftBorderSet), _defineProperty(_classNames4, classes.brightLeftPanelBorder, isLeftBorderSet), _classNames4))\n  }, createElement(GroupingPanel, null), renderTimeScale && createElement(\"div\", {\n    className: classes.timeScale\n  }, createElement(TimeScale, null))), createElement(\"div\", {\n    className: classNames((_classNames5 = {}, _defineProperty(_classNames5, classes.mainTable, true), _defineProperty(_classNames5, classes.timeTable, true), _defineProperty(_classNames5, classes.mainTableWithoutTimeScale, !renderTimeScale), _classNames5))\n  }, createElement(\"div\", {\n    className: classes.fullScreenContainer\n  }, createElement(TimeTable, null))))));\n});\nprocess.env.NODE_ENV !== \"production\" ? MainLayout.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  timeScaleComponent: oneOfType([func, object]),\n  dayScaleComponent: oneOfType([func, object]).isRequired,\n  timeTableComponent: oneOfType([func, object]).isRequired,\n  dayScaleEmptyCellComponent: oneOfType([func, object]).isRequired,\n  groupingPanelComponent: oneOfType([func, object]),\n  groupingPanelSize: number,\n  setScrollingStrategy: func.isRequired,\n  highlightDayScale: bool,\n  className: string\n} : void 0;\nMainLayout.defaultProps = {\n  groupingPanelComponent: function groupingPanelComponent() {\n    return null;\n  },\n  timeScaleComponent: undefined,\n  groupingPanelSize: 0,\n  highlightDayScale: false,\n  className: undefined\n};\n\nvar Row = function Row(_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return createElement(TableRow, restProps, children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Row.propTypes = {\n  children: node\n} : void 0;\nRow.defaultProps = {\n  children: null\n};\nvar styles$1 = {\n  emptyCell: {\n    height: '100%',\n    width: '100%'\n  }\n};\n\nvar DayScaleEmptyCellBase = function DayScaleEmptyCellBase(_ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"children\"]);\n\n  return createElement(\"div\", _extends({}, restProps, {\n    className: classNames(classes.emptyCell, className)\n  }), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DayScaleEmptyCellBase.propTypes = {\n  classes: object.isRequired,\n  className: string,\n  children: node\n} : void 0;\nDayScaleEmptyCellBase.defaultProps = {\n  className: undefined,\n  children: undefined\n};\nvar DayScaleEmptyCell = withStyles(styles$1, {\n  name: 'DayScaleEmptyCell'\n})(DayScaleEmptyCellBase);\nvar styles$2 = {\n  container: {\n    position: 'absolute',\n    width: '100%',\n    top: 0,\n    left: 0\n  }\n};\nvar Container = withStyles(styles$2, {\n  name: 'AppointmentsContainer'\n})(ContainerBase);\nvar styles$3 = {\n  table: {\n    tableLayout: 'fixed',\n    boxSizing: 'border-box'\n  }\n};\n\nvar TicksLayoutBase = function TicksLayoutBase(_ref) {\n  var Cell = _ref.cellComponent,\n      Row = _ref.rowComponent,\n      cellsData = _ref.cellsData,\n      classes = _ref.classes,\n      groupOrientation = _ref.groupOrientation,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"cellComponent\", \"rowComponent\", \"cellsData\", \"classes\", \"groupOrientation\", \"className\"]);\n\n  return createElement(Table$2, _extends({}, restProps, {\n    className: classNames(classes.table, className)\n  }), createElement(TableBody, null, cellsData.map(function (days, index) {\n    return createElement(Row, {\n      key: (days[0].startDate + index).toString()\n    }, createElement(Cell, {\n      key: index.toString(),\n      startDate: days[0].startDate,\n      endDate: days[0].endDate,\n      endOfGroup: days[0].endOfGroup && groupOrientation === VERTICAL_GROUP_ORIENTATION,\n      groupingInfo: days[0].groupingInfo\n    }));\n  })));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TicksLayoutBase.propTypes = {\n  cellsData: arrayOf(Array).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  groupOrientation: oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION]),\n  classes: object.isRequired,\n  className: string\n} : void 0;\nTicksLayoutBase.defaultProps = {\n  className: undefined,\n  groupOrientation: HORIZONTAL_GROUP_ORIENTATION\n};\nvar TicksLayout = withStyles(styles$3, {\n  name: 'TicksLayout'\n})(TicksLayoutBase);\nvar useStyles$1 = makeStyles(function (theme) {\n  return {\n    timeScaleContainer: {\n      width: \"calc(100% - \".concat(theme.spacing(1), \"px)\")\n    },\n    ticks: {\n      width: theme.spacing(1)\n    },\n    cell: {\n      borderBottom: getBrightBorder(theme),\n      boxSizing: 'border-box',\n      padding: 0,\n      'tr:last-child &': {\n        borderBottom: 'none'\n      },\n      height: function height(_ref) {\n        var cellsCount = _ref.cellsCount;\n        return \"\".concat(theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK]) * cellsCount, \"px\");\n      }\n    }\n  };\n});\n\nvar Layout = function Layout(_ref2) {\n  var Label = _ref2.labelComponent,\n      rowComponent = _ref2.rowComponent,\n      tickCellComponent = _ref2.tickCellComponent,\n      cellsData = _ref2.cellsData,\n      formatDate = _ref2.formatDate,\n      groupOrientation = _ref2.groupOrientation,\n      groups = _ref2.groups,\n      restProps = _objectWithoutProperties(_ref2, [\"labelComponent\", \"rowComponent\", \"tickCellComponent\", \"cellsData\", \"formatDate\", \"groupOrientation\", \"groups\"]);\n\n  var classes = useStyles$1({\n    cellsCount: cellsData.length / groups[groups.length - 1].length\n  });\n  return createElement(Grid, _extends({\n    container: true,\n    direction: \"row\"\n  }, restProps), createElement(Table$2, {\n    className: classes.timeScaleContainer\n  }, createElement(TableBody, null, getLabelsForAllGroups(cellsData, groups, groupOrientation).map(function (groupedLabels, groupIndex) {\n    var firstDataLabel = groupedLabels[0];\n    var lastDataLabel = groupedLabels[groupedLabels.length - 1];\n    return createElement(TableRow, {\n      key: groupIndex.toString()\n    }, createElement(TableCell, {\n      className: classes.cell\n    }, createElement(Label, {\n      key: firstDataLabel.startDate,\n      groupingInfo: firstDataLabel.groupingInfo\n    }), groupedLabels.map(function (label, index) {\n      return index !== cellsData.length - 1 && createElement(Label, {\n        time: label.endDate,\n        formatDate: formatDate,\n        key: label.key,\n        groupingInfo: label.groupingInfo\n      });\n    }), createElement(Label, {\n      key: lastDataLabel.endDate,\n      groupingInfo: lastDataLabel.groupingInfo\n    })));\n  }))), createElement(TicksLayout, {\n    rowComponent: rowComponent,\n    cellComponent: tickCellComponent,\n    cellsData: cellsData,\n    className: classes.ticks,\n    groupOrientation: groupOrientation\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Layout.propTypes = {\n  cellsData: arrayOf(Array).isRequired,\n  labelComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  tickCellComponent: oneOfType([func, object]).isRequired,\n  formatDate: func.isRequired,\n  groups: arrayOf(arrayOf(object)),\n  groupOrientation: oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION])\n} : void 0;\nLayout.defaultProps = {\n  groups: [[{}]],\n  groupOrientation: HORIZONTAL_GROUP_ORIENTATION\n};\n\nvar styles$4 = function styles(theme) {\n  return {\n    label: {\n      userSelect: 'none',\n      border: 0,\n      height: theme.spacing(SPACING_LABEL_HEIGHT),\n      lineHeight: \"\".concat(theme.spacing(SPACING_LABEL_HEIGHT), \"px\"),\n      padding: 0,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      textAlign: 'right',\n      paddingLeft: theme.spacing(0.25),\n      paddingRight: theme.spacing(1)\n    },\n    text: _objectSpread2({}, theme.typography.caption, {\n      fontSize: '0.7rem',\n      whiteSpace: 'nowrap',\n      color: theme.palette.text.secondary\n    }),\n    emptyLabel: {\n      height: theme.spacing(SPACING_LABEL_HEIGHT / 2),\n      '&:last-child': {\n        height: \"\".concat(theme.spacing(SPACING_LABEL_HEIGHT / 2) - 1, \"px\")\n      }\n    }\n  };\n};\n\nvar LabelBase = memo(function (_ref) {\n  var _classNames;\n\n  var classes = _ref.classes,\n      className = _ref.className,\n      time = _ref.time,\n      formatDate = _ref.formatDate,\n      groupingInfo = _ref.groupingInfo,\n      endOfGroup = _ref.endOfGroup,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"time\", \"formatDate\", \"groupingInfo\", \"endOfGroup\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.label, true), _defineProperty(_classNames, classes.emptyLabel, !time), _classNames), className)\n  }, restProps), time && createElement(\"span\", {\n    className: classes.text\n  }, formatDate(time, HOUR_MINUTE_OPTIONS)));\n});\nLabelBase.propTypes = {\n  formatDate: func,\n  time: instanceOf(Date),\n  classes: object.isRequired,\n  groupingInfo: arrayOf(object),\n  endOfGroup: bool,\n  className: string\n};\nLabelBase.defaultProps = {\n  className: undefined,\n  time: undefined,\n  formatDate: function formatDate() {\n    return undefined;\n  },\n  groupingInfo: undefined,\n  endOfGroup: false\n};\nvar Label = withStyles(styles$4, {\n  name: 'Label'\n})(LabelBase);\n\nvar styles$5 = function styles(theme) {\n  return {\n    cell: {\n      height: theme.spacing(6),\n      padding: 0,\n      boxSizing: 'border-box',\n      borderBottom: getBorder(theme),\n      'tr:last-child &': {\n        borderBottom: 'none'\n      }\n    },\n    brightBottomBorder: {\n      borderBottom: getBrightBorder(theme)\n    }\n  };\n};\n\nvar TickCellBase = memo(function (_ref) {\n  var _classNames;\n\n  var classes = _ref.classes,\n      className = _ref.className,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      endOfGroup = _ref.endOfGroup,\n      groupingInfo = _ref.groupingInfo,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"startDate\", \"endDate\", \"endOfGroup\", \"groupingInfo\"]);\n\n  return createElement(TableCell, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.brightBottomBorder, endOfGroup), _classNames), className)\n  }, restProps));\n});\nTickCellBase.propTypes = {\n  classes: object.isRequired,\n  startDate: instanceOf(Date),\n  endDate: instanceOf(Date),\n  endOfGroup: bool,\n  groupingInfo: arrayOf(object),\n  className: string\n};\nTickCellBase.defaultProps = {\n  className: undefined,\n  startDate: undefined,\n  endDate: undefined,\n  endOfGroup: false,\n  groupingInfo: undefined\n};\nvar TickCell = withStyles(styles$5, {\n  name: 'TickCell'\n})(TickCellBase);\n\nvar _table;\n\nvar useStyles$2 = makeStyles({\n  table: (_table = {\n    tableLayout: 'fixed',\n    minWidth: function minWidth(cellsNumber) {\n      return getWidthInPixels(cellsNumber, CELL_WIDTH);\n    },\n    width: '100%'\n  }, _defineProperty(_table, \"\".concat(LAYOUT_MEDIA_QUERY), {\n    minWidth: function minWidth(cellsNumber) {\n      return getWidthInPixels(cellsNumber, SMALL_CELL_WIDTH);\n    }\n  }), _defineProperty(_table, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n    minWidth: function minWidth(cellsNumber) {\n      return getWidthInPixels(cellsNumber, XS_CELL_WIDTH);\n    }\n  }), _table)\n});\n/* This component is a workaround to the bug when appointments flicker after being drag-dropped.\n  It is used to define the minimum width of a parent layout depending on the number of cells.\n  It's impossible to do it in the layout because appointments begin to flicker when using\n  functional component instead of PureComponent (and to define the minimum width it is necessary\n  to use material-ui's makeStyles).\n*/\n\nvar Table = forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      cellsNumber = _ref.cellsNumber,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"cellsNumber\", \"children\"]);\n\n  var classes = useStyles$2(cellsNumber);\n  return createElement(Table$2, _extends({\n    ref: ref,\n    className: classNames(classes.table, className)\n  }, restProps), createElement(TableBody, null, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  cellsNumber: number.isRequired,\n  className: string,\n  children: node.isRequired\n} : void 0;\nTable.defaultProps = {\n  className: undefined\n};\n\nvar Layout$1 = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Layout, _React$PureComponent);\n\n  function Layout(props) {\n    var _this;\n\n    _classCallCheck(this, Layout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Layout).call(this, props));\n    _this.table = createRef();\n    return _this;\n  }\n\n  _createClass(Layout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCells();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setCells();\n    }\n  }, {\n    key: \"setCells\",\n    value: function setCells() {\n      var setCellElementsMeta = this.props.setCellElementsMeta;\n      var tableElement = this.table.current;\n      setCellElementsMeta(cellsMeta(tableElement));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          setCellElementsMeta = _this$props.setCellElementsMeta,\n          cellsNumber = _this$props.cellsNumber,\n          children = _this$props.children,\n          restProps = _objectWithoutProperties(_this$props, [\"setCellElementsMeta\", \"cellsNumber\", \"children\"]);\n\n      return createElement(Table, _extends({\n        ref: this.table,\n        cellsNumber: cellsNumber\n      }, restProps), children);\n    }\n  }]);\n\n  return Layout;\n}(PureComponent);\n\nprocess.env.NODE_ENV !== \"production\" ? Layout$1.propTypes = {\n  setCellElementsMeta: func.isRequired,\n  cellsNumber: number.isRequired,\n  children: node.isRequired\n} : void 0;\nvar Layout$2 = memo(function (_ref) {\n  var setCellElementsMeta = _ref.setCellElementsMeta,\n      Cell = _ref.cellComponent,\n      Row = _ref.rowComponent,\n      cellsData = _ref.cellsData,\n      formatDate = _ref.formatDate,\n      restProps = _objectWithoutProperties(_ref, [\"setCellElementsMeta\", \"cellComponent\", \"rowComponent\", \"cellsData\", \"formatDate\"]);\n\n  return createElement(Layout$1, _extends({\n    setCellElementsMeta: setCellElementsMeta,\n    cellsNumber: cellsData[0].length\n  }, restProps), cellsData.map(function (days, index) {\n    return createElement(Row, {\n      key: index.toString()\n    }, days.map(function (_ref2) {\n      var startDate = _ref2.startDate,\n          endDate = _ref2.endDate,\n          groupingInfo = _ref2.groupingInfo,\n          endOfGroup = _ref2.endOfGroup,\n          groupOrientation = _ref2.groupOrientation;\n      return createElement(Cell, {\n        key: getViewCellKey(startDate, groupingInfo),\n        startDate: startDate,\n        endDate: endDate,\n        endOfGroup: endOfGroup,\n        hasRightBorder: endOfGroup,\n        groupingInfo: groupingInfo,\n        groupOrientation: groupOrientation\n      });\n    }));\n  }));\n});\nLayout$2.propTypes = {\n  cellsData: arrayOf(Array).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  formatDate: func.isRequired,\n  setCellElementsMeta: func.isRequired\n};\nvar useStyles$3 = makeStyles(function (theme) {\n  return {\n    cell: {\n      position: 'relative',\n      height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.WEEK]),\n      padding: 0,\n      boxSizing: 'border-box',\n      borderRight: getBorder(theme),\n      '&:last-child': {\n        borderRight: 'none',\n        paddingRight: 0\n      },\n      'tr:last-child &': {\n        borderBottom: 'none'\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, 0.15),\n        outline: 0\n      }\n    },\n    shadedCell: {\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n      '&:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, 0.15),\n        outline: 0\n      }\n    },\n    shadedPart: {\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n      position: 'absolute',\n      height: function height(_ref) {\n        var shadedHeight = _ref.shadedHeight;\n        return shadedHeight;\n      },\n      width: '100%',\n      left: 0,\n      top: 0,\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      'td:focus &': {\n        opacity: 0\n      }\n    },\n    brightRightBorder: {\n      borderRight: getBrightBorder(theme),\n      '&:last-child': {\n        borderRight: 'none'\n      }\n    },\n    brightBorderBottom: {\n      borderBottom: getBrightBorder(theme)\n    }\n  };\n});\n\nvar Cell = function Cell(_ref2) {\n  var _classNames;\n\n  var className = _ref2.className,\n      children = _ref2.children,\n      startDate = _ref2.startDate,\n      endDate = _ref2.endDate,\n      currentTimeIndicatorPosition = _ref2.currentTimeIndicatorPosition,\n      CurrentTimeIndicator = _ref2.currentTimeIndicatorComponent,\n      isShaded = _ref2.isShaded,\n      endOfGroup = _ref2.endOfGroup,\n      groupingInfo = _ref2.groupingInfo,\n      groupOrientation = _ref2.groupOrientation,\n      hasRightBorder = _ref2.hasRightBorder,\n      restProps = _objectWithoutProperties(_ref2, [\"className\", \"children\", \"startDate\", \"endDate\", \"currentTimeIndicatorPosition\", \"currentTimeIndicatorComponent\", \"isShaded\", \"endOfGroup\", \"groupingInfo\", \"groupOrientation\", \"hasRightBorder\"]);\n\n  var classes = useStyles$3({\n    shadedHeight: currentTimeIndicatorPosition\n  });\n  var isNow = !!currentTimeIndicatorPosition;\n  return createElement(TableCell, _extends({\n    tabIndex: 0,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.shadedCell, isShaded && !isNow), _defineProperty(_classNames, classes.brightRightBorder, (endOfGroup || hasRightBorder) && groupOrientation === HORIZONTAL_GROUP_ORIENTATION), _defineProperty(_classNames, classes.brightBorderBottom, endOfGroup && groupOrientation === VERTICAL_GROUP_ORIENTATION), _classNames), className)\n  }, restProps), isNow && isShaded && createElement(\"div\", {\n    className: classes.shadedPart\n  }), isNow && createElement(CurrentTimeIndicator, {\n    top: currentTimeIndicatorPosition\n  }), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Cell.propTypes = {\n  startDate: instanceOf(Date),\n  endDate: instanceOf(Date),\n  children: node,\n  className: string,\n  currentTimeIndicatorPosition: string,\n  currentTimeIndicatorComponent: oneOfType([func, object]),\n  isShaded: bool,\n  endOfGroup: bool,\n  hasRightBorder: bool,\n  groupingInfo: arrayOf(object),\n  groupOrientation: oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION])\n} : void 0;\nCell.defaultProps = {\n  children: null,\n  className: undefined,\n  startDate: new Date(),\n  endDate: new Date(),\n  currentTimeIndicatorPosition: undefined,\n  currentTimeIndicatorComponent: function currentTimeIndicatorComponent() {\n    return null;\n  },\n  isShaded: false,\n  endOfGroup: false,\n  hasRightBorder: false,\n  groupingInfo: undefined,\n  groupOrientation: HORIZONTAL_GROUP_ORIENTATION\n};\nvar Layout$3 = memo(function (_ref) {\n  var Cell = _ref.cellComponent,\n      Row = _ref.rowComponent,\n      GroupingPanel = _ref.groupingPanelComponent,\n      cellsData = _ref.cellsData,\n      formatDate = _ref.formatDate,\n      groupedByDate = _ref.groupedByDate,\n      restProps = _objectWithoutProperties(_ref, [\"cellComponent\", \"rowComponent\", \"groupingPanelComponent\", \"cellsData\", \"formatDate\", \"groupedByDate\"]);\n\n  return createElement(Table, _extends({\n    cellsNumber: cellsData[0].length\n  }, restProps), !groupedByDate && createElement(GroupingPanel, null), createElement(Row, null, getDayScaleCells(cellsData, groupedByDate).map(function (_ref2) {\n    var startDate = _ref2.startDate,\n        endDate = _ref2.endDate,\n        today = _ref2.today,\n        key = _ref2.key,\n        endOfGroup = _ref2.endOfGroup,\n        groupingInfo = _ref2.groupingInfo,\n        colSpan = _ref2.colSpan;\n    return createElement(Cell, {\n      key: key,\n      startDate: startDate,\n      endDate: endDate,\n      today: today,\n      formatDate: formatDate,\n      endOfGroup: endOfGroup,\n      hasRightBorder: endOfGroup,\n      groupingInfo: groupingInfo,\n      colSpan: colSpan\n    });\n  })), groupedByDate && createElement(GroupingPanel, null));\n});\nLayout$3.propTypes = {\n  cellsData: arrayOf(Array).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  groupingPanelComponent: func,\n  formatDate: func.isRequired,\n  groupedByDate: bool\n};\nLayout$3.defaultProps = {\n  groupingPanelComponent: function groupingPanelComponent() {\n    return null;\n  },\n  groupedByDate: false\n};\n\nvar styles$6 = function styles(theme) {\n  var _cell, _objectSpread2$1;\n\n  return {\n    cell: (_cell = {\n      userSelect: 'none',\n      paddingBottom: theme.spacing(0.5),\n      textAlign: 'center',\n      borderBottom: 'none',\n      paddingRight: 0,\n      paddingLeft: 0,\n      boxSizing: 'border-box'\n    }, _defineProperty(_cell, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      padding: theme.spacing(1),\n      paddingBottom: 0\n    }), _defineProperty(_cell, '&:only-child', {\n      textAlign: 'left',\n      paddingLeft: theme.spacing(2)\n    }), _defineProperty(_cell, \"paddingTop\", theme.spacing(0.5)), _cell),\n    dayOfWeek: _objectSpread2({}, theme.typography.caption, {\n      margin: 0,\n      color: theme.palette.text.secondary,\n      lineHeight: 1.17\n    }),\n    dayOfMonth: _objectSpread2({}, theme.typography.h4, (_objectSpread2$1 = {}, _defineProperty(_objectSpread2$1, \"\".concat(LAYOUT_MEDIA_QUERY), _objectSpread2({}, theme.typography.h6)), _defineProperty(_objectSpread2$1, \"color\", theme.palette.text.secondary), _defineProperty(_objectSpread2$1, \"lineHeight\", 1.2), _defineProperty(_objectSpread2$1, \"fontSize\", '1.8rem'), _objectSpread2$1)),\n    highlightedText: {\n      color: theme.palette.primary.main,\n      fontWeight: 'bold'\n    },\n    dayView: {\n      'td:only-child &': {\n        textAlign: 'center',\n        width: 'auto',\n        display: 'inline-block'\n      }\n    },\n    brightRightBorder: {\n      borderRight: getBrightBorder(theme),\n      '&:last-child': {\n        borderRight: 'none'\n      }\n    }\n  };\n};\n\nvar CellBase = memo(function (_ref) {\n  var _classNames, _classNames2, _classNames3;\n\n  var classes = _ref.classes,\n      className = _ref.className,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      today = _ref.today,\n      formatDate = _ref.formatDate,\n      endOfGroup = _ref.endOfGroup,\n      groupingInfo = _ref.groupingInfo,\n      hasRightBorder = _ref.hasRightBorder,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"startDate\", \"endDate\", \"today\", \"formatDate\", \"endOfGroup\", \"groupingInfo\", \"hasRightBorder\"]);\n\n  return createElement(TableCell, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.brightRightBorder, endOfGroup || hasRightBorder), _classNames), className)\n  }, restProps), createElement(\"div\", {\n    className: classes.dayView\n  }, createElement(\"p\", {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.dayOfWeek, true), _defineProperty(_classNames2, classes.highlightedText, today), _classNames2))\n  }, formatDate(startDate, WEEK_DAY_OPTIONS)), createElement(\"div\", {\n    className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.dayOfMonth, true), _defineProperty(_classNames3, classes.highlightedText, today), _classNames3))\n  }, formatDate(startDate, DAY_OPTIONS))));\n});\nCellBase.propTypes = {\n  classes: object.isRequired,\n  formatDate: func.isRequired,\n  startDate: instanceOf(Date).isRequired,\n  endDate: instanceOf(Date),\n  className: string,\n  today: bool,\n  endOfGroup: bool,\n  hasRightBorder: bool,\n  groupingInfo: arrayOf(object)\n};\nCellBase.defaultProps = {\n  className: undefined,\n  endDate: undefined,\n  today: false,\n  endOfGroup: false,\n  hasRightBorder: false,\n  groupingInfo: undefined\n};\nvar Cell$1 = withStyles(styles$6, {\n  name: 'Cell'\n})(CellBase);\nvar DayView = withComponents({\n  Layout: MainLayout,\n  AppointmentLayer: Container,\n  DayScaleEmptyCell: DayScaleEmptyCell,\n  TimeScaleLayout: Layout,\n  TimeScaleLabel: Label,\n  TimeScaleTickCell: TickCell,\n  TimeScaleTicksRow: Row,\n  DayScaleLayout: Layout$3,\n  DayScaleCell: Cell$1,\n  DayScaleRow: Row,\n  TimeTableLayout: Layout$2,\n  TimeTableCell: Cell,\n  TimeTableRow: Row\n})(DayView$1);\nvar WeekView = withComponents({\n  Layout: MainLayout,\n  AppointmentLayer: Container,\n  DayScaleEmptyCell: DayScaleEmptyCell,\n  TimeScaleLayout: Layout,\n  TimeScaleLabel: Label,\n  TimeScaleTickCell: TickCell,\n  TimeScaleTicksRow: Row,\n  DayScaleLayout: Layout$3,\n  DayScaleCell: Cell$1,\n  DayScaleRow: Row,\n  TimeTableLayout: Layout$2,\n  TimeTableCell: Cell,\n  TimeTableRow: Row\n})(WeekView$1);\nvar Layout$4 = memo(function (_ref) {\n  var setCellElementsMeta = _ref.setCellElementsMeta,\n      Cell = _ref.cellComponent,\n      Row = _ref.rowComponent,\n      cellsData = _ref.cellsData,\n      formatDate = _ref.formatDate,\n      restProps = _objectWithoutProperties(_ref, [\"setCellElementsMeta\", \"cellComponent\", \"rowComponent\", \"cellsData\", \"formatDate\"]);\n\n  return createElement(Layout$1, _extends({\n    setCellElementsMeta: setCellElementsMeta,\n    cellsNumber: cellsData[0].length\n  }, restProps), cellsData.map(function (row, index) {\n    return createElement(Row, {\n      key: index.toString()\n    }, row.map(function (_ref2) {\n      var startDate = _ref2.startDate,\n          endDate = _ref2.endDate,\n          today = _ref2.today,\n          otherMonth = _ref2.otherMonth,\n          groupingInfo = _ref2.groupingInfo,\n          endOfGroup = _ref2.endOfGroup,\n          groupOrientation = _ref2.groupOrientation;\n      return createElement(Cell, {\n        key: getViewCellKey(startDate, groupingInfo),\n        startDate: startDate,\n        endDate: endDate,\n        today: today,\n        otherMonth: otherMonth,\n        formatDate: formatDate,\n        endOfGroup: endOfGroup,\n        hasRightBorder: endOfGroup,\n        groupingInfo: groupingInfo,\n        groupOrientation: groupOrientation\n      });\n    }));\n  }));\n});\nLayout$4.propTypes = {\n  cellsData: arrayOf(Array).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  formatDate: func.isRequired,\n  setCellElementsMeta: func.isRequired\n};\n\nvar styles$7 = function styles(theme) {\n  return {\n    cell: {\n      userSelect: 'none',\n      verticalAlign: 'top',\n      padding: 0,\n      height: theme.spacing(SPACING_CELL_HEIGHT[VIEW_TYPES.MONTH]),\n      borderRight: getBorder(theme),\n      '&:last-child': {\n        borderRight: 'none',\n        paddingRight: 0\n      },\n      'tr:last-child &': {\n        borderBottom: 'none'\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, 0.15),\n        outline: 0\n      },\n      boxSizing: 'border-box'\n    },\n    text: _defineProperty({\n      padding: '1em',\n      paddingTop: '0.5em',\n      textAlign: 'center'\n    }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n      padding: '0.5em'\n    }),\n    today: {\n      marginTop: '0.33em',\n      width: '1.72em',\n      height: '1.72em',\n      lineHeight: 1.72,\n      textAlign: 'center',\n      borderRadius: '50%',\n      background: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      cursor: 'default',\n      marginRight: 'auto',\n      marginLeft: 'auto'\n    },\n    otherMonth: {\n      color: theme.palette.text.disabled\n    },\n    shadedCell: {\n      backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\n      '&:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, 0.15),\n        outline: 0\n      }\n    },\n    brightRightBorder: {\n      borderRight: getBrightBorder(theme),\n      '&:last-child': {\n        borderRight: 'none'\n      }\n    },\n    brightBorderBottom: {\n      borderBottom: getBrightBorder(theme)\n    }\n  };\n};\n\nvar CellBase$1 = memo(function (_ref) {\n  var _classNames, _classNames2;\n\n  var classes = _ref.classes,\n      className = _ref.className,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      today = _ref.today,\n      otherMonth = _ref.otherMonth,\n      formatDate = _ref.formatDate,\n      isShaded = _ref.isShaded,\n      endOfGroup = _ref.endOfGroup,\n      groupingInfo = _ref.groupingInfo,\n      groupOrientation = _ref.groupOrientation,\n      hasRightBorder = _ref.hasRightBorder,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"startDate\", \"endDate\", \"today\", \"otherMonth\", \"formatDate\", \"isShaded\", \"endOfGroup\", \"groupingInfo\", \"groupOrientation\", \"hasRightBorder\"]);\n\n  var isFirstMonthDay = startDate.getDate() === 1;\n  var formatOptions = isFirstMonthDay && !today ? DAY_SHORT_MONTH_OPTIONS : DAY_OPTIONS;\n  return createElement(TableCell, _extends({\n    tabIndex: 0,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.shadedCell, isShaded), _defineProperty(_classNames, classes.brightRightBorder, (endOfGroup || hasRightBorder) && groupOrientation === HORIZONTAL_GROUP_ORIENTATION), _defineProperty(_classNames, classes.brightBorderBottom, endOfGroup && groupOrientation === VERTICAL_GROUP_ORIENTATION), _classNames), className)\n  }, restProps), createElement(\"div\", {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.text, !today), _defineProperty(_classNames2, classes.today, today), _defineProperty(_classNames2, classes.otherMonth, otherMonth && !today), _classNames2))\n  }, formatDate(startDate, formatOptions)));\n});\nprocess.env.NODE_ENV !== \"production\" ? CellBase$1.propTypes = {\n  classes: object.isRequired,\n  formatDate: func.isRequired,\n  startDate: instanceOf(Date).isRequired,\n  endDate: instanceOf(Date),\n  className: string,\n  today: bool,\n  otherMonth: bool,\n  isShaded: bool,\n  endOfGroup: bool,\n  hasRightBorder: bool,\n  groupingInfo: arrayOf(object),\n  groupOrientation: oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION])\n} : void 0;\nCellBase$1.defaultProps = {\n  endDate: undefined,\n  className: undefined,\n  today: false,\n  otherMonth: false,\n  isShaded: false,\n  endOfGroup: false,\n  hasRightBorder: false,\n  groupingInfo: undefined,\n  groupOrientation: HORIZONTAL_GROUP_ORIENTATION\n};\nvar Cell$2 = withStyles(styles$7, {\n  name: 'Cell'\n})(CellBase$1);\n\nvar styles$8 = function styles(theme) {\n  return {\n    cell: {\n      userSelect: 'none',\n      padding: 0,\n      borderBottom: 'none',\n      borderRight: getBorder(theme),\n      '&:last-child': {\n        borderRight: 'none',\n        paddingRight: 0\n      },\n      textAlign: 'center',\n      boxSizing: 'border-box'\n    },\n    dayOfWeek: _objectSpread2({}, theme.typography.caption, {\n      margin: 0,\n      padding: theme.spacing(1),\n      paddingBottom: 0,\n      color: theme.palette.text.secondary,\n      fontWeight: 'bold'\n    }),\n    brightRightBorder: {\n      borderRight: getBrightBorder(theme),\n      '&:last-child': {\n        borderRight: 'none'\n      }\n    }\n  };\n};\n\nvar CellBase$2 = memo(function (_ref) {\n  var _classNames;\n\n  var classes = _ref.classes,\n      className = _ref.className,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      today = _ref.today,\n      formatDate = _ref.formatDate,\n      endOfGroup = _ref.endOfGroup,\n      groupingInfo = _ref.groupingInfo,\n      hasRightBorder = _ref.hasRightBorder,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"startDate\", \"endDate\", \"today\", \"formatDate\", \"endOfGroup\", \"groupingInfo\", \"hasRightBorder\"]);\n\n  return createElement(TableCell, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.brightRightBorder, endOfGroup || hasRightBorder), _classNames), className)\n  }, restProps), createElement(\"div\", {\n    className: classes.dayOfWeek\n  }, formatDate(startDate, WEEK_DAY_OPTIONS)));\n});\nCellBase$2.propTypes = {\n  classes: object.isRequired,\n  formatDate: func.isRequired,\n  startDate: instanceOf(Date).isRequired,\n  endDate: instanceOf(Date),\n  className: string,\n  today: bool,\n  endOfGroup: bool,\n  hasRightBorder: bool,\n  groupingInfo: arrayOf(object)\n};\nCellBase$2.defaultProps = {\n  className: undefined,\n  endDate: undefined,\n  today: false,\n  endOfGroup: false,\n  hasRightBorder: false,\n  groupingInfo: undefined\n};\nvar Cell$3 = withStyles(styles$8, {\n  name: 'Cell'\n})(CellBase$2);\nvar MonthView = withComponents({\n  Layout: MainLayout,\n  AppointmentLayer: Container,\n  DayScaleEmptyCell: DayScaleEmptyCell,\n  DayScaleLayout: Layout$3,\n  DayScaleCell: Cell$3,\n  DayScaleRow: Row,\n  TimeTableLayout: Layout$4,\n  TimeTableCell: Cell$2,\n  TimeTableRow: Row\n})(MonthView$1);\n\nvar styles$9 = function styles(_ref) {\n  var palette = _ref.palette,\n      spacing = _ref.spacing;\n  return {\n    title: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    content: {\n      color: palette.common.white,\n      padding: spacing(0.5),\n      paddingTop: spacing(0.125),\n      paddingLeft: spacing(0.75),\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      display: 'flex'\n    },\n    container: {\n      width: '100%'\n    },\n    recurringContainer: {\n      width: \"calc(100% - \".concat(spacing(2), \"px)\")\n    },\n    imageContainer: {\n      width: spacing(2),\n      height: spacing(2)\n    },\n    image: {\n      width: '100%',\n      height: '100%'\n    }\n  };\n};\n\nvar HorizontalAppointmentBase = function HorizontalAppointmentBase(_ref2) {\n  var classes = _ref2.classes,\n      data = _ref2.data,\n      children = _ref2.children,\n      className = _ref2.className,\n      RecurringIcon = _ref2.recurringIconComponent,\n      formatDate = _ref2.formatDate,\n      durationType = _ref2.durationType,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"data\", \"children\", \"className\", \"recurringIconComponent\", \"formatDate\", \"durationType\"]);\n\n  var repeat = !!data.rRule;\n  return createElement(\"div\", _extends({\n    className: classNames(classes.content, className)\n  }, restProps), children || createElement(Fragment, null, createElement(\"div\", {\n    className: repeat ? classes.recurringContainer : classes.container\n  }, createElement(\"div\", {\n    className: classes.title\n  }, data.title)), repeat ? createElement(\"div\", {\n    className: classes.imageContainer\n  }, createElement(RecurringIcon, {\n    className: classes.image\n  })) : undefined));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HorizontalAppointmentBase.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  recurringIconComponent: oneOfType([func, object]).isRequired,\n  classes: object.isRequired,\n  data: object.isRequired,\n  durationType: string,\n  children: node,\n  className: string,\n  formatDate: func\n} : void 0;\nHorizontalAppointmentBase.defaultProps = {\n  formatDate: function formatDate() {\n    return '';\n  },\n  children: undefined,\n  className: undefined,\n  durationType: undefined\n};\nvar HorizontalAppointment = withStyles(styles$9, {\n  name: 'HorizontalAppointment'\n})(HorizontalAppointmentBase);\n\nvar styles$a = function styles(_ref) {\n  var palette = _ref.palette,\n      spacing = _ref.spacing;\n  return {\n    title: {\n      fontWeight: 'bold',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    textContainer: {\n      lineHeight: 1,\n      whiteSpace: 'pre-wrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    middleContainer: {\n      lineHeight: '0.9!important'\n    },\n    time: {\n      display: 'inline-block',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    content: _defineProperty({\n      color: palette.common.white,\n      padding: spacing(0.5, 1),\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      display: 'flex'\n    }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n      paddingLeft: spacing(0.5),\n      paddingRight: spacing(0.5)\n    }),\n    shortContent: _defineProperty({\n      padding: spacing(0.25, 1)\n    }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n      paddingLeft: spacing(0.5),\n      paddingRight: spacing(0.5)\n    }),\n    shortContainer: {\n      display: 'flex'\n    },\n    shortTime: {\n      textOverflow: 'initial',\n      flexShrink: 0\n    },\n    shortTitle: {\n      flexShrink: 3\n    },\n    container: {\n      width: '100%'\n    },\n    recurringContainer: {\n      width: \"calc(100% - \".concat(spacing(2), \"px)\")\n    },\n    imageContainer: {\n      width: spacing(2),\n      height: spacing(2)\n    },\n    image: {\n      width: '100%',\n      height: '100%'\n    }\n  };\n};\n\nvar VerticalAppointmentBase = function VerticalAppointmentBase(_ref2) {\n  var _classNames, _classNames2, _classNames3;\n\n  var classes = _ref2.classes,\n      data = _ref2.data,\n      children = _ref2.children,\n      className = _ref2.className,\n      formatDate = _ref2.formatDate,\n      RecurringIcon = _ref2.recurringIconComponent,\n      durationType = _ref2.durationType,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"data\", \"children\", \"className\", \"formatDate\", \"recurringIconComponent\", \"durationType\"]);\n\n  var repeat = !!data.rRule;\n  var isShortHeight = durationType === 'short';\n  var isMiddleHeight = durationType === 'middle';\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.content, true), _defineProperty(_classNames, classes.shortContent, isShortHeight || isMiddleHeight), _classNames), className)\n  }, restProps), children || createElement(Fragment, null, createElement(\"div\", {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.container, !repeat), _defineProperty(_classNames2, classes.recurringContainer, repeat), _classNames2))\n  }, isShortHeight ? createElement(\"div\", {\n    className: classes.shortContainer\n  }, createElement(\"div\", {\n    className: classNames(classes.title, classes.shortTitle)\n  }, addCommaAndSpaceToString(data.title)), createElement(\"div\", {\n    className: classNames(classes.time, classes.shortTime)\n  }, formatDate(data.startDate, HOUR_MINUTE_OPTIONS))) : createElement(Fragment, null, createElement(\"div\", {\n    className: classes.title\n  }, data.title), createElement(\"div\", {\n    className: classNames((_classNames3 = {}, _defineProperty(_classNames3, classes.textContainer, true), _defineProperty(_classNames3, classes.middleContainer, isMiddleHeight), _classNames3))\n  }, createElement(\"div\", {\n    className: classes.time\n  }, formatDate(data.startDate, HOUR_MINUTE_OPTIONS)), createElement(\"div\", {\n    className: classes.time\n  }, \"\\xA0 - \\xA0\"), createElement(\"div\", {\n    className: classes.time\n  }, formatDate(data.endDate, HOUR_MINUTE_OPTIONS))))), repeat ? createElement(\"div\", {\n    className: classes.imageContainer\n  }, createElement(RecurringIcon, {\n    className: classes.image\n  })) : undefined));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? VerticalAppointmentBase.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  recurringIconComponent: oneOfType([func, object]).isRequired,\n  classes: object.isRequired,\n  data: object.isRequired,\n  formatDate: func.isRequired,\n  durationType: string.isRequired,\n  children: node,\n  className: string\n} : void 0;\nVerticalAppointmentBase.defaultProps = {\n  children: undefined,\n  className: undefined\n};\nvar VerticalAppointment = withStyles(styles$a, {\n  name: 'VerticalAppointment'\n})(VerticalAppointmentBase);\n\nvar AppointmentContent = function AppointmentContent(_ref) {\n  var type = _ref.type,\n      restProps = _objectWithoutProperties(_ref, [\"type\"]);\n\n  return type === HORIZONTAL_TYPE ? createElement(HorizontalAppointment, restProps) : createElement(VerticalAppointment, restProps);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? AppointmentContent.propTypes = {\n  type: oneOf([HORIZONTAL_TYPE, VERTICAL_TYPE]).isRequired\n} : void 0;\nvar useStyles$4 = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      typography = _ref.typography,\n      spacing = _ref.spacing;\n  return {\n    appointment: _objectSpread2({\n      userSelect: 'none',\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      overflow: 'hidden',\n      boxSizing: 'border-box',\n      // fix no space between appointments bug in Firefox (https://bugzilla.mozilla.org/show_bug.cgi?id=989340)\n      borderRight: '2px solid transparent',\n      borderBottom: '1px solid transparent',\n      backgroundClip: 'padding-box',\n      borderRadius: spacing(0.5),\n      backgroundColor: function backgroundColor(resources) {\n        return getAppointmentColor(300, getResourceColor(resources), palette.primary);\n      }\n    }, typography.caption, {\n      '&:hover': {\n        backgroundColor: function backgroundColor(resources) {\n          return getAppointmentColor(400, getResourceColor(resources), palette.primary);\n        }\n      },\n      '&:focus': {\n        backgroundColor: function backgroundColor(resources) {\n          return getAppointmentColor(100, getResourceColor(resources), palette.primary);\n        },\n        outline: 0\n      }\n    }),\n    clickableAppointment: {\n      cursor: 'pointer'\n    },\n    shadedAppointment: {\n      backgroundColor: function backgroundColor(resources) {\n        return getAppointmentColor(200, getResourceColor(resources), palette.primary);\n      },\n      '&:hover': {\n        backgroundColor: function backgroundColor(resources) {\n          return getAppointmentColor(300, getResourceColor(resources), palette.primary);\n        }\n      }\n    }\n  };\n});\n\nvar Appointment = function Appointment(_ref2) {\n  var _classNames;\n\n  var className = _ref2.className,\n      children = _ref2.children,\n      data = _ref2.data,\n      handleClick = _ref2.onClick,\n      draggable = _ref2.draggable,\n      isShaded = _ref2.isShaded,\n      resources = _ref2.resources,\n      restProps = _objectWithoutProperties(_ref2, [\"className\", \"children\", \"data\", \"onClick\", \"draggable\", \"isShaded\", \"resources\"]);\n\n  var onClick = handleClick ? {\n    onClick: function onClick(_ref3) {\n      var target = _ref3.target;\n      handleClick({\n        target: target,\n        data: data\n      });\n    }\n  } : null;\n  var classes = useStyles$4(resources);\n  var clickable = onClick || restProps.onDoubleClick || draggable;\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.appointment, true), _defineProperty(_classNames, classes.clickableAppointment, clickable), _defineProperty(_classNames, classes.shadedAppointment, isShaded), _classNames), className)\n  }, onClick, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Appointment.propTypes = {\n  children: node.isRequired,\n  resources: array,\n  className: string,\n  data: object,\n  onClick: func,\n  draggable: bool,\n  isShaded: bool\n} : void 0;\nAppointment.defaultProps = {\n  resources: [],\n  onClick: undefined,\n  className: undefined,\n  data: {},\n  draggable: false,\n  isShaded: false\n};\nvar verticalStyles = {\n  width: '100%',\n  height: '10px'\n};\nvar horizontalStyles = {\n  top: 0,\n  width: '10px',\n  height: '100%'\n};\nvar styles$b = {\n  slice: {\n    position: 'absolute',\n    zIndex: 50\n  },\n  verticalStart: _objectSpread2({}, verticalStyles, {\n    top: '-10px',\n    boxShadow: '0 10px 15px rgba(0,0,0,0.2)'\n  }),\n  verticalEnd: _objectSpread2({}, verticalStyles, {\n    bottom: '-10px',\n    boxShadow: '0 -10px 15px rgba(0,0,0,0.2)'\n  }),\n  horizontalStart: _objectSpread2({}, horizontalStyles, {\n    left: '-10px',\n    boxShadow: '10px 0 15px rgba(0,0,0,0.2)'\n  }),\n  horizontalEnd: _objectSpread2({}, horizontalStyles, {\n    right: '-10px',\n    boxShadow: '-10px 0 15px rgba(0,0,0,0.2)'\n  })\n};\nvar SplitIndicatorBase = memo(function (_ref) {\n  var _classNames;\n\n  var position = _ref.position,\n      appointmentType = _ref.appointmentType,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"position\", \"appointmentType\", \"classes\", \"className\"]);\n\n  var vertical = appointmentType === VERTICAL_TYPE;\n  var start = position === POSITION_START;\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.slice, true), _defineProperty(_classNames, classes.verticalStart, vertical && start), _defineProperty(_classNames, classes.verticalEnd, vertical && !start), _defineProperty(_classNames, classes.horizontalStart, !vertical && start), _defineProperty(_classNames, classes.horizontalEnd, !vertical && !start), _classNames), className)\n  }, restProps));\n});\nprocess.env.NODE_ENV !== \"production\" ? SplitIndicatorBase.propTypes = {\n  classes: object.isRequired,\n  appointmentType: oneOf([VERTICAL_TYPE, HORIZONTAL_TYPE]).isRequired,\n  position: oneOf([POSITION_START, POSITION_END]).isRequired,\n  className: string\n} : void 0;\nSplitIndicatorBase.defaultProps = {\n  className: undefined\n};\nvar SplitIndicator = withStyles(styles$b, {\n  name: 'AppointmentsContainer'\n})(SplitIndicatorBase);\n\nvar AppointmentContainer = function AppointmentContainer(_ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"style\", \"children\"]);\n\n  return createElement(\"div\", _extends({\n    style: style\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? AppointmentContainer.propTypes = {\n  children: node.isRequired,\n  style: object.isRequired\n} : void 0;\nvar Appointments = withComponents({\n  Appointment: Appointment,\n  AppointmentContent: AppointmentContent,\n  Container: AppointmentContainer,\n  SplitIndicator: SplitIndicator,\n  RecurringIcon: Repeat\n})(Appointments$1);\n\nvar styles$c = function styles(theme) {\n  return {\n    toolbar: {\n      borderBottom: getBorder(theme)\n    }\n  };\n};\n\nvar ToolbarBase = function ToolbarBase(_ref) {\n  var children = _ref.children,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"classes\", \"className\"]);\n\n  return createElement(ToolbarMUI, _extends({\n    className: classNames(classes.toolbar, className)\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ToolbarBase.propTypes = {\n  children: node.isRequired,\n  classes: object.isRequired,\n  className: string\n} : void 0;\nToolbarBase.defaultProps = {\n  className: undefined\n};\nvar Toolbar = withStyles(styles$c, {\n  name: 'Toolbar'\n})(ToolbarBase);\nvar styles$d = {\n  flexibleSpace: {\n    flex: '0 0 0',\n    marginLeft: 'auto'\n  }\n};\n\nvar FlexibleSpaceBase = function FlexibleSpaceBase(_ref) {\n  var children = _ref.children,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"classes\", \"className\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes.flexibleSpace, className)\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? FlexibleSpaceBase.propTypes = {\n  classes: object.isRequired,\n  children: node,\n  className: string\n} : void 0;\nFlexibleSpaceBase.defaultProps = {\n  children: null,\n  className: undefined\n};\nvar FlexibleSpace = withStyles(styles$d, {\n  name: 'FlexibleSpace'\n})(FlexibleSpaceBase);\nvar Toolbar$1 = withComponents({\n  Root: Toolbar,\n  FlexibleSpace: FlexibleSpace\n})(Toolbar$2);\n\nvar styles$e = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    root: {\n      marginLeft: spacing(0.5),\n      '&:first-child': {\n        marginLeft: 0\n      }\n    }\n  };\n};\n\nvar RootBase = function RootBase(_ref2) {\n  var NavigationButton = _ref2.navigationButtonComponent,\n      OpenButton = _ref2.openButtonComponent,\n      navigatorText = _ref2.navigatorText,\n      rootRef = _ref2.rootRef,\n      onVisibilityToggle = _ref2.onVisibilityToggle,\n      onNavigate = _ref2.onNavigate,\n      className = _ref2.className,\n      classes = _ref2.classes,\n      restProps = _objectWithoutProperties(_ref2, [\"navigationButtonComponent\", \"openButtonComponent\", \"navigatorText\", \"rootRef\", \"onVisibilityToggle\", \"onNavigate\", \"className\", \"classes\"]);\n\n  var navigateBack = useCallback(function () {\n    return onNavigate('back');\n  }, [onNavigate]);\n  var navigateForward = useCallback(function () {\n    return onNavigate('forward');\n  }, [onNavigate]);\n  return createElement(\"div\", _extends({\n    className: classNames(classes.root, className),\n    ref: rootRef\n  }, restProps), createElement(NavigationButton, {\n    type: \"back\",\n    onClick: navigateBack\n  }), createElement(NavigationButton, {\n    type: \"forward\",\n    onClick: navigateForward\n  }), createElement(OpenButton, {\n    onVisibilityToggle: onVisibilityToggle,\n    text: navigatorText\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? RootBase.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  navigationButtonComponent: oneOfType([func, object]).isRequired,\n  openButtonComponent: oneOfType([func, object]).isRequired,\n  onVisibilityToggle: func.isRequired,\n  onNavigate: func.isRequired,\n  rootRef: func.isRequired,\n  navigatorText: string,\n  classes: object.isRequired,\n  className: string\n} : void 0;\nRootBase.defaultProps = {\n  navigatorText: '',\n  className: undefined\n};\nvar Root$1 = withStyles(styles$e)(RootBase, {\n  name: 'Root'\n});\nvar origin = {\n  vertical: 'top',\n  horizontal: 'right'\n};\n\nvar Overlay = function Overlay(_ref) {\n  var visible = _ref.visible,\n      onHide = _ref.onHide,\n      children = _ref.children,\n      target = _ref.target,\n      restProps = _objectWithoutProperties(_ref, [\"visible\", \"onHide\", \"children\", \"target\"]);\n\n  return createElement(Popover, _extends({\n    open: visible,\n    anchorEl: target,\n    onClose: onHide,\n    anchorOrigin: origin,\n    transformOrigin: origin\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Overlay.propTypes = {\n  onHide: func.isRequired,\n  children: node.isRequired,\n  visible: bool,\n  target: oneOfType([object, func])\n} : void 0;\nOverlay.defaultProps = {\n  visible: false,\n  target: null\n};\n\nvar styles$f = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    textButton: _defineProperty({}, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      display: 'none'\n    }),\n    iconButton: _defineProperty({\n      '@media (min-width: 700px)': {\n        display: 'none'\n      }\n    }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n      width: spacing(4),\n      height: spacing(4),\n      padding: 0\n    })\n  };\n};\n\nvar OpenButtonBase = memo(function (_ref2) {\n  var text = _ref2.text,\n      onVisibilityToggle = _ref2.onVisibilityToggle,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"text\", \"onVisibilityToggle\", \"classes\", \"className\"]);\n\n  return createElement(Fragment, null, createElement(Button$1, _extends({\n    onClick: onVisibilityToggle,\n    className: classNames(classes.textButton, className)\n  }, restProps), text), createElement(IconButton, _extends({\n    onClick: onVisibilityToggle,\n    className: classNames(classes.iconButton, className)\n  }, restProps), createElement(CalendarToday, null)));\n});\nOpenButtonBase.propTypes = {\n  onVisibilityToggle: func.isRequired,\n  text: string,\n  className: string,\n  classes: object.isRequired\n};\nOpenButtonBase.defaultProps = {\n  text: '',\n  className: undefined\n};\nvar OpenButton = withStyles(styles$f, {\n  name: 'OpenButton'\n})(OpenButtonBase);\n\nvar styles$g = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    button: _defineProperty({}, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n      width: spacing(4),\n      height: spacing(4),\n      padding: 0\n    })\n  };\n};\n\nvar NavigationButtonBase = memo(function (_ref2) {\n  var type = _ref2.type,\n      onClick = _ref2.onClick,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"type\", \"onClick\", \"classes\", \"className\"]);\n\n  return createElement(IconButton, _extends({\n    onClick: onClick,\n    className: classNames(classes.button, className)\n  }, restProps), type === 'back' ? createElement(ChevronLeft, null) : createElement(ChevronRight, null));\n});\nNavigationButtonBase.propTypes = {\n  type: oneOf(['forward', 'back']).isRequired,\n  onClick: func,\n  classes: object.isRequired,\n  className: string\n};\nNavigationButtonBase.defaultProps = {\n  onClick: function onClick() {},\n  className: undefined\n};\nvar NavigationButton = withStyles(styles$g, {\n  name: 'NavigationButton'\n})(NavigationButtonBase);\nvar styles$h = {\n  table: {\n    width: '320px',\n    tableLayout: 'fixed'\n  }\n};\n\nvar TableBase = function TableBase(_ref) {\n  var Row = _ref.rowComponent,\n      Cell = _ref.cellComponent,\n      HeaderRow = _ref.headerRowComponent,\n      HeaderCell = _ref.headerCellComponent,\n      classes = _ref.classes,\n      className = _ref.className,\n      cells = _ref.cells,\n      headerCells = _ref.headerCells,\n      selectedDate = _ref.selectedDate,\n      onCellClick = _ref.onCellClick,\n      formatDate = _ref.formatDate,\n      restProps = _objectWithoutProperties(_ref, [\"rowComponent\", \"cellComponent\", \"headerRowComponent\", \"headerCellComponent\", \"classes\", \"className\", \"cells\", \"headerCells\", \"selectedDate\", \"onCellClick\", \"formatDate\"]);\n\n  return createElement(Table$2, _extends({\n    className: classNames(classes.table, className)\n  }, restProps), createElement(TableHead, null, createElement(HeaderRow, null, headerCells.map(function (cell) {\n    var key = formatDate(cell.startDate, WEEK_DAY_OPTIONS);\n    return createElement(HeaderCell, {\n      key: key\n    }, key);\n  }))), createElement(TableBody, null, cells.map(function (row) {\n    return createElement(Row, {\n      key: row[0].startDate.toString()\n    }, row.map(function (_ref2) {\n      var startDate = _ref2.startDate,\n          otherMonth = _ref2.otherMonth,\n          today = _ref2.today;\n      var selected = areDatesSame(selectedDate, startDate);\n      return createElement(Cell, {\n        key: startDate.toString(),\n        otherMonth: otherMonth,\n        selected: selected,\n        today: today,\n        onClick: function onClick() {\n          onCellClick(startDate);\n        }\n      }, formatDate(startDate, DAY_OPTIONS));\n    }));\n  })));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TableBase.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  rowComponent: oneOfType([func, object]).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  headerRowComponent: oneOfType([func, object]).isRequired,\n  headerCellComponent: oneOfType([func, object]).isRequired,\n  cells: array.isRequired,\n  classes: object.isRequired,\n  selectedDate: oneOfType([instanceOf(Date), string, number]),\n  formatDate: func.isRequired,\n  headerCells: array,\n  className: string,\n  onCellClick: func\n} : void 0;\nTableBase.defaultProps = {\n  className: undefined,\n  headerCells: [],\n  onCellClick: function onCellClick() {},\n  selectedDate: undefined\n};\nvar Table$1 = withStyles(styles$h, {\n  name: 'Table'\n})(TableBase);\n\nvar Root$2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Root, _React$PureComponent);\n\n  function Root(props) {\n    var _this;\n\n    _classCallCheck(this, Root);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Root).call(this, props));\n    var selectedDate = _this.props.selectedDate;\n    _this.state = {\n      selectedDate: selectedDate,\n      currentDate: selectedDate\n    };\n    _this.onNavigate = _this.onNavigate.bind(_assertThisInitialized(_this));\n    _this.onCellClick = _this.onCellClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Root, [{\n    key: \"onNavigate\",\n    value: function onNavigate(_ref) {\n      var back = _ref.back;\n      var currentDateState = this.state.currentDate;\n      var nextDate = navigateByOneMonth(currentDateState, back);\n      this.setState({\n        currentDate: nextDate\n      });\n    }\n  }, {\n    key: \"onCellClick\",\n    value: function onCellClick(nextDate) {\n      var onSelectedDateChange = this.props.onSelectedDateChange;\n      this.setState({\n        selectedDate: nextDate,\n        currentDate: nextDate\n      });\n      onSelectedDateChange(nextDate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          selectedDate = _this$props.selectedDate,\n          firstDayOfWeek = _this$props.firstDayOfWeek,\n          getCells = _this$props.getCells,\n          Text = _this$props.textComponent,\n          NavigationButton = _this$props.navigationButtonComponent,\n          Navigator = _this$props.navigatorComponent,\n          Row = _this$props.rowComponent,\n          Cell = _this$props.cellComponent,\n          HeaderRow = _this$props.headerRowComponent,\n          HeaderCell = _this$props.headerCellComponent,\n          onSelectedDateChange = _this$props.onSelectedDateChange,\n          formatDate = _this$props.formatDate,\n          restProps = _objectWithoutProperties(_this$props, [\"selectedDate\", \"firstDayOfWeek\", \"getCells\", \"textComponent\", \"navigationButtonComponent\", \"navigatorComponent\", \"rowComponent\", \"cellComponent\", \"headerRowComponent\", \"headerCellComponent\", \"onSelectedDateChange\", \"formatDate\"]);\n\n      var _this$state = this.state,\n          selectedDateState = _this$state.selectedDate,\n          currentDate = _this$state.currentDate;\n      var cellsData = getCells(currentDate, firstDayOfWeek, 1, Date.now());\n      return createElement(\"div\", restProps, createElement(Navigator, {\n        currentDate: currentDate,\n        textComponent: Text,\n        navigationButtonComponent: NavigationButton,\n        onNavigate: this.onNavigate,\n        formatDate: formatDate\n      }), createElement(Table$1, {\n        headerCells: cellsData[0],\n        selectedDate: selectedDateState,\n        cells: cellsData,\n        rowComponent: Row,\n        cellComponent: Cell,\n        headerRowComponent: HeaderRow,\n        headerCellComponent: HeaderCell,\n        onCellClick: this.onCellClick,\n        formatDate: formatDate\n      }));\n    }\n  }]);\n\n  return Root;\n}(PureComponent);\n\nprocess.env.NODE_ENV !== \"production\" ? Root$2.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  textComponent: oneOfType([func, object]).isRequired,\n  navigationButtonComponent: oneOfType([func, object]).isRequired,\n  headerRowComponent: oneOfType([func, object]).isRequired,\n  headerCellComponent: oneOfType([func, object]).isRequired,\n  navigatorComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  getCells: func.isRequired,\n  selectedDate: oneOfType([number, string, instanceOf(Date)]).isRequired,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number,\n  onSelectedDateChange: func\n} : void 0;\nRoot$2.defaultProps = {\n  onSelectedDateChange: function onSelectedDateChange() {},\n  firstDayOfWeek: 0\n};\n\nvar styles$i = function styles(_ref) {\n  var palette = _ref.palette,\n      spacing = _ref.spacing;\n  return {\n    cell: {\n      userSelect: 'none',\n      border: 'none',\n      cursor: 'pointer',\n      padding: 0,\n      height: spacing(6),\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      '&:last-child': {\n        padding: 0\n      }\n    },\n    otherMonth: {\n      color: palette.text.disabled\n    },\n    selected: {\n      background: palette.primary.main,\n      color: palette.primary.contrastText,\n      display: 'inline-block',\n      width: '2.3em',\n      lineHeight: 2.3,\n      borderRadius: '50%',\n      cursor: 'default'\n    },\n    today: {\n      color: palette.primary.main,\n      fontWeight: 'bold'\n    }\n  };\n};\n\nvar CellBase$3 = function CellBase(_ref2) {\n  var _classNames, _classNames2;\n\n  var otherMonth = _ref2.otherMonth,\n      selected = _ref2.selected,\n      today = _ref2.today,\n      classes = _ref2.classes,\n      children = _ref2.children,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"otherMonth\", \"selected\", \"today\", \"classes\", \"children\", \"className\"]);\n\n  return createElement(TableCell, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.otherMonth, otherMonth), _classNames), className)\n  }, restProps), createElement(\"span\", {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.selected, selected), _defineProperty(_classNames2, classes.today, today && !selected), _classNames2))\n  }, children));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CellBase$3.propTypes = {\n  children: node,\n  otherMonth: bool,\n  selected: bool,\n  today: bool,\n  classes: object.isRequired,\n  className: string\n} : void 0;\nCellBase$3.defaultProps = {\n  children: undefined,\n  otherMonth: false,\n  selected: false,\n  today: false,\n  className: undefined\n};\nvar Cell$4 = withStyles(styles$i, {\n  name: 'Cell'\n})(CellBase$3);\nvar styles$j = {\n  cell: {\n    userSelect: 'none',\n    border: 'none',\n    padding: 0,\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    '&:last-child': {\n      padding: 0\n    }\n  }\n};\n\nvar HeaderCellBase = function HeaderCellBase(_ref) {\n  var classes = _ref.classes,\n      children = _ref.children,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"children\", \"className\"]);\n\n  return createElement(TableCell, _extends({\n    className: classNames(_defineProperty({}, classes.cell, true), className)\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HeaderCellBase.propTypes = {\n  children: node,\n  classes: object.isRequired,\n  className: string\n} : void 0;\nHeaderCellBase.defaultProps = {\n  children: undefined,\n  className: undefined\n};\nvar HeaderCell = withStyles(styles$j, {\n  name: 'HeaderCell'\n})(HeaderCellBase);\n\nvar Row$1 = function Row(_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return createElement(TableRow, restProps, children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Row$1.propTypes = {\n  children: node.isRequired\n} : void 0;\nvar styles$k = {\n  navigator: {\n    paddingLeft: 0,\n    paddingRight: 0\n  }\n};\n\nvar NavigatorBase = function NavigatorBase(_ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      currentDate = _ref.currentDate,\n      Text = _ref.textComponent,\n      NavigationButton = _ref.navigationButtonComponent,\n      onNavigate = _ref.onNavigate,\n      formatDate = _ref.formatDate,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"currentDate\", \"textComponent\", \"navigationButtonComponent\", \"onNavigate\", \"formatDate\"]);\n\n  return createElement(ToolbarMUI, _extends({\n    className: classNames(classes.navigator, className)\n  }, restProps), createElement(NavigationButton, {\n    type: \"back\",\n    onClick: function onClick() {\n      onNavigate({\n        back: true\n      });\n    }\n  }), createElement(Text, {\n    currentDate: currentDate,\n    formatDate: formatDate\n  }), createElement(NavigationButton, {\n    type: \"forward\",\n    onClick: function onClick() {\n      onNavigate({\n        back: false\n      });\n    }\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? NavigatorBase.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  classes: object.isRequired,\n  textComponent: oneOfType([func, object]).isRequired,\n  navigationButtonComponent: oneOfType([func, object]).isRequired,\n  currentDate: oneOfType([number, string, instanceOf(Date)]).isRequired,\n  formatDate: func.isRequired,\n  className: string,\n  onNavigate: func\n} : void 0;\nNavigatorBase.defaultProps = {\n  className: undefined,\n  onNavigate: function onNavigate() {}\n};\nvar Navigator = withStyles(styles$k, {\n  name: 'Navigator'\n})(NavigatorBase);\nvar styles$l = {\n  text: {\n    userSelect: 'none',\n    flex: 1,\n    textAlign: 'center'\n  }\n};\n\nvar TextBase = function TextBase(_ref) {\n  var classes = _ref.classes,\n      className = _ref.className,\n      currentDate = _ref.currentDate,\n      formatDate = _ref.formatDate,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"currentDate\", \"formatDate\"]);\n\n  return createElement(Typography, _extends({\n    variant: \"h6\",\n    className: classNames(_defineProperty({}, classes.text, true), className)\n  }, restProps), formatDate(currentDate, MONTH_YEAR_OPTIONS));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TextBase.propTypes = {\n  classes: object.isRequired,\n  currentDate: oneOfType([number, string, instanceOf(Date)]).isRequired,\n  formatDate: func.isRequired,\n  className: string\n} : void 0;\nTextBase.defaultProps = {\n  className: undefined\n};\nvar Text = withStyles(styles$l, {\n  name: 'Text'\n})(TextBase);\nvar DateNavigator = withComponents({\n  Root: Root$1,\n  OpenButton: OpenButton,\n  Overlay: Overlay,\n  NavigationButton: NavigationButton,\n  Calendar: Root$2,\n  CalendarNavigator: Navigator,\n  CalendarCell: Cell$4,\n  CalendarRow: Row$1,\n  CalendarHeaderCell: HeaderCell,\n  CalendarHeaderRow: Row$1,\n  CalendarText: Text,\n  CalendarNavigationButton: NavigationButton\n})(DateNavigator$1);\nvar verticalTopHorizontalCenterOptions = {\n  vertical: 'top',\n  horizontal: 'center'\n};\nvar styles$m = {\n  popover: _defineProperty({\n    borderRadius: '8px',\n    width: '400px'\n  }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n    width: '300px'\n  })\n};\n\nvar LayoutBase$1 = function LayoutBase(_ref) {\n  var Header = _ref.headerComponent,\n      Content = _ref.contentComponent,\n      commandButtonComponent = _ref.commandButtonComponent,\n      recurringIconComponent = _ref.recurringIconComponent,\n      appointmentMeta = _ref.appointmentMeta,\n      appointmentResources = _ref.appointmentResources,\n      showOpenButton = _ref.showOpenButton,\n      showCloseButton = _ref.showCloseButton,\n      showDeleteButton = _ref.showDeleteButton,\n      visible = _ref.visible,\n      onHide = _ref.onHide,\n      commandButtonIds = _ref.commandButtonIds,\n      onOpenButtonClick = _ref.onOpenButtonClick,\n      onDeleteButtonClick = _ref.onDeleteButtonClick,\n      formatDate = _ref.formatDate,\n      classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"headerComponent\", \"contentComponent\", \"commandButtonComponent\", \"recurringIconComponent\", \"appointmentMeta\", \"appointmentResources\", \"showOpenButton\", \"showCloseButton\", \"showDeleteButton\", \"visible\", \"onHide\", \"commandButtonIds\", \"onOpenButtonClick\", \"onDeleteButtonClick\", \"formatDate\", \"classes\"]);\n\n  var target = appointmentMeta.target,\n      _appointmentMeta$data = appointmentMeta.data,\n      data = _appointmentMeta$data === void 0 ? {} : _appointmentMeta$data;\n  return createElement(Popover, _extends({\n    open: visible,\n    anchorEl: target,\n    onClose: onHide,\n    anchorOrigin: verticalTopHorizontalCenterOptions,\n    transformOrigin: verticalTopHorizontalCenterOptions,\n    PaperProps: {\n      className: classes.popover\n    }\n  }, restProps), createElement(Header, {\n    appointmentData: data,\n    commandButtonComponent: commandButtonComponent,\n    showOpenButton: showOpenButton,\n    showCloseButton: showCloseButton,\n    showDeleteButton: showDeleteButton,\n    commandButtonIds: commandButtonIds,\n    onOpenButtonClick: onOpenButtonClick,\n    onDeleteButtonClick: onDeleteButtonClick,\n    onHide: onHide\n  }), createElement(Content, {\n    appointmentData: data,\n    appointmentResources: appointmentResources,\n    formatDate: formatDate,\n    recurringIconComponent: recurringIconComponent\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$1.propTypes = {\n  // oneOfType is a workaround because withStyles returns react object\n  commandButtonComponent: oneOfType([func, object]).isRequired,\n  headerComponent: oneOfType([func, object]).isRequired,\n  contentComponent: oneOfType([func, object]).isRequired,\n  recurringIconComponent: oneOfType([func, object]).isRequired,\n  showOpenButton: bool.isRequired,\n  showCloseButton: bool.isRequired,\n  showDeleteButton: bool.isRequired,\n  commandButtonIds: object.isRequired,\n  classes: object.isRequired,\n  formatDate: func.isRequired,\n  onOpenButtonClick: func,\n  onDeleteButtonClick: func,\n  appointmentMeta: shape({\n    target: oneOfType([object, func]),\n    data: object\n  }),\n  appointmentResources: array,\n  visible: bool,\n  onHide: func\n} : void 0;\nLayoutBase$1.defaultProps = {\n  onOpenButtonClick: function onOpenButtonClick() {\n    return undefined;\n  },\n  onDeleteButtonClick: function onDeleteButtonClick() {\n    return undefined;\n  },\n  onHide: function onHide() {\n    return undefined;\n  },\n  appointmentMeta: {},\n  appointmentResources: [],\n  visible: false\n};\nvar Layout$5 = withStyles(styles$m, {\n  name: 'Layout'\n})(LayoutBase$1);\n\nvar styles$n = function styles(_ref) {\n  var spacing = _ref.spacing,\n      palette = _ref.palette;\n  return {\n    head: {\n      position: 'relative',\n      paddingLeft: spacing(1),\n      paddingRight: spacing(0.5),\n      paddingTop: spacing(0.25),\n      minHeight: spacing(1.5)\n    },\n    line: {\n      backgroundColor: palette.action.disabledBackground,\n      height: spacing(3.5),\n      marginLeft: spacing(1),\n      marginRight: spacing(1),\n      marginTop: spacing(1.25),\n      width: '1px'\n    },\n    flexContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-start'\n    }\n  };\n};\n\nvar HeaderBase = function HeaderBase(_ref2) {\n  var appointmentData = _ref2.appointmentData,\n      CommandButton = _ref2.commandButtonComponent,\n      showOpenButton = _ref2.showOpenButton,\n      showCloseButton = _ref2.showCloseButton,\n      showDeleteButton = _ref2.showDeleteButton,\n      commandButtonIds = _ref2.commandButtonIds,\n      onOpenButtonClick = _ref2.onOpenButtonClick,\n      onDeleteButtonClick = _ref2.onDeleteButtonClick,\n      onHide = _ref2.onHide,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      children = _ref2.children,\n      restProps = _objectWithoutProperties(_ref2, [\"appointmentData\", \"commandButtonComponent\", \"showOpenButton\", \"showCloseButton\", \"showDeleteButton\", \"commandButtonIds\", \"onOpenButtonClick\", \"onDeleteButtonClick\", \"onHide\", \"classes\", \"className\", \"children\"]);\n\n  var handleOpenButtonClick = function handleOpenButtonClick() {\n    onHide();\n    onOpenButtonClick();\n  };\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes.head, classes.flexContainer, className)\n  }, restProps), showOpenButton && createElement(CommandButton, {\n    id: commandButtonIds.open,\n    onExecute: handleOpenButtonClick\n  }), showDeleteButton && createElement(CommandButton, {\n    id: commandButtonIds.delete,\n    onExecute: onDeleteButtonClick\n  }), children, showCloseButton && createElement(\"div\", {\n    className: classes.flexContainer\n  }, createElement(\"div\", {\n    className: classes.line\n  }), createElement(CommandButton, {\n    id: commandButtonIds.close,\n    onExecute: onHide\n  })));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HeaderBase.propTypes = {\n  classes: object.isRequired,\n  appointmentData: object,\n  children: node,\n  className: string,\n  commandButtonComponent: oneOfType([func, object]).isRequired,\n  showOpenButton: bool.isRequired,\n  showCloseButton: bool.isRequired,\n  showDeleteButton: bool.isRequired,\n  commandButtonIds: object.isRequired,\n  onOpenButtonClick: func,\n  onDeleteButtonClick: func,\n  onHide: func\n} : void 0;\nHeaderBase.defaultProps = {\n  appointmentData: undefined,\n  className: undefined,\n  children: undefined,\n  onOpenButtonClick: function onOpenButtonClick() {\n    return undefined;\n  },\n  onDeleteButtonClick: function onDeleteButtonClick() {\n    return undefined;\n  },\n  onHide: function onHide() {\n    return undefined;\n  }\n};\nvar Header = withStyles(styles$n, {\n  name: 'Header'\n})(HeaderBase);\nvar useStyles$5 = makeStyles(function (_ref) {\n  var spacing = _ref.spacing,\n      palette = _ref.palette,\n      typography = _ref.typography;\n  return {\n    content: _objectSpread2({\n      padding: spacing(1.5, 1),\n      paddingTop: spacing(1),\n      backgroundColor: palette.background.paper,\n      boxSizing: 'border-box'\n    }, typography.body2),\n    text: {\n      display: 'inline-block'\n    },\n    title: _objectSpread2({}, typography.h6, {\n      color: palette.text.secondary,\n      fontWeight: typography.fontWeightBold,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }),\n    icon: {\n      verticalAlign: 'middle',\n      color: palette.action.active\n    },\n    lens: {\n      color: function color(resources) {\n        return getAppointmentColor(300, getResourceColor(resources), palette.primary);\n      },\n      width: spacing(4.5),\n      height: spacing(4.5),\n      verticalAlign: 'super',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translate(-50%,0)'\n    },\n    lensMini: {\n      width: spacing(2.5),\n      height: spacing(2.5)\n    },\n    textCenter: {\n      textAlign: 'center',\n      height: spacing(2.5)\n    },\n    dateAndTitle: {\n      lineHeight: 1.4\n    },\n    titleContainer: {\n      paddingBottom: spacing(2)\n    },\n    contentContainer: {\n      paddingBottom: spacing(1.5)\n    },\n    resourceContainer: {\n      paddingBottom: spacing(0.25)\n    },\n    recurringIcon: {\n      position: 'absolute',\n      paddingTop: spacing(0.875),\n      left: '50%',\n      transform: 'translate(-50%,0)',\n      color: palette.background.paper,\n      width: spacing(2.625),\n      height: spacing(2.625)\n    },\n    relativeContainer: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    }\n  };\n});\n\nvar Content = function Content(_ref2) {\n  var className = _ref2.className,\n      children = _ref2.children,\n      appointmentData = _ref2.appointmentData,\n      appointmentResources = _ref2.appointmentResources,\n      formatDate = _ref2.formatDate,\n      RecurringIcon = _ref2.recurringIconComponent,\n      restProps = _objectWithoutProperties(_ref2, [\"className\", \"children\", \"appointmentData\", \"appointmentResources\", \"formatDate\", \"recurringIconComponent\"]);\n\n  var classes = useStyles$5(appointmentResources);\n  var weekDays = viewBoundText(appointmentData.startDate, appointmentData.endDate, WEEKDAY_INTERVAL, appointmentData.startDate, 1, formatDate);\n  return createElement(\"div\", _extends({\n    className: classNames(classes.content, className)\n  }, restProps), createElement(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    className: classes.titleContainer\n  }, createElement(Grid, {\n    item: true,\n    xs: 2\n  }, createElement(\"div\", {\n    className: classes.relativeContainer\n  }, createElement(Lens, {\n    className: classes.lens\n  }), !!appointmentData.rRule && createElement(RecurringIcon, {\n    className: classes.recurringIcon\n  }))), createElement(Grid, {\n    item: true,\n    xs: 10\n  }, createElement(\"div\", null, createElement(\"div\", {\n    className: classNames(classes.title, classes.dateAndTitle)\n  }, appointmentData.title), createElement(\"div\", {\n    className: classNames(classes.text, classes.dateAndTitle)\n  }, weekDays)))), createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.contentContainer\n  }, createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.textCenter\n  }, createElement(AccessTime, {\n    className: classes.icon\n  })), createElement(Grid, {\n    item: true,\n    xs: 10\n  }, createElement(\"div\", {\n    className: classes.text\n  }, \"\".concat(formatDate(appointmentData.startDate, HOUR_MINUTE_OPTIONS), \"\\n              - \").concat(formatDate(appointmentData.endDate, HOUR_MINUTE_OPTIONS))))), appointmentResources.map(function (resourceItem) {\n    return createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      className: classes.resourceContainer,\n      key: \"\".concat(resourceItem.fieldName, \"_\").concat(resourceItem.id)\n    }, createElement(Grid, {\n      item: true,\n      xs: 2,\n      className: classes.textCenter\n    }, createElement(\"div\", {\n      className: classes.relativeContainer\n    }, createElement(Lens, {\n      className: classNames(classes.lens, classes.lensMini),\n      style: {\n        color: getAppointmentColor(300, resourceItem.color)\n      }\n    }))), createElement(Grid, {\n      item: true,\n      xs: 10\n    }, createElement(\"div\", {\n      className: classes.text\n    }, resourceItem.text)));\n  }), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Content.propTypes = {\n  appointmentData: object,\n  appointmentResources: array,\n  children: node,\n  className: string,\n  formatDate: func.isRequired,\n  recurringIconComponent: oneOfType([func, object]).isRequired\n} : void 0;\nContent.defaultProps = {\n  appointmentData: undefined,\n  appointmentResources: [],\n  className: undefined,\n  children: undefined\n};\n\nvar getIcon = function getIcon(id) {\n  if (id === OPEN_COMMAND_BUTTON) {\n    return createElement(EditIcon, null);\n  }\n\n  if (id === CLOSE_COMMAND_BUTTON) {\n    return createElement(CloseIcon, null);\n  }\n\n  if (id === DELETE_COMMAND_BUTTON) {\n    return createElement(DeleteIcon, null);\n  }\n\n  return null;\n};\n\nvar CommandButton = function CommandButton(_ref) {\n  var id = _ref.id,\n      onExecute = _ref.onExecute,\n      restProps = _objectWithoutProperties(_ref, [\"id\", \"onExecute\"]);\n\n  return createElement(IconButton, _extends({\n    onClick: onExecute\n  }, restProps), getIcon(id));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CommandButton.propTypes = {\n  id: string,\n  onExecute: func\n} : void 0;\nCommandButton.defaultProps = {\n  onExecute: function onExecute() {\n    return undefined;\n  },\n  id: ''\n};\nvar AppointmentTooltip = withComponents({\n  Layout: Layout$5,\n  Header: Header,\n  Content: Content,\n  CommandButton: CommandButton,\n  RecurringIcon: Repeat\n})(AppointmentTooltip$1);\n\nvar styles$o = function styles(_ref) {\n  var typography = _ref.typography;\n  return {\n    root: {\n      fontSize: typography.fontSize\n    },\n    input: {\n      fontWeight: 'bold',\n      textTransform: 'uppercase',\n      fontSize: typography.fontSize\n    },\n    menuItem: {\n      fontSize: typography.fontSize,\n      textTransform: 'uppercase'\n    },\n    inputRoot: {\n      width: '100%'\n    }\n  };\n};\n\nvar OutlinedSelectBase = memo(function (_ref2) {\n  var value = _ref2.value,\n      availableOptions = _ref2.availableOptions,\n      onValueChange = _ref2.onValueChange,\n      readOnly = _ref2.readOnly,\n      classes = _ref2.classes,\n      inputClasses = _ref2.inputClasses,\n      restProps = _objectWithoutProperties(_ref2, [\"value\", \"availableOptions\", \"onValueChange\", \"readOnly\", \"classes\", \"inputClasses\"]);\n\n  var handleChange = function handleChange(event) {\n    if (event.target.value !== value) onValueChange(event.target.value);\n  };\n\n  return createElement(Select$1, _extends({\n    disabled: readOnly,\n    classes: {\n      root: classes.root\n    },\n    value: value,\n    onChange: handleChange,\n    input: createElement(OutlinedInput, {\n      classes: inputClasses || {\n        input: classes.input,\n        root: classes.inputRoot\n      },\n      labelWidth: 0\n    })\n  }, restProps), availableOptions.map(function (option) {\n    return createElement(MenuItem, {\n      value: option.id,\n      key: option.id,\n      className: classes.menuItem\n    }, option.text);\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OutlinedSelectBase.propTypes = {\n  onValueChange: func,\n  classes: object.isRequired,\n  value: oneOfType([string, number]).isRequired,\n  availableOptions: arrayOf(shape({\n    id: oneOfType([string, number]),\n    text: string.isRequired\n  })),\n  readOnly: bool,\n  inputClasses: object\n} : void 0;\nOutlinedSelectBase.defaultProps = {\n  readOnly: false,\n  onValueChange: function onValueChange() {\n    return undefined;\n  },\n  availableOptions: [],\n  inputClasses: null\n};\nvar OutlinedSelect = withStyles(styles$o)(OutlinedSelectBase, {\n  name: 'OutlinedSelect'\n});\n\nvar styles$p = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    input: _defineProperty({\n      padding: spacing(1.25, 1.75),\n      paddingRight: spacing(4),\n      textTransform: 'uppercase'\n    }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      fontSize: '0.75rem'\n    }),\n    inputRoot: {\n      marginLeft: spacing(0.5),\n      '&:first-child': {\n        marginLeft: 0\n      }\n    }\n  };\n};\n\nvar SwitcherBase = memo(function (_ref2) {\n  var currentView = _ref2.currentView,\n      availableViews = _ref2.availableViews,\n      onChange = _ref2.onChange,\n      classes = _ref2.classes,\n      restProps = _objectWithoutProperties(_ref2, [\"currentView\", \"availableViews\", \"onChange\", \"classes\"]);\n\n  var availableOptions = availableViews.map(function (_ref3) {\n    var name = _ref3.name,\n        displayName = _ref3.displayName;\n    return {\n      id: name,\n      text: displayName\n    };\n  });\n  return createElement(OutlinedSelect, _extends({\n    value: currentView.name,\n    availableOptions: availableOptions,\n    onValueChange: onChange,\n    inputClasses: {\n      input: classes.input,\n      root: classes.inputRoot\n    }\n  }, restProps));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitcherBase.propTypes = {\n  onChange: func.isRequired,\n  classes: object.isRequired,\n  currentView: shape({\n    name: string.isRequired,\n    displayName: string.isRequired\n  }).isRequired,\n  availableViews: arrayOf(shape({\n    name: string.isRequired,\n    displayName: string.isRequired\n  }))\n} : void 0;\nSwitcherBase.defaultProps = {\n  availableViews: []\n};\nvar Switcher = withStyles(styles$p)(SwitcherBase, {\n  name: 'Switcher'\n});\nvar ViewSwitcher = withComponents({\n  Switcher: Switcher\n})(ViewSwitcher$1);\nvar styles$q = {\n  table: {\n    tableLayout: 'fixed'\n  }\n};\n\nvar renderAllDayCell = function renderAllDayCell(Cell, key, startDate, endDate, endOfGroup, hasRightBorder, groupingInfo) {\n  return createElement(Cell, {\n    key: key,\n    startDate: startDate,\n    endDate: endDate,\n    endOfGroup: endOfGroup,\n    hasRightBorder: endOfGroup,\n    groupingInfo: groupingInfo\n  });\n};\n\nvar LayoutBase$2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(LayoutBase, _React$PureComponent);\n\n  function LayoutBase(props) {\n    var _this;\n\n    _classCallCheck(this, LayoutBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LayoutBase).call(this, props));\n    _this.table = createRef();\n    return _this;\n  }\n\n  _createClass(LayoutBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCells();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setCells();\n    }\n  }, {\n    key: \"setCells\",\n    value: function setCells() {\n      var setCellElementsMeta = this.props.setCellElementsMeta;\n      var tableElement = this.table.current;\n      setCellElementsMeta(cellsMeta(tableElement));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          setCellElementsMeta = _this$props.setCellElementsMeta,\n          cellsData = _this$props.cellsData,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          cellComponent = _this$props.cellComponent,\n          Row = _this$props.rowComponent,\n          formatDate = _this$props.formatDate,\n          groups = _this$props.groups,\n          groupOrientation = _this$props.groupOrientation,\n          restProps = _objectWithoutProperties(_this$props, [\"setCellElementsMeta\", \"cellsData\", \"classes\", \"className\", \"cellComponent\", \"rowComponent\", \"formatDate\", \"groups\", \"groupOrientation\"]);\n\n      return createElement(Table$2, _extends({\n        ref: this.table,\n        className: classNames(classes.table, className)\n      }, restProps), createElement(TableBody, null, groupOrientation !== VERTICAL_GROUP_ORIENTATION && createElement(Row, null, cellsData.map(function (_ref) {\n        var startDate = _ref.startDate,\n            endDate = _ref.endDate,\n            endOfGroup = _ref.endOfGroup,\n            groupingInfo = _ref.groupingInfo;\n        return renderAllDayCell(cellComponent, getViewCellKey(startDate, groupingInfo), startDate, endDate, endOfGroup, endOfGroup, groupingInfo);\n      })), groupOrientation === VERTICAL_GROUP_ORIENTATION && groups[groups.length - 1].map(function (group, index) {\n        var groupingInfo = getGroupingInfoFromGroups(groups, index);\n        return createElement(Row, {\n          key: getViewCellKey(cellsData[0].startDate, groupingInfo)\n        }, cellsData.map(function (_ref2) {\n          var startDate = _ref2.startDate,\n              endDate = _ref2.endDate,\n              endOfGroup = _ref2.endOfGroup;\n          return renderAllDayCell(cellComponent, getViewCellKey(startDate, groupingInfo), startDate, endDate, endOfGroup, endOfGroup, groupingInfo);\n        }));\n      })));\n    }\n  }]);\n\n  return LayoutBase;\n}(PureComponent);\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$2.propTypes = {\n  classes: object.isRequired,\n  formatDate: func.isRequired,\n  cellsData: arrayOf(Array).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  rowComponent: oneOfType([func, object]).isRequired,\n  groups: arrayOf(arrayOf(object)),\n  groupOrientation: oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION]),\n  setCellElementsMeta: func.isRequired,\n  className: string\n} : void 0;\nLayoutBase$2.defaultProps = {\n  groups: undefined,\n  className: undefined,\n  groupOrientation: HORIZONTAL_GROUP_ORIENTATION\n};\nvar Layout$6 = withStyles(styles$q, {\n  name: 'Layout'\n})(LayoutBase$2);\n\nvar styles$r = function styles(theme) {\n  return {\n    cell: {\n      padding: 0,\n      height: theme.spacing(5.75),\n      boxSizing: 'border-box',\n      borderRight: getBorder(theme),\n      '&:last-child': {\n        borderRight: 'none'\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, 0.15),\n        outline: 0\n      },\n      'tr:last-child &': {\n        borderBottom: 'none'\n      }\n    },\n    brightRightBorder: {\n      borderRight: getBrightBorder(theme)\n    }\n  };\n};\n\nvar CellBase$4 = function CellBase(_ref) {\n  var _classNames;\n\n  var classes = _ref.classes,\n      className = _ref.className,\n      children = _ref.children,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      endOfGroup = _ref.endOfGroup,\n      groupingInfo = _ref.groupingInfo,\n      hasRightBorder = _ref.hasRightBorder,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"className\", \"children\", \"startDate\", \"endDate\", \"endOfGroup\", \"groupingInfo\", \"hasRightBorder\"]);\n\n  return createElement(TableCell, _extends({\n    tabIndex: 0,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.brightRightBorder, endOfGroup || hasRightBorder), _classNames), className)\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? CellBase$4.propTypes = {\n  classes: object.isRequired,\n  startDate: instanceOf(Date),\n  endDate: instanceOf(Date),\n  children: node,\n  className: string,\n  hasRightBorder: bool,\n  endOfGroup: bool,\n  groupingInfo: arrayOf(object)\n} : void 0;\nCellBase$4.defaultProps = {\n  children: null,\n  startDate: undefined,\n  endDate: undefined,\n  className: undefined,\n  hasRightBorder: false,\n  endOfGroup: false,\n  groupingInfo: undefined\n};\nvar Cell$5 = withStyles(styles$r, {\n  name: 'Cell'\n})(CellBase$4);\n\nvar styles$s = function styles(theme) {\n  return {\n    container: {\n      userSelect: 'none',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      position: 'relative'\n    },\n    content: {\n      width: theme.spacing(10),\n      boxSizing: 'border-box',\n      height: theme.spacing(5.75),\n      textAlign: 'right',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end'\n    },\n    title: _objectSpread2({\n      paddingRight: theme.spacing(2)\n    }, theme.typography.caption, {\n      color: theme.palette.text.secondary\n    })\n  };\n};\n\nvar TitleCellBase = memo(function (_ref) {\n  var classes = _ref.classes,\n      getMessage = _ref.getMessage,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"getMessage\", \"className\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes.container, className)\n  }, restProps), createElement(\"div\", {\n    className: classes.content\n  }, createElement(Typography, {\n    className: classes.title,\n    variant: \"body1\"\n  }, getMessage('allDay'))));\n});\nTitleCellBase.propTypes = {\n  classes: object.isRequired,\n  getMessage: func.isRequired,\n  className: string\n};\nTitleCellBase.defaultProps = {\n  className: undefined\n};\nvar TitleCell = withStyles(styles$s, {\n  name: 'TitleCell'\n})(TitleCellBase);\nvar styles$t = {\n  container: {\n    position: 'relative',\n    display: 'table',\n    minWidth: '100%'\n  }\n};\nvar Container$1 = withStyles(styles$t, {\n  name: 'AllDayContainer'\n})(ContainerBase);\nvar AllDayPanel = withComponents({\n  AppointmentLayer: Container,\n  Layout: Layout$6,\n  Cell: Cell$5,\n  Row: Row,\n  TitleCell: TitleCell,\n  Container: Container$1\n})(AllDayPanel$1);\nvar styles$u = {\n  root: {\n    height: '100%',\n    margin: '0 auto',\n    overflowY: 'auto'\n  },\n  container: _defineProperty({\n    display: 'flex'\n  }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n    flexDirection: 'column'\n  }),\n  stickyContainer: {\n    display: 'flex',\n    position: 'sticky',\n    top: 0,\n    zIndex: 1\n  }\n};\n\nvar LayoutBase$3 = function LayoutBase(_ref) {\n  var BasicLayout = _ref.basicLayoutComponent,\n      CommandLayout = _ref.commandLayoutComponent,\n      RecurrenceLayout = _ref.recurrenceLayoutComponent,\n      isRecurrence = _ref.isRecurrence,\n      children = _ref.children,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"basicLayoutComponent\", \"commandLayoutComponent\", \"recurrenceLayoutComponent\", \"isRecurrence\", \"children\", \"classes\", \"className\"]);\n\n  return createElement(\"div\", _extends({\n    className: classNames(classes.root, className)\n  }, restProps), createElement(\"div\", {\n    className: classes.stickyContainer\n  }, createElement(CommandLayout, null)), createElement(\"div\", {\n    className: classes.container\n  }, createElement(BasicLayout, null), createElement(RecurrenceLayout, null)), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$3.propTypes = {\n  basicLayoutComponent: oneOfType([func, object]).isRequired,\n  commandLayoutComponent: oneOfType([func, object]).isRequired,\n  recurrenceLayoutComponent: oneOfType([func, object]).isRequired,\n  children: node,\n  className: string,\n  classes: object.isRequired,\n  isRecurrence: bool\n} : void 0;\nLayoutBase$3.defaultProps = {\n  className: undefined,\n  isRecurrence: false,\n  children: null\n};\nvar Layout$7 = withStyles(styles$u)(LayoutBase$3, {\n  name: 'Layout'\n});\n\nvar styles$v = function styles(theme) {\n  return {\n    editor: {\n      width: '100%',\n      marginTop: theme.spacing(0.375),\n      marginBottom: theme.spacing(0.125)\n    },\n    title: _objectSpread2({}, theme.typography.h6)\n  };\n};\n\nvar TextEditorBase = memo(function (_ref) {\n  var classes = _ref.classes,\n      value = _ref.value,\n      placeholder = _ref.placeholder,\n      className = _ref.className,\n      readOnly = _ref.readOnly,\n      onValueChange = _ref.onValueChange,\n      type = _ref.type,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"value\", \"placeholder\", \"className\", \"readOnly\", \"onValueChange\", \"type\"]);\n\n  var textFieldType = type === NUMBER_EDITOR ? 'number' : 'text';\n  var notesTextEditor = type === MULTILINE_TEXT_EDITOR;\n  return createElement(TextField, _extends({\n    className: classNames(classes.editor, className),\n    value: value,\n    variant: notesTextEditor ? 'outlined' : 'filled',\n    disabled: readOnly,\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      return onValueChange(target.value);\n    },\n    InputProps: {\n      className: classNames(_defineProperty({}, classes.title, type === TITLE_TEXT_EDITOR))\n    },\n    multiline: notesTextEditor,\n    rows: \"5\",\n    type: textFieldType,\n    hiddenLabel: true,\n    margin: \"normal\",\n    placeholder: placeholder\n  }, restProps));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextEditorBase.propTypes = {\n  classes: object.isRequired,\n  value: oneOfType([string, number]),\n  placeholder: string,\n  className: string,\n  readOnly: bool,\n  onValueChange: func,\n  type: string\n} : void 0;\nTextEditorBase.defaultProps = {\n  value: '',\n  placeholder: undefined,\n  className: undefined,\n  readOnly: false,\n  onValueChange: function onValueChange() {\n    return undefined;\n  },\n  type: ORDINARY_TEXT_EDITOR\n};\nvar TextEditor = withStyles(styles$v)(TextEditorBase, {\n  name: 'TextEditor'\n});\n\nvar styles$w = function styles(_ref) {\n  var spacing = _ref.spacing,\n      typography = _ref.typography;\n  return {\n    root: _defineProperty({\n      width: '650px',\n      paddingTop: spacing(3),\n      paddingBottom: spacing(3),\n      paddingLeft: spacing(4),\n      paddingRight: spacing(4),\n      boxSizing: 'border-box',\n      transition: \"all \".concat(TRANSITIONS_TIME, \"ms cubic-bezier(0, 0, 0.2, 1)\")\n    }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      width: '100%',\n      maxWidth: '700px',\n      paddingRight: spacing(2),\n      paddingLeft: spacing(2),\n      paddingBottom: 0\n    }),\n    fullSize: {\n      paddingBottom: spacing(3)\n    },\n    halfSize: {\n      '@media (min-width: 700px) and (max-width: 850px)': {\n        width: '400px'\n      },\n      '@media (min-width: 850px) and (max-width: 1000px)': {\n        width: '480px'\n      },\n      '@media (min-width: 1000px) and (max-width: 1150px)': {\n        width: '560px'\n      }\n    },\n    labelWithMargins: {\n      marginBottom: spacing(0.5),\n      marginTop: spacing(0.5)\n    },\n    notesEditor: {\n      marginTop: spacing(0)\n    },\n    dateEditor: {\n      width: '45%',\n      paddingTop: '0px!important',\n      marginTop: spacing(2),\n      paddingBottom: '0px!important',\n      marginBottom: 0\n    },\n    dividerLabel: _objectSpread2({}, typography.body2, {\n      width: '10%',\n      textAlign: 'center',\n      paddingTop: spacing(2)\n    }),\n    booleanEditors: {\n      marginTop: spacing(0.875)\n    },\n    '@media (max-width: 570px)': {\n      dateEditors: {\n        flexDirection: 'column'\n      },\n      booleanEditors: {\n        flexDirection: 'column',\n        marginTop: spacing(1.875)\n      },\n      dateEditor: {\n        width: '100%',\n        '&:first-child': {\n          marginBottom: 0\n        },\n        '&:last-child': {\n          marginTop: spacing(2)\n        }\n      },\n      dividerLabel: {\n        display: 'none'\n      }\n    }\n  };\n};\n\nvar LayoutBase$4 = function LayoutBase(_ref2) {\n  var _classNames;\n\n  var children = _ref2.children,\n      locale = _ref2.locale,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      getMessage = _ref2.getMessage,\n      readOnly = _ref2.readOnly,\n      onFieldChange = _ref2.onFieldChange,\n      appointmentData = _ref2.appointmentData,\n      fullSize = _ref2.fullSize,\n      resources = _ref2.resources,\n      appointmentResources = _ref2.appointmentResources,\n      TextEditor = _ref2.textEditorComponent,\n      DateEditor = _ref2.dateEditorComponent,\n      Select = _ref2.selectComponent,\n      Label = _ref2.labelComponent,\n      BooleanEditor = _ref2.booleanEditorComponent,\n      ResourceEditor = _ref2.resourceEditorComponent,\n      restProps = _objectWithoutProperties(_ref2, [\"children\", \"locale\", \"classes\", \"className\", \"getMessage\", \"readOnly\", \"onFieldChange\", \"appointmentData\", \"fullSize\", \"resources\", \"appointmentResources\", \"textEditorComponent\", \"dateEditorComponent\", \"selectComponent\", \"labelComponent\", \"booleanEditorComponent\", \"resourceEditorComponent\"]);\n\n  var changeTitle = useCallback(function (title) {\n    return onFieldChange({\n      title: title\n    });\n  }, [onFieldChange]);\n  var changeNotes = useCallback(function (notes) {\n    return onFieldChange({\n      notes: notes\n    });\n  }, [onFieldChange]);\n  var changeStartDate = useCallback(function (startDate) {\n    return onFieldChange({\n      startDate: startDate\n    });\n  }, [onFieldChange]);\n  var changeEndDate = useCallback(function (endDate) {\n    return onFieldChange({\n      endDate: endDate\n    });\n  }, [onFieldChange]);\n  var changeAllDay = useCallback(function (allDay) {\n    return onFieldChange({\n      allDay: allDay\n    });\n  }, [onFieldChange]);\n  var changeResources = useCallback(function (resource) {\n    return onFieldChange(resource);\n  }, [onFieldChange]);\n  var rRule = appointmentData.rRule,\n      startDate = appointmentData.startDate;\n  var changeFrequency = useCallback(function (value) {\n    return handleChangeFrequency(value ? REPEAT_TYPES.DAILY : REPEAT_TYPES.NEVER, rRule, startDate, onFieldChange);\n  }, [rRule, startDate, onFieldChange]);\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.root, true), _defineProperty(_classNames, classes.fullSize, fullSize), _defineProperty(_classNames, classes.halfSize, !fullSize), _classNames), className)\n  }, restProps), createElement(Label, {\n    text: getMessage('detailsLabel'),\n    type: TITLE\n  }), createElement(TextEditor, {\n    placeholder: getMessage('titleLabel'),\n    readOnly: readOnly,\n    type: TITLE_TEXT_EDITOR,\n    value: appointmentData.title,\n    onValueChange: changeTitle\n  }), createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    className: classes.dateEditors\n  }, createElement(DateEditor, {\n    className: classes.dateEditor,\n    readOnly: readOnly,\n    value: appointmentData.startDate,\n    onValueChange: changeStartDate,\n    locale: locale,\n    excludeTime: appointmentData.allDay\n  }), createElement(Label, {\n    text: \"-\",\n    className: classes.dividerLabel\n  }), createElement(DateEditor, {\n    className: classes.dateEditor,\n    readOnly: readOnly,\n    value: appointmentData.endDate,\n    onValueChange: changeEndDate,\n    locale: locale,\n    excludeTime: appointmentData.allDay\n  })), createElement(Grid, {\n    container: true,\n    className: classes.booleanEditors\n  }, createElement(BooleanEditor, {\n    label: getMessage('allDayLabel'),\n    readOnly: readOnly,\n    value: appointmentData.allDay,\n    onValueChange: changeAllDay\n  }), createElement(BooleanEditor, {\n    label: getMessage('repeatLabel'),\n    readOnly: readOnly,\n    value: !!appointmentData.rRule,\n    onValueChange: changeFrequency\n  })), createElement(Label, {\n    text: getMessage('moreInformationLabel'),\n    type: TITLE,\n    className: classes.labelWithMargins\n  }), createElement(TextEditor, {\n    placeholder: getMessage('notesLabel'),\n    readOnly: readOnly,\n    type: MULTILINE_TEXT_EDITOR,\n    value: appointmentData.notes,\n    onValueChange: changeNotes,\n    className: classes.notesEditor\n  }), resources.map(function (resource) {\n    return createElement(Fragment, {\n      key: resource.fieldName\n    }, createElement(Label, {\n      text: resource.title,\n      type: TITLE,\n      className: classes.labelWithMargins\n    }), createElement(ResourceEditor, {\n      readOnly: readOnly,\n      resource: resource,\n      appointmentResources: appointmentResources,\n      onResourceChange: changeResources\n    }));\n  }), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$4.propTypes = {\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  dateEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  labelComponent: oneOfType([func, object]).isRequired,\n  booleanEditorComponent: oneOfType([func, object]).isRequired,\n  resourceEditorComponent: oneOfType([func, object]).isRequired,\n  locale: oneOfType([string, arrayOf(string)]).isRequired,\n  children: node,\n  className: string,\n  classes: object.isRequired,\n  getMessage: func.isRequired,\n  onFieldChange: func,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  resources: array,\n  appointmentResources: array,\n  readOnly: bool,\n  fullSize: bool.isRequired\n} : void 0;\nLayoutBase$4.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  resources: [],\n  appointmentResources: [],\n  className: undefined,\n  readOnly: false,\n  children: null\n};\nvar Layout$8 = withStyles(styles$w)(LayoutBase$4, {\n  name: 'BasicLayout'\n});\n\nvar styles$x = function styles(_ref) {\n  var _ref2;\n\n  var spacing = _ref.spacing,\n      palette = _ref.palette;\n  return _ref2 = {\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      paddingTop: spacing(2),\n      paddingLeft: spacing(2),\n      paddingRight: spacing(4),\n      transition: \"all \".concat(TRANSITIONS_TIME, \"ms cubic-bezier(0, 0, 0.2, 1)\"),\n      backgroundColor: palette.background.paper\n    },\n    basic: {\n      width: '650px'\n    },\n    fullSize: {\n      width: '1150px',\n      '@media (min-width: 700px) and (max-width: 850px)': {\n        width: '700px'\n      },\n      '@media (min-width: 850px) and (max-width: 1000px)': {\n        width: '850px'\n      },\n      '@media (min-width: 1000px) and (max-width: 1150px)': {\n        width: '1000px'\n      }\n    }\n  }, _defineProperty(_ref2, \"\".concat(LAYOUT_MEDIA_QUERY), {\n    basic: {\n      maxWidth: '700px',\n      width: '100%'\n    },\n    root: {\n      paddingRight: spacing(2),\n      paddingLeft: 0,\n      paddingTop: spacing(1),\n      maxWidth: '700px',\n      width: '100%'\n    }\n  }), _defineProperty(_ref2, \"line\", {\n    backgroundColor: palette.action.disabledBackground,\n    height: spacing(4.5),\n    width: '1px'\n  }), _ref2;\n};\n\nvar LayoutBase$5 = function LayoutBase(_ref3) {\n  var _classNames;\n\n  var CommandButton = _ref3.commandButtonComponent,\n      onCommitButtonClick = _ref3.onCommitButtonClick,\n      onCancelButtonClick = _ref3.onCancelButtonClick,\n      onDeleteButtonClick = _ref3.onDeleteButtonClick,\n      getMessage = _ref3.getMessage,\n      children = _ref3.children,\n      classes = _ref3.classes,\n      className = _ref3.className,\n      fullSize = _ref3.fullSize,\n      readOnly = _ref3.readOnly,\n      disableSaveButton = _ref3.disableSaveButton,\n      hideDeleteButton = _ref3.hideDeleteButton,\n      restProps = _objectWithoutProperties(_ref3, [\"commandButtonComponent\", \"onCommitButtonClick\", \"onCancelButtonClick\", \"onDeleteButtonClick\", \"getMessage\", \"children\", \"classes\", \"className\", \"fullSize\", \"readOnly\", \"disableSaveButton\", \"hideDeleteButton\"]);\n\n  return createElement(Grid, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.root, true), _defineProperty(_classNames, classes.basic, !fullSize), _defineProperty(_classNames, classes.fullSize, fullSize), _classNames), className),\n    container: true,\n    alignItems: \"center\"\n  }, restProps), createElement(CommandButton, {\n    onExecute: onCancelButtonClick,\n    getMessage: getMessage,\n    id: CANCEL_BUTTON\n  }), !readOnly && createElement(Fragment, null, !hideDeleteButton && createElement(Fragment, null, createElement(CommandButton, {\n    onExecute: onDeleteButtonClick,\n    getMessage: getMessage,\n    id: DELETE_BUTTON\n  }), createElement(\"div\", {\n    className: classes.line\n  })), createElement(CommandButton, {\n    getMessage: getMessage,\n    disabled: disableSaveButton,\n    onExecute: onCommitButtonClick,\n    id: SAVE_BUTTON\n  })), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$5.propTypes = {\n  commandButtonComponent: oneOfType([func, object]).isRequired,\n  classes: object.isRequired,\n  onCommitButtonClick: func.isRequired,\n  onCancelButtonClick: func.isRequired,\n  onDeleteButtonClick: func.isRequired,\n  getMessage: func.isRequired,\n  className: string,\n  fullSize: bool,\n  readOnly: bool,\n  children: node,\n  disableSaveButton: bool,\n  hideDeleteButton: bool\n} : void 0;\nLayoutBase$5.defaultProps = {\n  className: undefined,\n  children: undefined,\n  fullSize: false,\n  readOnly: false,\n  disableSaveButton: false,\n  hideDeleteButton: false\n};\nvar Layout$9 = withStyles(styles$x)(LayoutBase$5, {\n  name: 'Layout'\n});\n\nvar styles$y = function styles(_ref) {\n  var spacing = _ref.spacing,\n      palette = _ref.palette;\n  return {\n    button: {\n      padding: spacing(0.5, 3.5),\n      marginLeft: spacing(3),\n      height: spacing(4.5),\n      '&:first-child': {\n        marginLeft: 0\n      },\n      backgroundColor: ensureColor(300, palette.primary),\n      color: palette.primary.contrastText,\n      '&:hover': {\n        backgroundColor: ensureColor(400, palette.primary)\n      }\n    }\n  };\n};\n\nvar SaveButtonBase = memo(function (_ref2) {\n  var classes = _ref2.classes,\n      getMessage = _ref2.getMessage,\n      className = _ref2.className,\n      onExecute = _ref2.onExecute,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"getMessage\", \"className\", \"onExecute\"]);\n\n  return createElement(Button$1, _extends({\n    className: classNames(classes.button, className),\n    onClick: onExecute\n  }, restProps), getMessage('commitCommand'));\n});\nSaveButtonBase.propTypes = {\n  classes: object.isRequired,\n  className: string,\n  getMessage: func.isRequired,\n  onExecute: func.isRequired\n};\nSaveButtonBase.defaultProps = {\n  className: undefined\n};\nvar SaveButton = withStyles(styles$y)(SaveButtonBase, {\n  name: 'SaveButton'\n});\n\nvar styles$z = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    button: {\n      marginRight: spacing(0.5)\n    }\n  };\n};\n\nvar DeleteButtonBase = memo(function (_ref2) {\n  var onExecute = _ref2.onExecute,\n      className = _ref2.className,\n      classes = _ref2.classes,\n      restProps = _objectWithoutProperties(_ref2, [\"onExecute\", \"className\", \"classes\"]);\n\n  return createElement(IconButton, _extends({\n    className: classNames(classes.button, className),\n    onClick: onExecute\n  }, restProps), createElement(DeleteIcon, null));\n});\nDeleteButtonBase.propTypes = {\n  classes: object.isRequired,\n  className: string,\n  onExecute: func.isRequired\n};\nDeleteButtonBase.defaultProps = {\n  className: undefined\n};\nvar DeleteButton = withStyles(styles$z)(DeleteButtonBase, {\n  name: 'DeleteButton'\n});\n\nvar styles$A = function styles() {\n  return {\n    button: {\n      marginRight: 'auto'\n    }\n  };\n};\n\nvar CancelButtonBase = memo(function (_ref) {\n  var onExecute = _ref.onExecute,\n      className = _ref.className,\n      classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"onExecute\", \"className\", \"classes\"]);\n\n  return createElement(IconButton, _extends({\n    className: classNames(classes.button, className),\n    onClick: onExecute\n  }, restProps), createElement(CloseIcon, null));\n});\nCancelButtonBase.propTypes = {\n  classes: object.isRequired,\n  className: string,\n  onExecute: func.isRequired\n};\nCancelButtonBase.defaultProps = {\n  className: undefined\n};\nvar CancelButton = withStyles(styles$A)(CancelButtonBase, {\n  name: 'CancelButton'\n});\nvar CommandButton$1 = memo(function (_ref) {\n  var id = _ref.id,\n      getMessage = _ref.getMessage,\n      onExecute = _ref.onExecute,\n      restProps = _objectWithoutProperties(_ref, [\"id\", \"getMessage\", \"onExecute\"]);\n\n  switch (id) {\n    case SAVE_BUTTON:\n      return createElement(SaveButton, _extends({\n        getMessage: getMessage,\n        onExecute: onExecute\n      }, restProps));\n\n    case DELETE_BUTTON:\n      return createElement(DeleteButton, _extends({\n        onExecute: onExecute\n      }, restProps));\n\n    case CANCEL_BUTTON:\n      return createElement(CancelButton, _extends({\n        onExecute: onExecute\n      }, restProps));\n\n    default:\n      return null;\n  }\n});\nprocess.env.NODE_ENV !== \"production\" ? CommandButton$1.propTypes = {\n  id: string.isRequired,\n  onExecute: func.isRequired,\n  getMessage: func.isRequired\n} : void 0;\n\nvar styles$B = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    root: {\n      overflow: 'hidden',\n      paddingTop: spacing(2)\n    },\n    absolutePosition: {\n      position: 'absolute!important'\n    },\n    paper: {\n      outline: 'none'\n    },\n    fullSize: _defineProperty({\n      height: '100%',\n      width: '1150px',\n      '@media (min-width: 700px) and (max-width: 850px)': {\n        width: '700px'\n      },\n      '@media (min-width: 850px) and (max-width: 1000px)': {\n        width: '850px'\n      },\n      '@media (min-width: 1000px) and (max-width: 1150px)': {\n        width: '1000px'\n      }\n    }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      width: '100%',\n      maxWidth: '700px'\n    }),\n    halfSize: _defineProperty({\n      height: '100%',\n      width: '650px'\n    }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      width: '100%',\n      maxWidth: '700px'\n    }),\n    transition: {\n      transition: \"all \".concat(TRANSITIONS_TIME, \"ms cubic-bezier(0, 0, 0.2, 1)!important\")\n    }\n  };\n};\n\nvar OverlayBase = function OverlayBase(_ref2) {\n  var _classNames;\n\n  var children = _ref2.children,\n      visible = _ref2.visible,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      fullSize = _ref2.fullSize,\n      target = _ref2.target,\n      onHide = _ref2.onHide,\n      restProps = _objectWithoutProperties(_ref2, [\"children\", \"visible\", \"classes\", \"className\", \"fullSize\", \"target\", \"onHide\"]);\n\n  var _React$useState = useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      previouslyOpen = _React$useState2[0],\n      setPreviouslyOpen = _React$useState2[1];\n\n  var paperClasses = classNames((_classNames = {}, _defineProperty(_classNames, classes.absolutePosition, true), _defineProperty(_classNames, classes.paper, true), _defineProperty(_classNames, classes.fullSize, fullSize), _defineProperty(_classNames, classes.halfSize, !fullSize), _defineProperty(_classNames, classes.transition, visible && previouslyOpen), _classNames));\n  return createElement(Drawer, _extends({\n    className: classNames(classes.root, className),\n    PaperProps: {\n      className: paperClasses\n    },\n    BackdropProps: {\n      className: classes.absolutePosition\n    },\n    ModalProps: {\n      className: classes.absolutePosition,\n      container: target.current\n    },\n    SlideProps: {\n      onEntered: function onEntered() {\n        return setPreviouslyOpen(true);\n      },\n      onExited: function onExited() {\n        return setPreviouslyOpen(false);\n      }\n    },\n    open: visible,\n    variant: \"temporary\",\n    anchor: \"left\",\n    transitionDuration: TRANSITIONS_TIME,\n    onBackdropClick: onHide\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? OverlayBase.propTypes = {\n  children: node.isRequired,\n  classes: object.isRequired,\n  fullSize: bool.isRequired,\n  onHide: func.isRequired,\n  visible: bool,\n  className: string,\n  target: object\n} : void 0;\nOverlayBase.defaultProps = {\n  className: undefined,\n  visible: false,\n  target: null\n};\nvar Overlay$1 = withStyles(styles$B)(OverlayBase, {\n  name: 'Overlay'\n});\n\nvar styles$C = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    dateEditor: {\n      paddingBottom: spacing(1.5)\n    }\n  };\n};\n\nvar DateEditorBase = memo(function (_ref2) {\n  var classes = _ref2.classes,\n      onValueChange = _ref2.onValueChange,\n      value = _ref2.value,\n      readOnly = _ref2.readOnly,\n      className = _ref2.className,\n      locale = _ref2.locale,\n      excludeTime = _ref2.excludeTime,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"onValueChange\", \"value\", \"readOnly\", \"className\", \"locale\", \"excludeTime\"]);\n\n  var memoizedChangeHandler = useCallback(function (nextDate) {\n    return nextDate && onValueChange(nextDate.toDate());\n  }, [onValueChange]);\n  var dateFormat = excludeTime ? 'DD/MM/YYYY' : 'DD/MM/YYYY hh:mm A';\n  return createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    locale: locale\n  }, createElement(KeyboardDateTimePicker, _extends({\n    variant: \"inline\",\n    disabled: readOnly,\n    className: classNames(classes.dateEditor, className),\n    margin: \"normal\",\n    value: value,\n    onChange: memoizedChangeHandler,\n    format: dateFormat,\n    inputVariant: \"filled\",\n    hiddenLabel: true\n  }, restProps)));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateEditorBase.propTypes = {\n  classes: object.isRequired,\n  value: oneOfType([number, string, instanceOf(Date)]),\n  className: string,\n  readOnly: bool,\n  onValueChange: func.isRequired,\n  locale: oneOfType([string, arrayOf(string)]),\n  excludeTime: bool\n} : void 0;\nDateEditorBase.defaultProps = {\n  locale: 'en-US',\n  value: undefined,\n  className: undefined,\n  readOnly: false,\n  excludeTime: false\n};\nvar DateEditor = withStyles(styles$C)(DateEditorBase, {\n  name: 'DateEditor'\n});\n\nvar styles$D = function styles(theme) {\n  return {\n    label: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis'\n    },\n    titleLabel: {\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: theme.typography.fontSize + 5\n    }\n  };\n};\n\nvar LabelBase$1 = memo(function (_ref) {\n  var _classNames;\n\n  var classes = _ref.classes,\n      text = _ref.text,\n      className = _ref.className,\n      type = _ref.type,\n      restProps = _objectWithoutProperties(_ref, [\"classes\", \"text\", \"className\", \"type\"]);\n\n  return createElement(Typography, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.label, true), _defineProperty(_classNames, classes.titleLabel, type === TITLE), _classNames), className)\n  }, restProps), text);\n});\nLabelBase$1.propTypes = {\n  classes: object.isRequired,\n  text: string,\n  className: string,\n  type: string\n};\nLabelBase$1.defaultProps = {\n  text: undefined,\n  className: undefined,\n  type: ORDINARY_LABEL\n};\nvar Label$1 = withStyles(styles$D)(LabelBase$1, {\n  name: 'Label'\n});\nvar styles$E = {\n  label: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    userSelect: 'none'\n  }\n};\nvar BooleanEditorBase = memo(function (_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      readOnly = _ref.readOnly,\n      onValueChange = _ref.onValueChange,\n      classes = _ref.classes,\n      restProps = _objectWithoutProperties(_ref, [\"label\", \"value\", \"readOnly\", \"onValueChange\", \"classes\"]);\n\n  return createElement(FormControlLabel, _extends({\n    classes: {\n      label: classes.label\n    },\n    control: createElement(Checkbox, {\n      color: \"primary\",\n      checked: value,\n      onChange: function onChange(_ref2) {\n        var target = _ref2.target;\n        return onValueChange(target.checked);\n      }\n    }),\n    disabled: readOnly,\n    label: label\n  }, restProps));\n});\nBooleanEditorBase.propTypes = {\n  label: string,\n  readOnly: bool,\n  value: bool,\n  onValueChange: func.isRequired,\n  classes: object.isRequired\n};\nBooleanEditorBase.defaultProps = {\n  label: undefined,\n  readOnly: false,\n  value: false\n};\nvar BooleanEditor = withStyles(styles$E)(BooleanEditorBase, {\n  name: 'BooleanEditor'\n});\n\nvar styles$F = function styles(_ref) {\n  var typography = _ref.typography,\n      spacing = _ref.spacing;\n  return {\n    filledSelect: {\n      marginTop: spacing(0.375),\n      marginBottom: spacing(0.125)\n    },\n    menuItem: {\n      fontSize: typography.fontSize,\n      textTransform: 'uppercase'\n    }\n  };\n};\n\nvar FilledSelectBase = memo(function (_ref2) {\n  var value = _ref2.value,\n      availableOptions = _ref2.availableOptions,\n      onValueChange = _ref2.onValueChange,\n      readOnly = _ref2.readOnly,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"value\", \"availableOptions\", \"onValueChange\", \"readOnly\", \"classes\", \"className\"]);\n\n  var handleChange = function handleChange(event) {\n    if (event.target.value !== value) onValueChange(event.target.value);\n  };\n\n  return createElement(TextField, _extends({\n    select: true,\n    className: classNames(classes.filledSelect, className),\n    value: value,\n    onChange: handleChange,\n    margin: \"normal\",\n    variant: \"filled\",\n    hiddenLabel: true,\n    disabled: readOnly\n  }, restProps), availableOptions.map(function (option) {\n    return createElement(MenuItem, {\n      value: option.id,\n      key: option.id,\n      className: classes.menuItem\n    }, option.text);\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FilledSelectBase.propTypes = {\n  onValueChange: func,\n  classes: object.isRequired,\n  value: oneOfType([string, number]).isRequired,\n  availableOptions: arrayOf(shape({\n    id: oneOfType([string, number]),\n    text: string.isRequired\n  })),\n  readOnly: bool,\n  className: string\n} : void 0;\nFilledSelectBase.defaultProps = {\n  readOnly: false,\n  onValueChange: function onValueChange() {\n    return undefined;\n  },\n  availableOptions: [],\n  className: undefined\n};\nvar FilledSelect = withStyles(styles$F)(FilledSelectBase, {\n  name: 'FilledSelect'\n});\nvar Select = memo(function (_ref) {\n  var value = _ref.value,\n      availableOptions = _ref.availableOptions,\n      onValueChange = _ref.onValueChange,\n      readOnly = _ref.readOnly,\n      type = _ref.type,\n      restProps = _objectWithoutProperties(_ref, [\"value\", \"availableOptions\", \"onValueChange\", \"readOnly\", \"type\"]);\n\n  var ResultingSelect = type === STANDARD_SELECT ? FilledSelect : OutlinedSelect;\n  return createElement(ResultingSelect, _extends({\n    value: value,\n    availableOptions: availableOptions,\n    onValueChange: onValueChange,\n    readOnly: readOnly\n  }, restProps));\n});\nprocess.env.NODE_ENV !== \"production\" ? Select.propTypes = {\n  onValueChange: func.isRequired,\n  value: oneOfType([string, number]).isRequired,\n  availableOptions: arrayOf(shape({\n    id: oneOfType([string, number]),\n    text: string.isRequired\n  })),\n  readOnly: bool,\n  type: string\n} : void 0;\nSelect.defaultProps = {\n  readOnly: false,\n  availableOptions: [],\n  type: STANDARD_SELECT\n};\n\nvar styles$G = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    grid: {\n      marginTop: spacing(1.75)\n    },\n    label: {\n      width: '6.5em'\n    },\n    labelWithMargin: {\n      marginLeft: '1em',\n      width: 'calc((100% - 7.5em) * 4 / 7)'\n    },\n    textEditor: {\n      width: 'calc((100% - 7.5em) * 3 / 7)',\n      maxWidth: '8em'\n    }\n  };\n};\n\nvar IntervalEditorBase = function IntervalEditorBase(_ref2) {\n  var classes = _ref2.classes,\n      className = _ref2.className,\n      Label = _ref2.labelComponent,\n      TextEditor = _ref2.textEditorComponent,\n      repeatEveryLabel = _ref2.repeatEveryLabel,\n      repeatIntervalLabel = _ref2.repeatIntervalLabel,\n      readOnly = _ref2.readOnly,\n      interval = _ref2.interval,\n      changeRecurrenceInterval = _ref2.changeRecurrenceInterval,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"className\", \"labelComponent\", \"textEditorComponent\", \"repeatEveryLabel\", \"repeatIntervalLabel\", \"readOnly\", \"interval\", \"changeRecurrenceInterval\"]);\n\n  return createElement(Grid, _extends({\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    className: classNames(classes.grid, className)\n  }, restProps), createElement(Label, {\n    text: repeatEveryLabel,\n    className: classes.label\n  }), createElement(TextEditor, {\n    readOnly: readOnly,\n    value: interval,\n    className: classes.textEditor,\n    type: NUMBER_EDITOR,\n    onValueChange: changeRecurrenceInterval\n  }), createElement(Label, {\n    text: repeatIntervalLabel,\n    className: classes.labelWithMargin\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? IntervalEditorBase.propTypes = {\n  classes: object.isRequired,\n  className: string,\n  repeatEveryLabel: string.isRequired,\n  repeatIntervalLabel: string.isRequired,\n  readOnly: bool.isRequired,\n  interval: number,\n  changeRecurrenceInterval: func.isRequired,\n  labelComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired\n} : void 0;\nIntervalEditorBase.defaultProps = {\n  className: undefined,\n  interval: 1\n};\nvar IntervalEditor = withStyles(styles$G)(IntervalEditorBase, {\n  name: 'IntervalEditor'\n});\n\nvar Daily = function Daily(_ref) {\n  var weeklyRecurrenceSelectorComponent = _ref.weeklyRecurrenceSelectorComponent,\n      radioGroupComponent = _ref.radioGroupComponent,\n      textEditorComponent = _ref.textEditorComponent,\n      labelComponent = _ref.labelComponent,\n      getMessage = _ref.getMessage,\n      readOnly = _ref.readOnly,\n      onFieldChange = _ref.onFieldChange,\n      appointmentData = _ref.appointmentData,\n      selectComponent = _ref.selectComponent,\n      formatDate = _ref.formatDate,\n      firstDayOfWeek = _ref.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref, [\"weeklyRecurrenceSelectorComponent\", \"radioGroupComponent\", \"textEditorComponent\", \"labelComponent\", \"getMessage\", \"readOnly\", \"onFieldChange\", \"appointmentData\", \"selectComponent\", \"formatDate\", \"firstDayOfWeek\"]);\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeRecurrenceInterval = useCallback(function (interval) {\n    return checkIsNaturalNumber(interval) && onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        interval: interval\n      }))\n    });\n  }, [recurrenceOptions, onFieldChange]);\n  return createElement(IntervalEditor, _extends({\n    repeatEveryLabel: getMessage('repeatEveryLabel'),\n    repeatIntervalLabel: getMessage('daysLabel'),\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    changeRecurrenceInterval: changeRecurrenceInterval,\n    interval: recurrenceOptions.interval,\n    readOnly: readOnly\n  }, restProps));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Daily.propTypes = {\n  labelComponent: oneOfType([func, object]).isRequired,\n  radioGroupComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  weeklyRecurrenceSelectorComponent: oneOfType([func, object]).isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  onFieldChange: func,\n  getMessage: func.isRequired,\n  readOnly: bool,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nDaily.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  readOnly: false\n};\n\nvar styles$H = function styles(theme) {\n  return {\n    container: {\n      marginBottom: theme.spacing(2)\n    }\n  };\n};\n\nvar WeeklyBase = function WeeklyBase(_ref) {\n  var radioGroupComponent = _ref.radioGroupComponent,\n      textEditorComponent = _ref.textEditorComponent,\n      labelComponent = _ref.labelComponent,\n      classes = _ref.classes,\n      getMessage = _ref.getMessage,\n      readOnly = _ref.readOnly,\n      onFieldChange = _ref.onFieldChange,\n      appointmentData = _ref.appointmentData,\n      selectComponent = _ref.selectComponent,\n      WeeklyRecurrenceSelector = _ref.weeklyRecurrenceSelectorComponent,\n      formatDate = _ref.formatDate,\n      firstDayOfWeek = _ref.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref, [\"radioGroupComponent\", \"textEditorComponent\", \"labelComponent\", \"classes\", \"getMessage\", \"readOnly\", \"onFieldChange\", \"appointmentData\", \"selectComponent\", \"weeklyRecurrenceSelectorComponent\", \"formatDate\", \"firstDayOfWeek\"]);\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeRecurrenceInterval = useCallback(function (interval) {\n    return checkIsNaturalNumber(interval) && onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        interval: interval\n      }))\n    });\n  }, [recurrenceOptions, onFieldChange]);\n  return createElement(\"div\", restProps, createElement(IntervalEditor, _extends({\n    className: classes.container,\n    repeatEveryLabel: getMessage('repeatEveryLabel'),\n    repeatIntervalLabel: getMessage('weeksOnLabel'),\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    changeRecurrenceInterval: changeRecurrenceInterval,\n    interval: recurrenceOptions.interval,\n    readOnly: readOnly\n  }, restProps)), createElement(WeeklyRecurrenceSelector, {\n    rRule: appointmentData.rRule,\n    onValueChange: onFieldChange,\n    readOnly: readOnly,\n    formatDate: formatDate,\n    firstDayOfWeek: firstDayOfWeek\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? WeeklyBase.propTypes = {\n  labelComponent: oneOfType([func, object]).isRequired,\n  radioGroupComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  weeklyRecurrenceSelectorComponent: oneOfType([func, object]).isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  onFieldChange: func,\n  classes: object.isRequired,\n  getMessage: func.isRequired,\n  readOnly: bool,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nWeeklyBase.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  readOnly: false\n};\nvar Weekly = withStyles(styles$H)(WeeklyBase, {\n  name: 'Weekly'\n});\n\nvar styles$I = function styles(theme) {\n  return {\n    container: {\n      marginBottom: theme.spacing(1)\n    }\n  };\n};\n\nvar MonthlyBase = function MonthlyBase(_ref) {\n  var RadioGroup = _ref.radioGroupComponent,\n      textEditorComponent = _ref.textEditorComponent,\n      labelComponent = _ref.labelComponent,\n      classes = _ref.classes,\n      getMessage = _ref.getMessage,\n      readOnly = _ref.readOnly,\n      onFieldChange = _ref.onFieldChange,\n      appointmentData = _ref.appointmentData,\n      selectComponent = _ref.selectComponent,\n      weeklyRecurrenceSelectorComponent = _ref.weeklyRecurrenceSelectorComponent,\n      formatDate = _ref.formatDate,\n      firstDayOfWeek = _ref.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref, [\"radioGroupComponent\", \"textEditorComponent\", \"labelComponent\", \"classes\", \"getMessage\", \"readOnly\", \"onFieldChange\", \"appointmentData\", \"selectComponent\", \"weeklyRecurrenceSelectorComponent\", \"formatDate\", \"firstDayOfWeek\"]);\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeRecurrenceInterval = useCallback(function (interval) {\n    return checkIsNaturalNumber(interval) && onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        interval: interval\n      }))\n    });\n  }, [recurrenceOptions, onFieldChange]);\n  return createElement(\"div\", restProps, createElement(IntervalEditor, _extends({\n    className: classes.container,\n    repeatEveryLabel: getMessage('repeatEveryLabel'),\n    repeatIntervalLabel: getMessage('monthsLabel'),\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    changeRecurrenceInterval: changeRecurrenceInterval,\n    interval: recurrenceOptions.interval,\n    readOnly: readOnly\n  }, restProps)), createElement(RadioGroup, {\n    type: MONTHLY_RADIO_GROUP,\n    readOnly: readOnly,\n    getMessage: getMessage,\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    onFieldChange: onFieldChange,\n    appointmentData: appointmentData,\n    selectComponent: selectComponent,\n    formatDate: formatDate,\n    dateEditorComponent: function dateEditorComponent() {\n      return null;\n    },\n    firstDayOfWeek: firstDayOfWeek\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MonthlyBase.propTypes = {\n  labelComponent: oneOfType([func, object]).isRequired,\n  radioGroupComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  weeklyRecurrenceSelectorComponent: oneOfType([func, object]).isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  onFieldChange: func,\n  classes: object.isRequired,\n  getMessage: func.isRequired,\n  readOnly: bool,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nMonthlyBase.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  readOnly: false\n};\nvar Monthly = withStyles(styles$I)(MonthlyBase, {\n  name: 'Monthly'\n});\n\nvar styles$J = function styles(theme) {\n  return {\n    radioGroup: {\n      marginTop: theme.spacing(1)\n    }\n  };\n};\n\nvar YearlyBase = function YearlyBase(_ref) {\n  var RadioGroup = _ref.radioGroupComponent,\n      textEditorComponent = _ref.textEditorComponent,\n      labelComponent = _ref.labelComponent,\n      classes = _ref.classes,\n      getMessage = _ref.getMessage,\n      readOnly = _ref.readOnly,\n      onFieldChange = _ref.onFieldChange,\n      appointmentData = _ref.appointmentData,\n      selectComponent = _ref.selectComponent,\n      weeklyRecurrenceSelectorComponent = _ref.weeklyRecurrenceSelectorComponent,\n      formatDate = _ref.formatDate,\n      firstDayOfWeek = _ref.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref, [\"radioGroupComponent\", \"textEditorComponent\", \"labelComponent\", \"classes\", \"getMessage\", \"readOnly\", \"onFieldChange\", \"appointmentData\", \"selectComponent\", \"weeklyRecurrenceSelectorComponent\", \"formatDate\", \"firstDayOfWeek\"]);\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeRecurrenceInterval = useCallback(function (interval) {\n    return checkIsNaturalNumber(interval) && onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        interval: interval\n      }))\n    });\n  }, [recurrenceOptions, onFieldChange]);\n  return createElement(\"div\", restProps, createElement(IntervalEditor, _extends({\n    repeatEveryLabel: getMessage('repeatEveryLabel'),\n    repeatIntervalLabel: getMessage('yearsLabel'),\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    changeRecurrenceInterval: changeRecurrenceInterval,\n    interval: recurrenceOptions.interval,\n    readOnly: readOnly\n  }, restProps)), createElement(RadioGroup, {\n    type: YEARLY_RADIO_GROUP,\n    readOnly: readOnly,\n    getMessage: getMessage,\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    onFieldChange: onFieldChange,\n    appointmentData: appointmentData,\n    selectComponent: selectComponent,\n    formatDate: formatDate,\n    className: classes.radioGroup,\n    dateEditorComponent: function dateEditorComponent() {\n      return null;\n    },\n    firstDayOfWeek: firstDayOfWeek\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? YearlyBase.propTypes = {\n  labelComponent: oneOfType([func, object]).isRequired,\n  radioGroupComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  weeklyRecurrenceSelectorComponent: oneOfType([func, object]).isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  onFieldChange: func,\n  classes: object.isRequired,\n  getMessage: func.isRequired,\n  readOnly: bool,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nYearlyBase.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  readOnly: false\n};\nvar Yearly = withStyles(styles$J)(YearlyBase, {\n  name: 'Yearly'\n});\n\nvar styles$K = function styles(_ref) {\n  var _visible;\n\n  var spacing = _ref.spacing;\n  return {\n    root: _defineProperty({\n      padding: 0,\n      paddingTop: spacing(3),\n      overflow: 'hidden',\n      width: 0,\n      transition: \"all \".concat(TRANSITIONS_TIME, \"ms cubic-bezier(0, 0, 0.2, 1)\"),\n      boxSizing: 'border-box',\n      maxWidth: 0,\n      opacity: 0\n    }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      minWidth: '100%',\n      maxHeight: 0\n    }),\n    visible: (_visible = {\n      maxWidth: '500px',\n      width: '500px',\n      padding: spacing(3),\n      paddingRight: spacing(4),\n      paddingLeft: spacing(1),\n      opacity: 1\n    }, _defineProperty(_visible, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      width: '100%',\n      maxWidth: '700px',\n      paddingRight: spacing(2),\n      paddingLeft: spacing(2),\n      maxHeight: 1000\n    }), _defineProperty(_visible, '@media (min-width: 700px) and (max-width: 850px)', {\n      width: '300px'\n    }), _defineProperty(_visible, '@media (min-width: 850px) and (max-width: 1000px)', {\n      width: '370px'\n    }), _defineProperty(_visible, '@media (min-width: 1000px) and (max-width: 1150px)', {\n      width: '440px'\n    }), _visible),\n    invisible: {\n      maxHeight: 0,\n      '@media (min-width: 700px)': {\n        maxHeight: '500px'\n      }\n    },\n    label: {\n      width: '8em'\n    },\n    repeatLabel: {\n      marginBottom: spacing(0.375)\n    },\n    radioGroup: {\n      marginTop: spacing(0.5)\n    },\n    endRepeatLabel: {\n      marginTop: spacing(2)\n    },\n    select: {\n      height: '3.8em'\n    }\n  };\n};\n\nvar getLayoutComponent = function getLayoutComponent(recurrenceOptions) {\n  if (recurrenceOptions) {\n    switch (recurrenceOptions.freq) {\n      case RRULE_REPEAT_TYPES.DAILY:\n        return Daily;\n\n      case RRULE_REPEAT_TYPES.WEEKLY:\n        return Weekly;\n\n      case RRULE_REPEAT_TYPES.MONTHLY:\n        return Monthly;\n\n      case RRULE_REPEAT_TYPES.YEARLY:\n        return Yearly;\n    }\n  }\n\n  return function () {\n    return null;\n  };\n};\n\nvar LayoutBase$6 = function LayoutBase(_ref2) {\n  var _classNames;\n\n  var RadioGroup = _ref2.radioGroupComponent,\n      textEditorComponent = _ref2.textEditorComponent,\n      Label = _ref2.labelComponent,\n      dateEditorComponent = _ref2.dateEditorComponent,\n      Select = _ref2.selectComponent,\n      weeklyRecurrenceSelectorComponent = _ref2.weeklyRecurrenceSelectorComponent,\n      children = _ref2.children,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      getMessage = _ref2.getMessage,\n      readOnly = _ref2.readOnly,\n      onFieldChange = _ref2.onFieldChange,\n      appointmentData = _ref2.appointmentData,\n      formatDate = _ref2.formatDate,\n      locale = _ref2.locale,\n      visible = _ref2.visible,\n      firstDayOfWeek = _ref2.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref2, [\"radioGroupComponent\", \"textEditorComponent\", \"labelComponent\", \"dateEditorComponent\", \"selectComponent\", \"weeklyRecurrenceSelectorComponent\", \"children\", \"classes\", \"className\", \"getMessage\", \"readOnly\", \"onFieldChange\", \"appointmentData\", \"formatDate\", \"locale\", \"visible\", \"firstDayOfWeek\"]);\n\n  var recurrenceOptions = getRecurrenceOptions(appointmentData.rRule) || {};\n  var MainLayoutComponent = getLayoutComponent(recurrenceOptions);\n  var frequency = getFrequencyString(recurrenceOptions.freq);\n  var rRule = appointmentData.rRule,\n      startDate = appointmentData.startDate;\n  var changeFrequency = useCallback(function (repeatType) {\n    return handleChangeFrequency(repeatType, rRule, startDate, onFieldChange);\n  }, [rRule, startDate, onFieldChange]);\n  var selectOptions = useMemo(function () {\n    return getAvailableRecurrenceOptions(getMessage);\n  }, [getMessage]);\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.root, true), _defineProperty(_classNames, classes.visible, visible), _defineProperty(_classNames, classes.invisible, !visible), _defineProperty(_classNames, \"className\", className), _classNames))\n  }, restProps), createElement(Label, {\n    text: getMessage('repeatLabel'),\n    type: TITLE,\n    className: classes.repeatLabel\n  }), createElement(Select, {\n    onValueChange: changeFrequency,\n    availableOptions: selectOptions,\n    value: frequency,\n    type: OUTLINED_SELECT,\n    className: classes.select,\n    readOnly: readOnly\n  }), createElement(MainLayoutComponent, {\n    textEditorComponent: textEditorComponent,\n    labelComponent: Label,\n    getMessage: getMessage,\n    readOnly: readOnly,\n    radioGroupComponent: RadioGroup,\n    appointmentData: appointmentData,\n    onFieldChange: onFieldChange,\n    selectComponent: Select,\n    weeklyRecurrenceSelectorComponent: weeklyRecurrenceSelectorComponent,\n    formatDate: formatDate,\n    firstDayOfWeek: firstDayOfWeek\n  }), createElement(Label, {\n    text: getMessage('endRepeatLabel'),\n    className: classes.endRepeatLabel\n  }), createElement(RadioGroup, {\n    className: classes.radioGroup,\n    type: END_REPEAT_RADIO_GROUP,\n    readOnly: readOnly,\n    getMessage: getMessage,\n    textEditorComponent: textEditorComponent,\n    labelComponent: Label,\n    dateEditorComponent: dateEditorComponent,\n    appointmentData: appointmentData,\n    onFieldChange: onFieldChange,\n    selectComponent: Select,\n    formatDate: formatDate,\n    locale: locale,\n    firstDayOfWeek: firstDayOfWeek\n  }), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$6.propTypes = {\n  locale: oneOfType([string, arrayOf(string)]),\n  labelComponent: oneOfType([func, object]).isRequired,\n  radioGroupComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  dateEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  weeklyRecurrenceSelectorComponent: oneOfType([func, object]).isRequired,\n  onFieldChange: func,\n  children: node,\n  className: string,\n  classes: object.isRequired,\n  getMessage: func.isRequired,\n  readOnly: bool,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  formatDate: func.isRequired,\n  visible: bool.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nLayoutBase$6.defaultProps = {\n  locale: 'en-US',\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  className: undefined,\n  readOnly: false,\n  children: null\n};\nvar Layout$a = withStyles(styles$K)(LayoutBase$6, {\n  name: 'RecurrenceLayout'\n});\n\nvar styles$L = function styles(_ref) {\n  var spacing = _ref.spacing,\n      typography = _ref.typography;\n  return {\n    textEditor: {\n      width: 'calc(100% - 4.5em)'\n    },\n    label: {\n      width: '4.5em'\n    },\n    input: {\n      paddingBottom: spacing(2.75)\n    },\n    radioLabel: {\n      fontSize: typography.fontSize + 1\n    },\n    dateEditor: {\n      width: 'calc(100% - 4.5em)'\n    },\n    formControl: {\n      marginRight: 0\n    },\n    controlLabel: {\n      width: '100%'\n    }\n  };\n};\n\nvar EndRepeatEditorBase = function EndRepeatEditorBase(_ref2) {\n  var classes = _ref2.classes,\n      getMessage = _ref2.getMessage,\n      Label = _ref2.labelComponent,\n      TextEditor = _ref2.textEditorComponent,\n      DateEditor = _ref2.dateEditorComponent,\n      onFieldChange = _ref2.onFieldChange,\n      appointmentData = _ref2.appointmentData,\n      locale = _ref2.locale,\n      readOnly = _ref2.readOnly,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"getMessage\", \"labelComponent\", \"textEditorComponent\", \"dateEditorComponent\", \"onFieldChange\", \"appointmentData\", \"locale\", \"readOnly\"]);\n\n  var _React$useState = useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      count = _React$useState2[0],\n      setCount = _React$useState2[1];\n\n  var _React$useState3 = useState(appointmentData.endDate),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      endDate = _React$useState4[0],\n      setEndDate = _React$useState4[1];\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeRecurrenceCount = useCallback(function (nextCount) {\n    return checkIsNaturalNumber(nextCount) && onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        count: nextCount\n      }))\n    });\n  }, [recurrenceOptions, onFieldChange]);\n  var changeRecurrenceEndDate = useCallback(function (date) {\n    if (isDateValid(date)) {\n      onFieldChange({\n        rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n          until: date\n        }))\n      });\n    }\n  }, [recurrenceOptions, onFieldChange]);\n  var countEditorProps = useMemo(function () {\n    return {\n      endAdornment: createElement(InputAdornment, {\n        position: \"end\"\n      }, getMessage('occurrencesLabel'))\n    };\n  }, []);\n  var recurrenceCount = recurrenceOptions.count || count;\n  var recurrenceEndDate = recurrenceOptions.until || endDate;\n  var value;\n\n  if (recurrenceOptions.count) {\n    value = 'endAfter';\n  } else if (recurrenceOptions.until) {\n    value = 'endBy';\n  } else {\n    value = 'never';\n  }\n\n  var onRadioGroupValueChange = function onRadioGroupValueChange(event) {\n    var change;\n\n    switch (event.target.value) {\n      case 'endAfter':\n        setEndDate(recurrenceOptions.until || endDate);\n        change = {\n          count: count,\n          until: undefined\n        };\n        break;\n\n      case 'endBy':\n        setCount(recurrenceOptions.count || count);\n        change = {\n          count: undefined,\n          until: endDate\n        };\n        break;\n\n      case 'never':\n        setEndDate(recurrenceOptions.until || endDate);\n        setCount(recurrenceOptions.count || count);\n        change = {\n          count: undefined,\n          until: undefined\n        };\n        break;\n    }\n\n    onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {}, change))\n    });\n  };\n\n  return createElement(RadioGroup$1, _extends({\n    onChange: onRadioGroupValueChange,\n    value: value\n  }, restProps), createElement(FormControlLabel, {\n    value: \"never\",\n    control: createElement(Radio, {\n      color: \"primary\"\n    }),\n    label: getMessage('never'),\n    classes: {\n      label: classes.radioLabel\n    },\n    disabled: readOnly\n  }), createElement(FormControlLabel, {\n    className: classes.formControl,\n    value: \"endAfter\",\n    classes: {\n      label: classes.controlLabel\n    },\n    control: createElement(Radio, {\n      color: \"primary\"\n    }),\n    disabled: readOnly,\n    label: createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\"\n    }, createElement(Label, {\n      className: classes.label,\n      text: getMessage('onLabel')\n    }), createElement(TextEditor, {\n      readOnly: readOnly || value !== 'endAfter',\n      className: classes.textEditor,\n      value: recurrenceCount,\n      type: NUMBER_EDITOR,\n      onValueChange: changeRecurrenceCount,\n      InputProps: countEditorProps\n    }))\n  }), createElement(FormControlLabel, {\n    className: classes.formControl,\n    classes: {\n      label: classes.controlLabel\n    },\n    value: \"endBy\",\n    disabled: readOnly,\n    control: createElement(Radio, {\n      color: \"primary\"\n    }),\n    label: createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\"\n    }, createElement(Label, {\n      className: classes.label,\n      text: getMessage('afterLabel')\n    }), createElement(DateEditor, {\n      className: classes.dateEditor,\n      readOnly: readOnly || value !== 'endBy',\n      value: recurrenceEndDate,\n      onValueChange: changeRecurrenceEndDate,\n      allowKeyboardControl: false,\n      locale: locale,\n      excludeTime: appointmentData.allDay\n    }))\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? EndRepeatEditorBase.propTypes = {\n  labelComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  dateEditorComponent: oneOfType([func, object]).isRequired,\n  locale: oneOfType([string, arrayOf(string)]).isRequired,\n  classes: object.isRequired,\n  getMessage: func,\n  onFieldChange: func,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  readOnly: bool\n} : void 0;\nEndRepeatEditorBase.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  readOnly: false\n};\nvar EndRepeatEditor = withStyles(styles$L)(EndRepeatEditorBase, {\n  name: 'EndRepeatEditor'\n});\n\nvar styles$M = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    textEditor: {\n      width: 'calc((100% - 5.5em) * 3 / 7)',\n      maxWidth: '12em',\n      marginRight: '1em'\n    },\n    input: {\n      paddingBottom: spacing(2.75)\n    },\n    select: {\n      width: 'calc((100% - 5.5em) * 3 / 7)',\n      maxWidth: '8em'\n    },\n    longSelect: {\n      width: 'calc((100% - 5.5em) * 4 / 7)',\n      minWidth: 'calc(100% - 13.5em)',\n      marginLeft: '1em'\n    },\n    label: {\n      width: '4.5em'\n    },\n    longLabel: {\n      width: 'calc((100% - 5.5em) * 4 / 7)',\n      minWidth: 'calc(100% - 14em)'\n    },\n    grid: {\n      marginTop: spacing(1),\n      marginBottom: spacing(1)\n    },\n    formControl: {\n      marginRight: 0\n    },\n    controlLabel: {\n      width: '100%'\n    }\n  };\n};\n\nvar MonthlyEditorBase = function MonthlyEditorBase(_ref2) {\n  var classes = _ref2.classes,\n      getMessage = _ref2.getMessage,\n      Label = _ref2.labelComponent,\n      TextEditor = _ref2.textEditorComponent,\n      Select = _ref2.selectComponent,\n      readOnly = _ref2.readOnly,\n      appointmentData = _ref2.appointmentData,\n      formatDate = _ref2.formatDate,\n      onFieldChange = _ref2.onFieldChange,\n      firstDayOfWeek = _ref2.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"getMessage\", \"labelComponent\", \"textEditorComponent\", \"selectComponent\", \"readOnly\", \"appointmentData\", \"formatDate\", \"onFieldChange\", \"firstDayOfWeek\"]);\n\n  var _useState = useState(appointmentData.startDate.getDate()),\n      _useState2 = _slicedToArray(_useState, 2),\n      dayNumber = _useState2[0],\n      setDayNumber = _useState2[1];\n\n  var _useState3 = useState(Math.trunc((appointmentData.startDate.getDate() - 1) / 7)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateWeekNumber = _useState4[0],\n      setStateWeekNumber = _useState4[1];\n\n  var _useState5 = useState(appointmentData.startDate.getDay()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stateDayOfWeek = _useState6[0],\n      setStateDayOfWeek = _useState6[1];\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = React__default.useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeByMonthDay = React__default.useCallback(function (nextByMonthDay) {\n    return onFieldChange({\n      rRule: handleStartDateChange(nextByMonthDay, recurrenceOptions)\n    });\n  }, [recurrenceOptions]);\n\n  var _getRadioGroupDisplay = getRadioGroupDisplayData(recurrenceOptions, stateDayOfWeek, stateWeekNumber, dayNumber, 'onDayNumber', 'onDayOfWeek'),\n      dayOfWeek = _getRadioGroupDisplay.dayOfWeek,\n      weekNumber = _getRadioGroupDisplay.weekNumber,\n      dayNumberTextField = _getRadioGroupDisplay.dayNumberTextField,\n      value = _getRadioGroupDisplay.radioGroupValue;\n\n  var changeWeekNumber = React__default.useCallback(function (nextWeekNumber) {\n    return onFieldChange({\n      rRule: handleWeekNumberChange(nextWeekNumber, recurrenceOptions)\n    });\n  }, [recurrenceOptions]);\n  var weekNumbers = React__default.useMemo(function () {\n    return getWeekNumberLabels(getMessage);\n  }, [getMessage]);\n  var changeDayOfWeek = React__default.useCallback(function (nextDayOfWeek) {\n    return onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        byweekday: nextDayOfWeek > 0 ? nextDayOfWeek - 1 : 6\n      }))\n    });\n  }, [recurrenceOptions]);\n  var daysOfWeek = React__default.useMemo(function () {\n    return getDaysOfWeek(formatDate, firstDayOfWeek);\n  }, [formatDate, firstDayOfWeek]);\n  var onDayNumberReadOnly = readOnly || value !== 'onDayNumber';\n  var onDayOfWeekReadOnly = readOnly || value !== 'onDayOfWeek';\n\n  var onRadioGroupValueChange = function onRadioGroupValueChange(event) {\n    switch (event.target.value) {\n      case 'onDayNumber':\n        setStateWeekNumber(weekNumber);\n        setStateDayOfWeek(dayOfWeek);\n        onFieldChange({\n          rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n            bymonthday: dayNumber,\n            byweekday: undefined\n          }))\n        });\n        break;\n\n      case 'onDayOfWeek':\n        setDayNumber(recurrenceOptions.bymonthday || dayNumber);\n        onFieldChange({\n          rRule: handleToDayOfWeekChange(stateWeekNumber, stateDayOfWeek, recurrenceOptions)\n        });\n        break;\n    }\n  };\n\n  return React__default.createElement(RadioGroup$1, _extends({\n    onChange: onRadioGroupValueChange,\n    value: value\n  }, restProps), React__default.createElement(FormControlLabel, {\n    className: classes.formControl,\n    value: \"onDayNumber\",\n    control: React__default.createElement(Radio, {\n      color: \"primary\"\n    }),\n    disabled: readOnly,\n    label: React__default.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\",\n      className: classes.grid\n    }, React__default.createElement(Label, {\n      text: getMessage('onLabel'),\n      className: classes.label\n    }), React__default.createElement(TextEditor, {\n      readOnly: onDayNumberReadOnly,\n      value: dayNumberTextField,\n      className: classes.textEditor,\n      type: NUMBER_EDITOR,\n      onValueChange: changeByMonthDay\n    }), React__default.createElement(Label, {\n      text: getMessage('ofEveryMonthLabel'),\n      className: classes.longLabel\n    }))\n  }), React__default.createElement(FormControlLabel, {\n    value: \"onDayOfWeek\",\n    className: classes.formControl,\n    classes: {\n      label: classes.controlLabel\n    },\n    control: React__default.createElement(Radio, {\n      color: \"primary\"\n    }),\n    disabled: readOnly,\n    label: React__default.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\",\n      className: classes.grid\n    }, React__default.createElement(Label, {\n      text: getMessage('theLabel'),\n      className: classes.label\n    }), React__default.createElement(Select, {\n      readOnly: onDayOfWeekReadOnly,\n      onValueChange: changeWeekNumber,\n      value: weekNumber,\n      availableOptions: weekNumbers,\n      className: classes.select\n    }), React__default.createElement(Select, {\n      readOnly: onDayOfWeekReadOnly,\n      onValueChange: changeDayOfWeek,\n      value: dayOfWeek,\n      availableOptions: daysOfWeek,\n      className: classes.longSelect\n    }))\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MonthlyEditorBase.propTypes = {\n  classes: object.isRequired,\n  getMessage: func,\n  onFieldChange: func,\n  labelComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  readOnly: bool,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nMonthlyEditorBase.defaultProps = {\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  readOnly: false\n};\nvar MonthlyEditor = withStyles(styles$M)(MonthlyEditorBase, {\n  name: 'MonthlyEditor'\n});\n\nvar styles$N = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    textEditor: {\n      width: 'calc((100% - 5.5em) * 4 / 7)',\n      minWidth: 'calc(100% - 13.5em)',\n      marginLeft: '1em'\n    },\n    label: {\n      width: '4.5em'\n    },\n    select: {\n      width: 'calc((100% - 5.5em) * 3 / 7)',\n      maxWidth: '8em'\n    },\n    formControl: {\n      marginRight: 0,\n      marginTop: spacing(1),\n      marginBottom: spacing(1)\n    },\n    controlLabel: {\n      width: '100%'\n    }\n  };\n};\n\nvar ChangeMonthEditorBase = React__default.memo(function (_ref2) {\n  var classes = _ref2.classes,\n      getMessage = _ref2.getMessage,\n      Label = _ref2.labelComponent,\n      TextEditor = _ref2.textEditorComponent,\n      Select = _ref2.selectComponent,\n      readOnly = _ref2.readOnly,\n      month = _ref2.month,\n      changeMonth = _ref2.changeMonth,\n      months = _ref2.months,\n      dayNumber = _ref2.dayNumber,\n      changeByMonthDay = _ref2.changeByMonthDay,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"getMessage\", \"labelComponent\", \"textEditorComponent\", \"selectComponent\", \"readOnly\", \"month\", \"changeMonth\", \"months\", \"dayNumber\", \"changeByMonthDay\", \"className\"]);\n\n  return React__default.createElement(FormControlLabel, _extends({\n    value: \"onDayAndMonth\",\n    className: classNames(classes.formControl, className),\n    classes: {\n      label: classes.controlLabel\n    },\n    control: React__default.createElement(Radio, {\n      color: \"primary\"\n    }),\n    disabled: readOnly\n  }, restProps, {\n    label: React__default.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\"\n    }, React__default.createElement(Label, {\n      text: getMessage('everyLabel'),\n      className: classes.label\n    }), React__default.createElement(Select, {\n      className: classes.select,\n      value: month,\n      onValueChange: changeMonth,\n      readOnly: readOnly,\n      availableOptions: months\n    }), React__default.createElement(TextEditor, {\n      className: classes.textEditor,\n      readOnly: readOnly,\n      value: dayNumber,\n      type: NUMBER_EDITOR,\n      onValueChange: changeByMonthDay\n    }))\n  }));\n});\nChangeMonthEditorBase.propTypes = {\n  classes: object.isRequired,\n  getMessage: func,\n  labelComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  readOnly: bool,\n  month: number.isRequired,\n  changeMonth: func.isRequired,\n  months: arrayOf(shape({\n    id: number.isRequired,\n    text: string.isRequired\n  })).isRequired,\n  dayNumber: number.isRequired,\n  changeByMonthDay: func.isRequired,\n  className: string\n};\nChangeMonthEditorBase.defaultProps = {\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  readOnly: false,\n  className: undefined\n};\nvar ChangeMonthEditor = withStyles(styles$N)(ChangeMonthEditorBase, {\n  name: 'ChangeMonthEditor'\n});\n\nvar styles$O = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    label: {\n      width: '4.5em'\n    },\n    select: {\n      width: 'calc((100% - 5.5em) * 3 / 7)',\n      maxWidth: '8em'\n    },\n    longSelect: {\n      width: 'calc((100% - 5.5em) * 4 / 7)',\n      minWidth: 'calc(100% - 13.5em)',\n      marginLeft: '1em'\n    },\n    formControlLabel: {\n      alignItems: 'flex-start'\n    },\n    formControl: {\n      marginRight: 0,\n      marginTop: spacing(1),\n      marginBottom: spacing(1)\n    },\n    doubleSelect: {\n      marginLeft: '4.5em',\n      width: 'calc(100% - 4.5em)',\n      marginTop: spacing(1)\n    },\n    radioButton: {\n      marginTop: spacing(0.75)\n    },\n    controlLabel: {\n      width: '100%'\n    }\n  };\n};\n\nvar ChangeWeekNumberEditorBase = React__default.memo(function (_ref2) {\n  var classes = _ref2.classes,\n      getMessage = _ref2.getMessage,\n      Label = _ref2.labelComponent,\n      Select = _ref2.selectComponent,\n      readOnly = _ref2.readOnly,\n      className = _ref2.className,\n      weekNumber = _ref2.weekNumber,\n      weekNumbers = _ref2.weekNumbers,\n      changeWeekNumber = _ref2.changeWeekNumber,\n      month = _ref2.month,\n      months = _ref2.months,\n      changeMonth = _ref2.changeMonth,\n      dayOfWeek = _ref2.dayOfWeek,\n      daysOfWeek = _ref2.daysOfWeek,\n      changeDayOfWeek = _ref2.changeDayOfWeek,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"getMessage\", \"labelComponent\", \"selectComponent\", \"readOnly\", \"className\", \"weekNumber\", \"weekNumbers\", \"changeWeekNumber\", \"month\", \"months\", \"changeMonth\", \"dayOfWeek\", \"daysOfWeek\", \"changeDayOfWeek\"]);\n\n  return React__default.createElement(FormControlLabel, _extends({\n    value: \"onDayOfWeek\",\n    className: classNames(classes.formControlLabel, classes.formControl, className),\n    classes: {\n      label: classes.controlLabel\n    },\n    control: React__default.createElement(Radio, {\n      color: \"primary\",\n      className: classes.radioButton\n    }),\n    disabled: readOnly\n  }, restProps, {\n    label: React__default.createElement(\"div\", null, React__default.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\"\n    }, React__default.createElement(Label, {\n      className: classes.label,\n      text: getMessage('theLabel')\n    }), React__default.createElement(Select, {\n      className: classes.select,\n      value: weekNumber,\n      onValueChange: changeWeekNumber,\n      readOnly: readOnly,\n      availableOptions: weekNumbers\n    }), React__default.createElement(Select, {\n      className: classes.longSelect,\n      value: dayOfWeek,\n      onValueChange: changeDayOfWeek,\n      readOnly: readOnly,\n      availableOptions: daysOfWeek\n    })), React__default.createElement(Select, {\n      className: classes.doubleSelect,\n      value: month,\n      onValueChange: changeMonth,\n      readOnly: readOnly,\n      availableOptions: months\n    }))\n  }));\n});\nChangeWeekNumberEditorBase.propTypes = {\n  classes: object.isRequired,\n  getMessage: func,\n  labelComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  readOnly: bool,\n  month: number.isRequired,\n  changeMonth: func.isRequired,\n  months: arrayOf(shape({\n    id: number.isRequired,\n    text: string.isRequired\n  })).isRequired,\n  weekNumber: number.isRequired,\n  changeWeekNumber: func.isRequired,\n  weekNumbers: arrayOf(shape({\n    id: number.isRequired,\n    text: string.isRequired\n  })).isRequired,\n  dayOfWeek: number.isRequired,\n  changeDayOfWeek: func.isRequired,\n  daysOfWeek: arrayOf(shape({\n    id: number.isRequired,\n    text: string.isRequired\n  })).isRequired,\n  className: string\n};\nChangeWeekNumberEditorBase.defaultProps = {\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  readOnly: false,\n  className: undefined\n};\nvar ChangeWeekNumberEditor = withStyles(styles$O)(ChangeWeekNumberEditorBase, {\n  name: 'ChangeWeekNumberEditor'\n});\n\nvar getCurrentMonth = function getCurrentMonth(recurrenceOptions, appointmentData) {\n  if (recurrenceOptions.bymonth) {\n    return recurrenceOptions.bymonth;\n  }\n\n  return appointmentData.startDate.getMonth() + 1;\n};\n\nvar YearlyEditor = function YearlyEditor(_ref) {\n  var getMessage = _ref.getMessage,\n      Label = _ref.labelComponent,\n      TextEditor = _ref.textEditorComponent,\n      Select = _ref.selectComponent,\n      readOnly = _ref.readOnly,\n      appointmentData = _ref.appointmentData,\n      formatDate = _ref.formatDate,\n      onFieldChange = _ref.onFieldChange,\n      firstDayOfWeek = _ref.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref, [\"getMessage\", \"labelComponent\", \"textEditorComponent\", \"selectComponent\", \"readOnly\", \"appointmentData\", \"formatDate\", \"onFieldChange\", \"firstDayOfWeek\"]);\n\n  var _useState = useState(appointmentData.startDate.getDate()),\n      _useState2 = _slicedToArray(_useState, 2),\n      dayNumber = _useState2[0],\n      setDayNumber = _useState2[1];\n\n  var _useState3 = useState(Math.trunc((appointmentData.startDate.getDate() - 1) / 7)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateWeekNumber = _useState4[0],\n      setStateWeekNumber = _useState4[1];\n\n  var _useState5 = useState(appointmentData.startDate.getDay()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stateDayOfWeek = _useState6[0],\n      setStateDayOfWeek = _useState6[1];\n\n  var rRule = appointmentData.rRule;\n  var recurrenceOptions = React__default.useMemo(function () {\n    return getRecurrenceOptions(rRule) || {};\n  }, [rRule]);\n  var changeByMonthDay = React__default.useCallback(function (nextByMonthDay) {\n    return onFieldChange({\n      rRule: handleStartDateChange(nextByMonthDay, recurrenceOptions)\n    });\n  }, [recurrenceOptions]);\n\n  var _getRadioGroupDisplay = getRadioGroupDisplayData(recurrenceOptions, stateDayOfWeek, stateWeekNumber, dayNumber, 'onDayAndMonth', 'onDayOfWeek'),\n      dayOfWeek = _getRadioGroupDisplay.dayOfWeek,\n      weekNumber = _getRadioGroupDisplay.weekNumber,\n      dayNumberTextField = _getRadioGroupDisplay.dayNumberTextField,\n      value = _getRadioGroupDisplay.radioGroupValue;\n\n  var month = getCurrentMonth(recurrenceOptions, appointmentData);\n  var changeMonth = React__default.useCallback(function (nextMonth) {\n    return onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        bymonth: nextMonth\n      }))\n    });\n  }, [recurrenceOptions]);\n  var months = React__default.useMemo(function () {\n    return getMonths(formatDate);\n  }, [formatDate]);\n  var monthsWithOf = React__default.useMemo(function () {\n    return getMonthsWithOf(getMessage, formatDate);\n  }, [getMessage, formatDate]);\n  var changeWeekNumber = React__default.useCallback(function (nextWeekNumber) {\n    return onFieldChange({\n      rRule: handleWeekNumberChange(nextWeekNumber, recurrenceOptions)\n    });\n  }, [recurrenceOptions]);\n  var weekNumbers = React__default.useMemo(function () {\n    return getWeekNumberLabels(getMessage);\n  }, [getMessage]);\n  var changeDayOfWeek = React__default.useCallback(function (nextDayOfWeek) {\n    return onFieldChange({\n      rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n        byweekday: nextDayOfWeek > 0 ? nextDayOfWeek - 1 : 6\n      }))\n    });\n  }, [recurrenceOptions]);\n  var daysOfWeek = React__default.useMemo(function () {\n    return getDaysOfWeek(formatDate, firstDayOfWeek);\n  }, [formatDate, firstDayOfWeek]);\n  var onDayAndMonthReadOnly = readOnly || value !== 'onDayAndMonth';\n  var onDayOfWeekReadOnly = readOnly || value !== 'onDayOfWeek';\n\n  var onRadioGroupValueChange = function onRadioGroupValueChange(event) {\n    switch (event.target.value) {\n      case 'onDayAndMonth':\n        setStateWeekNumber(weekNumber);\n        setStateDayOfWeek(dayOfWeek);\n        onFieldChange({\n          rRule: changeRecurrenceOptions(_objectSpread2({}, recurrenceOptions, {\n            bymonthday: dayNumber,\n            byweekday: undefined\n          }))\n        });\n        break;\n\n      case 'onDayOfWeek':\n        setDayNumber(recurrenceOptions.bymonthday || dayNumber);\n        onFieldChange({\n          rRule: handleToDayOfWeekChange(stateWeekNumber, stateDayOfWeek, recurrenceOptions)\n        });\n        break;\n    }\n  };\n\n  return React__default.createElement(RadioGroup$1, _extends({\n    onChange: onRadioGroupValueChange,\n    value: value\n  }, restProps), React__default.createElement(ChangeMonthEditor, {\n    getMessage: getMessage,\n    labelComponent: Label,\n    textEditorComponent: TextEditor,\n    selectComponent: Select,\n    readOnly: onDayAndMonthReadOnly,\n    month: month,\n    changeMonth: changeMonth,\n    months: months,\n    dayNumber: dayNumberTextField,\n    changeByMonthDay: changeByMonthDay\n  }), React__default.createElement(ChangeWeekNumberEditor, {\n    getMessage: getMessage,\n    labelComponent: Label,\n    selectComponent: Select,\n    readOnly: onDayOfWeekReadOnly,\n    month: month,\n    changeMonth: changeMonth,\n    months: monthsWithOf,\n    weekNumber: weekNumber,\n    weekNumbers: weekNumbers,\n    changeWeekNumber: changeWeekNumber,\n    dayOfWeek: dayOfWeek,\n    daysOfWeek: daysOfWeek,\n    changeDayOfWeek: changeDayOfWeek\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? YearlyEditor.propTypes = {\n  getMessage: func,\n  onFieldChange: func,\n  labelComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  formatDate: func.isRequired,\n  readOnly: bool,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nYearlyEditor.defaultProps = {\n  onFieldChange: function onFieldChange() {\n    return undefined;\n  },\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  readOnly: false\n};\n\nvar RadioGroup = function RadioGroup(_ref) {\n  var dateEditorComponent = _ref.dateEditorComponent,\n      textEditorComponent = _ref.textEditorComponent,\n      selectComponent = _ref.selectComponent,\n      labelComponent = _ref.labelComponent,\n      getMessage = _ref.getMessage,\n      readOnly = _ref.readOnly,\n      appointmentData = _ref.appointmentData,\n      formatDate = _ref.formatDate,\n      onFieldChange = _ref.onFieldChange,\n      type = _ref.type,\n      locale = _ref.locale,\n      firstDayOfWeek = _ref.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref, [\"dateEditorComponent\", \"textEditorComponent\", \"selectComponent\", \"labelComponent\", \"getMessage\", \"readOnly\", \"appointmentData\", \"formatDate\", \"onFieldChange\", \"type\", \"locale\", \"firstDayOfWeek\"]);\n\n  var commonProps = {\n    readOnly: readOnly,\n    getMessage: getMessage,\n    textEditorComponent: textEditorComponent,\n    labelComponent: labelComponent,\n    appointmentData: appointmentData,\n    onFieldChange: onFieldChange\n  };\n\n  switch (type) {\n    case END_REPEAT_RADIO_GROUP:\n      return createElement(EndRepeatEditor, _extends({\n        dateEditorComponent: dateEditorComponent,\n        locale: locale\n      }, commonProps, restProps));\n\n    case MONTHLY_RADIO_GROUP:\n      return createElement(MonthlyEditor, _extends({\n        selectComponent: selectComponent,\n        formatDate: formatDate,\n        firstDayOfWeek: firstDayOfWeek\n      }, commonProps, restProps));\n\n    case YEARLY_RADIO_GROUP:\n      return createElement(YearlyEditor, _extends({\n        selectComponent: selectComponent,\n        formatDate: formatDate,\n        firstDayOfWeek: firstDayOfWeek\n      }, commonProps, restProps));\n\n    default:\n      return function () {\n        return null;\n      };\n  }\n};\n\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  getMessage: func.isRequired,\n  labelComponent: oneOfType([func, object]).isRequired,\n  textEditorComponent: oneOfType([func, object]).isRequired,\n  dateEditorComponent: oneOfType([func, object]).isRequired,\n  selectComponent: oneOfType([func, object]).isRequired,\n  locale: oneOfType([string, arrayOf(string)]),\n  readOnly: bool,\n  type: string.isRequired,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }).isRequired,\n  onFieldChange: func.isRequired,\n  formatDate: func.isRequired,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nRadioGroup.defaultProps = {\n  locale: undefined,\n  readOnly: false\n};\n\nvar styles$P = function styles(_ref) {\n  var palette = _ref.palette,\n      spacing = _ref.spacing;\n  return {\n    selectedButton: {\n      backgroundColor: ensureColor(400, palette.primary),\n      '&:hover': {\n        backgroundColor: ensureColor(500, palette.primary)\n      },\n      border: \"1px solid \".concat(ensureColor(400, palette.primary), \"!important\"),\n      borderLeft: \"1px solid \".concat(ensureColor(50, palette.primary), \"!important\"),\n      '&:first-child': {\n        borderLeft: \"1px solid \".concat(ensureColor(400, palette.primary), \"!important\")\n      },\n      color: ensureColor(50, palette.primary)\n    },\n    button: {\n      minWidth: spacing(3)\n    },\n    buttonGroup: {\n      marginBottom: spacing(2)\n    }\n  };\n};\n\nvar isCurrentWeekDay = function isCurrentWeekDay(recurrenceOptions, weekDay) {\n  return recurrenceOptions.byweekday && recurrenceOptions.byweekday.indexOf(weekDay) > -1;\n};\n\nvar WeeklyRecurrenceSelectorBase = React__default.memo(function (_ref2) {\n  var formatDate = _ref2.formatDate,\n      rRule = _ref2.rRule,\n      readOnly = _ref2.readOnly,\n      classes = _ref2.classes,\n      className = _ref2.className,\n      onValueChange = _ref2.onValueChange,\n      firstDayOfWeek = _ref2.firstDayOfWeek,\n      restProps = _objectWithoutProperties(_ref2, [\"formatDate\", \"rRule\", \"readOnly\", \"classes\", \"className\", \"onValueChange\", \"firstDayOfWeek\"]);\n\n  var recurrenceOptions = getRecurrenceOptions(rRule);\n  var daysOfWeekArray = getDaysOfWeekArray(firstDayOfWeek);\n  var daysOfWeekDates = getDaysOfWeekDates(firstDayOfWeek);\n  return React__default.createElement(ButtonGroup, _extends({\n    variant: \"outlined\",\n    size: \"small\",\n    disabled: readOnly,\n    className: classNames(classes.buttonGroup, className),\n    fullWidth: true\n  }, restProps), daysOfWeekArray.map(function (dayOfWeek, index) {\n    var _classNames;\n\n    return React__default.createElement(Button$1, {\n      className: classNames((_classNames = {}, _defineProperty(_classNames, classes.button, true), _defineProperty(_classNames, classes.selectedButton, isCurrentWeekDay(recurrenceOptions, dayOfWeek)), _classNames)),\n      key: dayOfWeek,\n      onClick: function onClick() {\n        return onValueChange({\n          rRule: changeRecurrenceOptions(handleWeekDaysChange(recurrenceOptions, dayOfWeek, onValueChange))\n        });\n      }\n    }, formatDate(daysOfWeekDates[index], WEEK_DAY_OPTIONS));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? WeeklyRecurrenceSelectorBase.propTypes = {\n  formatDate: func.isRequired,\n  classes: object.isRequired,\n  rRule: string.isRequired,\n  onValueChange: func,\n  readOnly: bool,\n  className: string,\n  firstDayOfWeek: number.isRequired\n} : void 0;\nWeeklyRecurrenceSelectorBase.defaultProps = {\n  onValueChange: function onValueChange() {\n    return undefined;\n  },\n  readOnly: false,\n  className: undefined\n};\nvar WeeklyRecurrenceSelector = withStyles(styles$P)(WeeklyRecurrenceSelectorBase, {\n  name: 'WeeklyRecurrenceSelector'\n});\nvar styles$Q = {\n  container: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\nvar OverlayContainerBase = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"classes\", \"className\"]);\n\n  return createElement(\"div\", _extends({\n    ref: ref,\n    className: classNames(classes.container, className)\n  }, restProps), children);\n});\nOverlayContainerBase.propTypes = {\n  classes: object.isRequired,\n  children: node,\n  className: string\n};\nOverlayContainerBase.defaultProps = {\n  children: null,\n  className: undefined\n};\nvar OverlayContainer = withStyles(styles$Q, {\n  name: 'OverlayContainer'\n})(OverlayContainerBase);\n\nvar getResourceInstance = function getResourceInstance(resourceInstances, id) {\n  return resourceInstances.find(function (item) {\n    return item.id === id;\n  });\n};\n\nvar useStyles$6 = makeStyles(function (_ref) {\n  var spacing = _ref.spacing;\n  return {\n    select: {\n      padding: spacing(1)\n    },\n    selectBox: {\n      minHeight: spacing(6.5),\n      width: '100%'\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      color: 'white',\n      margin: 2\n    },\n    resourceCircle: {\n      height: spacing(2),\n      width: spacing(2),\n      borderRadius: '50%',\n      marginRight: spacing(1)\n    },\n    itemContainer: {\n      display: 'flex',\n      padding: spacing(0.75)\n    },\n    circleContainer: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\nvar ResourceEditor = memo(function (_ref2) {\n  var readOnly = _ref2.readOnly,\n      resource = _ref2.resource,\n      appointmentResources = _ref2.appointmentResources,\n      onResourceChange = _ref2.onResourceChange,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"readOnly\", \"resource\", \"appointmentResources\", \"onResourceChange\", \"className\"]);\n\n  var classes = useStyles$6();\n  var values = appointmentResources.reduce(function (acc, resourceItem) {\n    return resourceItem.fieldName === resource.fieldName ? [].concat(_toConsumableArray(acc), [resourceItem.id]) : acc;\n  }, []);\n\n  var _onChange = function onChange(nextValue) {\n    onResourceChange(_defineProperty({}, resource.fieldName, nextValue));\n  };\n\n  return createElement(Select$1, _extends({\n    disabled: readOnly,\n    variant: \"outlined\",\n    value: values,\n    multiple: resource.allowMultiple,\n    onChange: function onChange(event) {\n      return _onChange(event.target.value);\n    },\n    className: classNames(classes.selectBox, className),\n    classes: {\n      select: classes.select\n    },\n    renderValue: function renderValue(selected) {\n      return resource.allowMultiple ? createElement(\"div\", {\n        className: classes.chips\n      }, selected.map(function (value) {\n        var resourceItem = getResourceInstance(resource.instances, value);\n        return createElement(Chip, {\n          key: value,\n          label: resourceItem.text,\n          className: classes.chip,\n          style: {\n            backgroundColor: getAppointmentColor(300, resourceItem.color)\n          }\n        });\n      })) : createElement(\"div\", {\n        className: classes.itemContainer\n      }, createElement(\"div\", {\n        className: classes.circleContainer\n      }, createElement(\"div\", {\n        className: classes.resourceCircle,\n        style: {\n          backgroundColor: getAppointmentColor(400, getResourceInstance(resource.instances, selected[0]).color)\n        }\n      })), getResourceInstance(resource.instances, selected[0]).text);\n    }\n  }, restProps), resource.instances.map(function (resourceItem) {\n    return createElement(MenuItem, {\n      key: resourceItem.id,\n      value: resourceItem.id\n    }, createElement(\"div\", {\n      className: classes.resourceCircle,\n      style: {\n        backgroundColor: getAppointmentColor(400, resourceItem.color)\n      }\n    }), resourceItem.text);\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ResourceEditor.propTypes = {\n  readOnly: bool,\n  appointmentResources: array,\n  onResourceChange: func,\n  resource: object,\n  className: string\n} : void 0;\nResourceEditor.defaultProps = {\n  className: undefined,\n  readOnly: false,\n  appointmentResources: [],\n  onResourceChange: function onResourceChange() {\n    return undefined;\n  },\n  resource: {}\n};\nvar AppointmentForm = withComponents({\n  Overlay: Overlay$1,\n  Layout: Layout$7,\n  TextEditor: TextEditor,\n  BasicLayout: Layout$8,\n  CommandLayout: Layout$9,\n  CommandButton: CommandButton$1,\n  DateEditor: DateEditor,\n  Label: Label$1,\n  BooleanEditor: BooleanEditor,\n  Select: Select,\n  RecurrenceLayout: Layout$a,\n  RadioGroup: RadioGroup,\n  WeeklyRecurrenceSelector: WeeklyRecurrenceSelector,\n  Container: OverlayContainer,\n  ResourceEditor: ResourceEditor\n})(AppointmentForm$1);\nvar draftStyles = makeStyles(function (theme) {\n  return {\n    appointment: {\n      boxShadow: theme.shadows[3],\n      cursor: 'move',\n      overflow: 'hidden',\n      backgroundColor: function backgroundColor(resources) {\n        return getAppointmentColor(600, getResourceColor(resources), theme.palette.primary);\n      },\n      border: 0\n    },\n    shadedAppointment: {\n      backgroundColor: function backgroundColor(resources) {\n        return getAppointmentColor(400, getResourceColor(resources), theme.palette.primary);\n      }\n    }\n  };\n});\nvar sourceStyles = makeStyles({\n  appointment: {\n    opacity: 0.5\n  }\n});\n\nvar DraftAppointment = function DraftAppointment(_ref) {\n  var _classNames;\n\n  var className = _ref.className,\n      resources = _ref.resources,\n      isShaded = _ref.isShaded,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"resources\", \"isShaded\"]);\n\n  var classes = draftStyles(resources);\n  return createElement(AppointmentBase, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.appointment, true), _defineProperty(_classNames, classes.shadedAppointment, isShaded), _classNames), className),\n    resources: resources\n  }, restProps));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? DraftAppointment.propTypes = {\n  resources: array,\n  className: string,\n  isShaded: bool\n} : void 0;\nDraftAppointment.defaultProps = {\n  className: undefined,\n  resources: [],\n  isShaded: false\n};\n\nvar SourceAppointment = function SourceAppointment(_ref2) {\n  var className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"className\"]);\n\n  var classes = sourceStyles();\n  return createElement(AppointmentBase, _extends({\n    className: classNames(classes.appointment, className)\n  }, restProps));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SourceAppointment.propTypes = {\n  className: string\n} : void 0;\nSourceAppointment.defaultProps = {\n  className: undefined\n};\n\nvar AppointmentBase = function AppointmentBase(_ref3) {\n  var className = _ref3.className,\n      data = _ref3.data,\n      formatDate = _ref3.formatDate,\n      type = _ref3.type,\n      fromPrev = _ref3.fromPrev,\n      toNext = _ref3.toNext,\n      durationType = _ref3.durationType,\n      isShaded = _ref3.isShaded,\n      restProps = _objectWithoutProperties(_ref3, [\"className\", \"data\", \"formatDate\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"isShaded\"]);\n\n  return createElement(Appointment, _extends({\n    className: className,\n    type: type,\n    isShaded: isShaded\n  }, restProps), fromPrev && createElement(SplitIndicator, {\n    position: POSITION_START,\n    appointmentType: type\n  }), createElement(AppointmentContent, {\n    data: data,\n    type: type,\n    recurringIconComponent: Repeat,\n    formatDate: formatDate,\n    durationType: durationType\n  }), toNext && createElement(SplitIndicator, {\n    position: POSITION_END,\n    appointmentType: type\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? AppointmentBase.propTypes = {\n  data: object.isRequired,\n  fromPrev: bool.isRequired,\n  toNext: bool.isRequired,\n  formatDate: func.isRequired,\n  durationType: string,\n  className: string,\n  type: string,\n  isShaded: bool\n} : void 0;\nAppointmentBase.defaultProps = {\n  durationType: undefined,\n  className: undefined,\n  type: undefined,\n  isShaded: false\n};\nvar styles$R = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    height: '100%',\n    width: '100%',\n    cursor: 'move'\n  }\n};\nvar Container$2 = withStyles(styles$R, {\n  name: 'DragDropContainer'\n})(ContainerBase);\n\nvar verticalStyles$1 = function verticalStyles(spacing) {\n  return {\n    width: '100%',\n    height: spacing(1),\n    cursor: 'ns-resize'\n  };\n};\n\nvar horizontalStyles$1 = function horizontalStyles(spacing) {\n  return {\n    width: spacing(1),\n    height: '100%',\n    cursor: 'ew-resize'\n  };\n};\n\nvar styles$S = function styles(_ref) {\n  var spacing = _ref.spacing;\n  var vertical = verticalStyles$1(spacing);\n  var horizontal = horizontalStyles$1(spacing);\n  return {\n    resize: {\n      position: 'absolute',\n      zIndex: 100\n    },\n    verticalStart: _objectSpread2({}, vertical, {\n      top: 0\n    }),\n    verticalEnd: _objectSpread2({}, vertical, {\n      bottom: 0\n    }),\n    horizontalStart: _objectSpread2({}, horizontal, {\n      left: 0\n    }),\n    horizontalEnd: _objectSpread2({}, horizontal, {\n      right: 0\n    })\n  };\n};\n\nvar ResizeBase = memo(function (_ref2) {\n  var _classNames;\n\n  var classes = _ref2.classes,\n      className = _ref2.className,\n      position = _ref2.position,\n      appointmentType = _ref2.appointmentType,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\", \"className\", \"position\", \"appointmentType\"]);\n\n  var vertical = appointmentType === VERTICAL_TYPE;\n  var start = position === POSITION_START;\n  return createElement(\"div\", _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.resize, true), _defineProperty(_classNames, classes.verticalStart, vertical && start), _defineProperty(_classNames, classes.verticalEnd, vertical && !start), _defineProperty(_classNames, classes.horizontalStart, !vertical && start), _defineProperty(_classNames, classes.horizontalEnd, !vertical && !start), _classNames), className)\n  }, restProps));\n});\nprocess.env.NODE_ENV !== \"production\" ? ResizeBase.propTypes = {\n  classes: object.isRequired,\n  position: oneOf([POSITION_START, POSITION_END]).isRequired,\n  appointmentType: oneOf([HORIZONTAL_TYPE, VERTICAL_TYPE]).isRequired,\n  className: string\n} : void 0;\nResizeBase.defaultProps = {\n  className: undefined\n};\nvar Resize = withStyles(styles$S, {\n  name: 'Resize'\n})(ResizeBase);\nvar DragDropProvider = withComponents({\n  DraftAppointment: DraftAppointment,\n  SourceAppointment: SourceAppointment,\n  Container: Container$2,\n  Resize: Resize\n})(DragDropProvider$1);\n\nvar styles$T = function styles(_ref) {\n  var spacing = _ref.spacing;\n  return {\n    button: _defineProperty({\n      padding: spacing(0.8, 2),\n      marginLeft: spacing(0.5),\n      '&:first-child': {\n        marginLeft: 0\n      }\n    }, \"\".concat(LAYOUT_MEDIA_QUERY), {\n      fontSize: '0.75rem'\n    })\n  };\n};\n\nvar TodayButtonBase = function TodayButtonBase(_ref2) {\n  var setCurrentDate = _ref2.setCurrentDate,\n      classes = _ref2.classes,\n      getMessage = _ref2.getMessage,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, [\"setCurrentDate\", \"classes\", \"getMessage\", \"className\"]);\n\n  var handleClick = function handleClick() {\n    setCurrentDate(new Date());\n  };\n\n  return createElement(Button$1, _extends({\n    className: classNames(classes.button, className),\n    variant: \"outlined\",\n    onClick: handleClick\n  }, restProps), getMessage('today'));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? TodayButtonBase.propTypes = {\n  setCurrentDate: func.isRequired,\n  classes: object.isRequired,\n  className: string,\n  getMessage: func.isRequired\n} : void 0;\nTodayButtonBase.defaultProps = {\n  className: undefined\n};\nvar TodayButton = withStyles(styles$T)(TodayButtonBase, {\n  name: 'TodayButton'\n});\nvar TodayButton$1 = withComponents({\n  Button: TodayButton\n})(TodayButton$2);\nvar styles$U = {\n  modal: {\n    position: 'absolute!important'\n  },\n  paper: {\n    zIndex: '1302!important'\n  },\n  root: {\n    zIndex: '1301!important'\n  }\n};\n\nvar OverlayBase$1 = function OverlayBase(_ref) {\n  var children = _ref.children,\n      visible = _ref.visible,\n      onHide = _ref.onHide,\n      target = _ref.target,\n      classes = _ref.classes,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"visible\", \"onHide\", \"target\", \"classes\", \"className\"]);\n\n  return createElement(Dialog, _extends({\n    open: visible,\n    onClose: onHide,\n    className: classNames(classes.modal, classes.root, className),\n    BackdropProps: {\n      className: classes.modal\n    },\n    PaperProps: {\n      className: classes.paper\n    },\n    container: target.current,\n    onBackdropClick: onHide\n  }, restProps), children);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? OverlayBase$1.propTypes = {\n  children: node.isRequired,\n  classes: object.isRequired,\n  onHide: func.isRequired,\n  target: object.isRequired,\n  visible: bool,\n  className: string\n} : void 0;\nOverlayBase$1.defaultProps = {\n  className: undefined,\n  visible: false\n};\nvar Overlay$2 = withStyles(styles$U, {\n  name: 'Overlay'\n})(OverlayBase$1);\n\nvar styles$V = function styles(_ref) {\n  var typography = _ref.typography;\n  return _defineProperty({\n    title: typography.h6,\n    content: {\n      fontSize: '1rem'\n    }\n  }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n    title: {\n      fontSize: '1.1rem'\n    },\n    content: {\n      fontSize: '0.9rem'\n    }\n  });\n};\n\nvar LayoutBase$7 = memo(function (_ref3) {\n  var Button = _ref3.buttonComponent,\n      handleClose = _ref3.handleClose,\n      commit = _ref3.commit,\n      availableOperations = _ref3.availableOperations,\n      getMessage = _ref3.getMessage,\n      isDeleting = _ref3.isDeleting,\n      classes = _ref3.classes,\n      restProps = _objectWithoutProperties(_ref3, [\"buttonComponent\", \"handleClose\", \"commit\", \"availableOperations\", \"getMessage\", \"isDeleting\", \"classes\"]);\n\n  var _React$useState = useState(availableOperations[0].value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentValue = _React$useState2[0],\n      setCurrentValue = _React$useState2[1];\n\n  var handleChange = useCallback(function (event) {\n    setCurrentValue(event.target.value);\n  });\n\n  var onCommitButtonClick = function onCommitButtonClick() {\n    commit(currentValue);\n  };\n\n  return createElement(\"div\", restProps, createElement(DialogTitle, {\n    className: classes.title,\n    disableTypography: true\n  }, getMessage(isDeleting ? 'menuDeletingTitle' : 'menuEditingTitle')), createElement(DialogContent, null, createElement(RadioGroup$1, {\n    value: currentValue,\n    onChange: handleChange\n  }, availableOperations.map(function (operation) {\n    return createElement(FormControlLabel, {\n      value: operation.value,\n      control: createElement(Radio, null),\n      label: operation.title,\n      key: operation.value,\n      classes: {\n        label: classes.content\n      }\n    });\n  }))), createElement(DialogActions, null, createElement(Button, {\n    onClick: handleClose,\n    title: getMessage('cancelButton')\n  }), createElement(Button, {\n    onClick: onCommitButtonClick,\n    title: getMessage('commitButton'),\n    color: \"primary\"\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? LayoutBase$7.propTypes = {\n  buttonComponent: oneOfType([func, object]).isRequired,\n  availableOperations: array.isRequired,\n  handleClose: func,\n  commit: func,\n  getMessage: func,\n  isDeleting: bool,\n  classes: object.isRequired\n} : void 0;\nLayoutBase$7.defaultProps = {\n  handleClose: function handleClose() {\n    return undefined;\n  },\n  commit: function commit() {\n    return undefined;\n  },\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  isDeleting: false\n};\nvar Layout$b = withStyles(styles$V, {\n  name: 'Layout'\n})(LayoutBase$7);\n\nvar Button = function Button(_ref) {\n  var onClick = _ref.onClick,\n      title = _ref.title,\n      restProps = _objectWithoutProperties(_ref, [\"onClick\", \"title\"]);\n\n  return createElement(Button$1, _extends({\n    onClick: onClick\n  }, restProps), title);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  onClick: func.isRequired,\n  title: string\n} : void 0;\nButton.defaultProps = {\n  title: ''\n};\nvar EditRecurrenceMenu = withComponents({\n  Layout: Layout$b,\n  Overlay: Overlay$2,\n  Button: Button,\n  Container: OverlayContainer\n})(EditRecurrenceMenu$1);\n\nvar styles$W = function styles(_ref) {\n  var typography = _ref.typography;\n  return _defineProperty({\n    title: _objectSpread2({}, typography.h6)\n  }, \"\".concat(SMALL_LAYOUT_MEDIA_QUERY), {\n    title: {\n      fontSize: '1.1rem'\n    }\n  });\n};\n\nvar LayoutBase$8 = memo(function (_ref3) {\n  var Button = _ref3.buttonComponent,\n      handleCancel = _ref3.handleCancel,\n      handleConfirm = _ref3.handleConfirm,\n      getMessage = _ref3.getMessage,\n      isDeleting = _ref3.isDeleting,\n      appointmentData = _ref3.appointmentData,\n      classes = _ref3.classes,\n      restProps = _objectWithoutProperties(_ref3, [\"buttonComponent\", \"handleCancel\", \"handleConfirm\", \"getMessage\", \"isDeleting\", \"appointmentData\", \"classes\"]);\n\n  return createElement(\"div\", restProps, createElement(DialogTitle, {\n    className: classes.title,\n    disableTypography: true\n  }, getMessage(isDeleting ? 'confirmDeleteMessage' : 'confirmCancelMessage')), createElement(DialogActions, null, createElement(Button, {\n    onClick: handleCancel,\n    title: getMessage('cancelButton')\n  }), createElement(Button, {\n    onClick: handleConfirm,\n    title: getMessage(isDeleting ? 'deleteButton' : 'discardButton'),\n    color: \"primary\"\n  })));\n});\nLayoutBase$8.propTypes = {\n  buttonComponent: oneOfType([func, object]).isRequired,\n  handleCancel: func,\n  handleConfirm: func,\n  getMessage: func,\n  isDeleting: bool,\n  appointmentData: shape({\n    title: string,\n    startDate: instanceOf(Date),\n    endDate: instanceOf(Date),\n    rRule: string,\n    notes: string,\n    additionalInformation: string,\n    allDay: bool\n  }),\n  classes: object.isRequired\n};\nLayoutBase$8.defaultProps = {\n  handleCancel: function handleCancel() {\n    return undefined;\n  },\n  handleConfirm: function handleConfirm() {\n    return undefined;\n  },\n  getMessage: function getMessage() {\n    return undefined;\n  },\n  isDeleting: false,\n  appointmentData: {\n    startDate: new Date(),\n    endDate: new Date()\n  }\n};\nvar Layout$c = withStyles(styles$W, {\n  name: 'Layout'\n})(LayoutBase$8);\nvar ConfirmationDialog = withComponents({\n  Overlay: Overlay$2,\n  Layout: Layout$c,\n  Container: OverlayContainer,\n  Button: Button\n})(ConfirmationDialog$1);\nvar useStyles$7 = makeStyles(function (theme) {\n  return {\n    line: {\n      height: '2px',\n      width: '100%',\n      transform: 'translate(0, -1px)'\n    },\n    circle: {\n      width: theme.spacing(1.5),\n      height: theme.spacing(1.5),\n      borderRadius: '50%',\n      transform: 'translate(-50%, -50%)'\n    },\n    nowIndicator: {\n      position: 'absolute',\n      left: 0,\n      top: function top(_ref) {\n        var _top = _ref.top;\n        return _top;\n      },\n      background: theme.palette.secondary.main,\n      zIndex: 1\n    }\n  };\n});\n\nvar Indicator = function Indicator(_ref2) {\n  var top = _ref2.top,\n      restProps = _objectWithoutProperties(_ref2, [\"top\"]);\n\n  var classes = useStyles$7({\n    top: top\n  });\n  return createElement(\"div\", restProps, createElement(\"div\", {\n    className: classNames(classes.nowIndicator, classes.circle)\n  }), createElement(\"div\", {\n    className: classNames(classes.nowIndicator, classes.line)\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Indicator.propTypes = {\n  top: string\n} : void 0;\nIndicator.defaultProps = {\n  top: 0\n};\nvar CurrentTimeIndicator = withComponents({\n  Indicator: Indicator\n})(CurrentTimeIndicator$1);\n\nvar Resources = function Resources(_ref) {\n  var data = _ref.data,\n      mainResourceName = _ref.mainResourceName,\n      palette = _ref.palette;\n  return createElement(Resources$1, {\n    data: data,\n    mainResourceName: mainResourceName,\n    palette: palette\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? Resources.propTypes = {\n  data: array,\n  mainResourceName: string,\n  palette: array\n} : void 0;\nResources.defaultProps = {\n  data: [],\n  mainResourceName: undefined,\n  palette: DEFAULT_PALETTE\n};\n\nvar HorizontalLayout = function HorizontalLayout(_ref) {\n  var Row = _ref.rowComponent,\n      Cell = _ref.cellComponent,\n      groups = _ref.groups,\n      colSpan = _ref.colSpan,\n      cellStyle = _ref.cellStyle,\n      showHeaderForEveryDate = _ref.showHeaderForEveryDate,\n      restProps = _objectWithoutProperties(_ref, [\"rowComponent\", \"cellComponent\", \"groups\", \"colSpan\", \"cellStyle\", \"showHeaderForEveryDate\"]);\n\n  return createElement(Fragment, null, groups.map(function (groupRow, rowIndex) {\n    var cellColSpan = colSpan / groupRow.length;\n    return createElement(Row, _extends({\n      key: groups[rowIndex][0].text\n    }, restProps), !showHeaderForEveryDate && groupRow.map(function (group, index) {\n      return createElement(Cell, {\n        group: group,\n        colSpan: cellColSpan,\n        key: getCellKey(groups, index, rowIndex),\n        left: cellStyle.left,\n        endOfGroup: true,\n        groupedByDate: false\n      });\n    }), showHeaderForEveryDate && getRowFromGroups(colSpan, groupRow, cellStyle, groups, rowIndex).map(function (_ref2) {\n      var group = _ref2.group,\n          columnSpan = _ref2.colSpan,\n          key = _ref2.key,\n          endOfGroup = _ref2.endOfGroup;\n      return createElement(Cell, {\n        group: group,\n        colSpan: columnSpan,\n        key: key,\n        left: cellStyle.left,\n        endOfGroup: endOfGroup,\n        groupedByDate: true\n      });\n    }));\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HorizontalLayout.propTypes = {\n  rowComponent: oneOfType([func, object]).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  groups: arrayOf(arrayOf(object)).isRequired,\n  colSpan: number.isRequired,\n  cellStyle: object.isRequired,\n  showHeaderForEveryDate: bool\n} : void 0;\nHorizontalLayout.defaultProps = {\n  showHeaderForEveryDate: false\n};\nvar styles$X = {\n  layout: {\n    width: 'auto',\n    '&:only-child': {\n      width: '100%'\n    }\n  }\n};\n\nvar VerticalLayoutBase = function VerticalLayoutBase(_ref) {\n  var Row = _ref.rowComponent,\n      Cell = _ref.cellComponent,\n      groups = _ref.groups,\n      rowSpan = _ref.rowSpan,\n      viewType = _ref.viewType,\n      classes = _ref.classes,\n      className = _ref.className,\n      cellTextTopOffset = _ref.cellTextTopOffset,\n      restProps = _objectWithoutProperties(_ref, [\"rowComponent\", \"cellComponent\", \"groups\", \"rowSpan\", \"viewType\", \"classes\", \"className\", \"cellTextTopOffset\"]);\n\n  var timeTableCellHeight = BASIC_CELL_HEIGHT[viewType];\n  return createElement(Table$2, _extends({\n    className: classNames(classes.layout, className)\n  }, restProps), createElement(TableBody, null, groups[groups.length - 1].map(function (_, groupIndex) {\n    return createElement(Row, {\n      key: groupIndex.toString()\n    }, getVerticalRowFromGroups(groups, groupIndex, rowSpan, timeTableCellHeight).map(function (_ref2) {\n      var cellGroup = _ref2.group,\n          cellRowSpan = _ref2.rowSpan,\n          height = _ref2.height,\n          key = _ref2.key;\n      return createElement(Cell, {\n        group: cellGroup,\n        rowSpan: cellRowSpan,\n        height: height,\n        left: 0,\n        colSpan: 1,\n        groupOrientation: VERTICAL_GROUP_ORIENTATION,\n        topOffset: cellTextTopOffset,\n        key: key\n      });\n    }));\n  })));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? VerticalLayoutBase.propTypes = {\n  rowComponent: oneOfType([func, object]).isRequired,\n  cellComponent: oneOfType([func, object]).isRequired,\n  groups: arrayOf(arrayOf(object)).isRequired,\n  rowSpan: number.isRequired,\n  viewType: string.isRequired,\n  cellTextTopOffset: number,\n  className: string,\n  classes: object.isRequired\n} : void 0;\nVerticalLayoutBase.defaultProps = {\n  cellTextTopOffset: undefined,\n  className: undefined\n};\nvar VerticalLayout = withStyles(styles$X, {\n  name: 'VerticalLayout'\n})(VerticalLayoutBase);\nvar useStyles$8 = makeStyles(function (theme) {\n  return {\n    cell: {\n      userSelect: 'none',\n      padding: 0,\n      paddingTop: theme.spacing(0.5),\n      boxSizing: 'border-box',\n      borderRight: getBrightBorder(theme),\n      '&:last-child': {\n        borderRight: 'none'\n      },\n      height: function height(_ref) {\n        var _height = _ref.height;\n        return _height ? theme.spacing(_height) : undefined;\n      }\n    },\n    text: function text(_ref2) {\n      var textStyle = _ref2.textStyle,\n          height = _ref2.height,\n          left = _ref2.left;\n      return _objectSpread2({}, theme.typography.caption, {\n        padding: theme.spacing(1),\n        color: theme.palette.text.secondary,\n        fontWeight: 'bold',\n        fontSize: '1rem',\n        position: 'sticky',\n        display: 'inline-block',\n        left: \"\".concat(left, \"px\"),\n        lineHeight: 1.5,\n        maxHeight: height ? theme.spacing(height - 2) : undefined,\n        whiteSpace: 'pre-wrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxSizing: 'border-box'\n      }, textStyle);\n    },\n    horizontalCell: {\n      borderBottom: 'none',\n      borderTop: getBrightBorder(theme),\n      'tr:first-child &': {\n        borderTop: 'none'\n      }\n    },\n    verticalCell: function verticalCell(_ref3) {\n      var _ref4;\n\n      var rowSpan = _ref3.rowSpan;\n      return _ref4 = {\n        borderBottom: getBrightBorder(theme)\n      }, _defineProperty(_ref4, \"tr:nth-last-child(\".concat(rowSpan, \") &\"), {\n        borderBottom: 'none'\n      }), _defineProperty(_ref4, \"verticalAlign\", 'top'), _defineProperty(_ref4, \"paddingTop\", 0), _defineProperty(_ref4, \"width\", theme.spacing(GROUPING_PANEL_VERTICAL_CELL_WIDTH)), _defineProperty(_ref4, \"minWidth\", theme.spacing(GROUPING_PANEL_VERTICAL_CELL_WIDTH)), _defineProperty(_ref4, \"maxWidth\", theme.spacing(GROUPING_PANEL_VERTICAL_CELL_WIDTH)), _ref4;\n    },\n    groupedByDate: {\n      borderRight: function borderRight(_ref5) {\n        var endOfGroup = _ref5.endOfGroup;\n        return endOfGroup ? getBrightBorder(theme) : getBorder(theme);\n      },\n      borderTop: getBorder(theme)\n    },\n    verticalCellText: {\n      top: function top(_ref6) {\n        var topOffset = _ref6.topOffset;\n        return \"\".concat(topOffset, \"px\");\n      },\n      width: '100%'\n    },\n    textContainer: {\n      height: '100%'\n    }\n  };\n});\nvar Cell$6 = memo(function (_ref7) {\n  var _classNames, _classNames2;\n\n  var className = _ref7.className,\n      group = _ref7.group,\n      colSpan = _ref7.colSpan,\n      rowSpan = _ref7.rowSpan,\n      left = _ref7.left,\n      endOfGroup = _ref7.endOfGroup,\n      groupedByDate = _ref7.groupedByDate,\n      children = _ref7.children,\n      height = _ref7.height,\n      groupOrientation = _ref7.groupOrientation,\n      textStyle = _ref7.textStyle,\n      topOffset = _ref7.topOffset,\n      restProps = _objectWithoutProperties(_ref7, [\"className\", \"group\", \"colSpan\", \"rowSpan\", \"left\", \"endOfGroup\", \"groupedByDate\", \"children\", \"height\", \"groupOrientation\", \"textStyle\", \"topOffset\"]);\n\n  var cellHeight = height / DEFAULT_SPACING;\n  var classes = useStyles$8({\n    left: left,\n    endOfGroup: endOfGroup,\n    height: cellHeight,\n    rowSpan: rowSpan,\n    textStyle: textStyle,\n    topOffset: topOffset\n  });\n  return createElement(TableCell, _extends({\n    className: classNames((_classNames = {}, _defineProperty(_classNames, classes.cell, true), _defineProperty(_classNames, classes.horizontalCell, groupOrientation === HORIZONTAL_GROUP_ORIENTATION), _defineProperty(_classNames, classes.verticalCell, groupOrientation === VERTICAL_GROUP_ORIENTATION), _defineProperty(_classNames, classes.groupedByDate, groupedByDate && groupOrientation !== VERTICAL_GROUP_ORIENTATION), _classNames), className),\n    colSpan: colSpan,\n    rowSpan: rowSpan\n  }, restProps), createElement(\"div\", {\n    className: classes.textContainer\n  }, createElement(\"div\", {\n    className: classNames((_classNames2 = {}, _defineProperty(_classNames2, classes.text, true), _defineProperty(_classNames2, classes.verticalCellText, groupOrientation === VERTICAL_GROUP_ORIENTATION), _classNames2))\n  }, group.text, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Cell$6.propTypes = {\n  className: string,\n  group: object.isRequired,\n  colSpan: number.isRequired,\n  rowSpan: number,\n  left: number.isRequired,\n  endOfGroup: bool,\n  groupedByDate: bool,\n  height: number,\n  groupOrientation: oneOf([HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION]),\n  textStyle: object,\n  topOffset: number,\n  children: node\n} : void 0;\nCell$6.defaultProps = {\n  className: undefined,\n  endOfGroup: true,\n  rowSpan: 1,\n  height: 48,\n  groupOrientation: HORIZONTAL_GROUP_ORIENTATION,\n  children: null,\n  groupedByDate: true,\n  textStyle: {},\n  topOffset: undefined\n};\nvar useStyles$9 = makeStyles(function (theme) {\n  return {\n    cell: function cell(_ref) {\n      var _ref2;\n\n      var rowSpan = _ref.rowSpan;\n      return _ref2 = {\n        borderRight: getBorder(theme),\n        '&:last-child': {\n          borderRight: 'none',\n          width: '100%'\n        },\n        borderBottom: getBorder(theme)\n      }, _defineProperty(_ref2, \"tr:nth-last-child(\".concat(rowSpan, \") &\"), {\n        borderBottom: 'none'\n      }), _defineProperty(_ref2, \"verticalAlign\", 'middle'), _ref2;\n    }\n  };\n});\nvar AllDayCell = memo(function (_ref3) {\n  var className = _ref3.className,\n      group = _ref3.group,\n      rowSpan = _ref3.rowSpan,\n      height = _ref3.height,\n      restProps = _objectWithoutProperties(_ref3, [\"className\", \"group\", \"rowSpan\", \"height\"]);\n\n  var classes = useStyles$9({\n    rowSpan: rowSpan\n  });\n  return createElement(Cell$6, _extends({\n    className: classNames(classes.cell, className),\n    group: group,\n    colSpan: 1,\n    rowSpan: rowSpan,\n    left: 0,\n    height: height,\n    groupOrientation: VERTICAL_GROUP_ORIENTATION,\n    textStyle: {\n      fontWeight: 'normal',\n      fontSize: '0.8rem'\n    }\n  }, restProps));\n});\nprocess.env.NODE_ENV !== \"production\" ? AllDayCell.propTypes = {\n  className: string,\n  group: object.isRequired,\n  rowSpan: number,\n  height: number\n} : void 0;\nAllDayCell.defaultProps = {\n  className: undefined,\n  rowSpan: 1,\n  height: undefined\n};\nvar GroupingPanel = withComponents({\n  HorizontalLayout: HorizontalLayout,\n  VerticalLayout: VerticalLayout,\n  Cell: Cell$6,\n  AllDayCell: AllDayCell,\n  Row: Row\n})(GroupingPanel$1);\nexport { AllDayPanel, AppointmentForm, AppointmentTooltip, Appointments, ConfirmationDialog, CurrentTimeIndicator, DateNavigator, DayView, DragDropProvider, EditRecurrenceMenu, GroupingPanel, MonthView, Resources, Scheduler, TodayButton$1 as TodayButton, Toolbar$1 as Toolbar, ViewSwitcher, WeekView };","map":null,"metadata":{},"sourceType":"module"}